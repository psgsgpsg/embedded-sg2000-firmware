###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.1.52143/W32 for ARM     08/Jan/2012  13:10:29 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Libraries\STM32F2xx_ #
#                    StdPeriph_Driver\src\misc.c                              #
#    Command line =  E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Libraries\STM32F2xx_ #
#                    StdPeriph_Driver\src\misc.c -D USE_STDPERIPH_DRIVER -D   #
#                    STM32F2XX -D USE_STM3220F_EVAL -D USE_USB_OTG_FS -D      #
#                    RTC_CLOCK_SOURCE_LSE -lC E:\Work\Firmware\DTG\DTG_EMS_SY #
#                    STEM\Project\EWARM\STM3220F_EVAL\List\ -lA               #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\STM322 #
#                    0F_EVAL\List\ -o E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Pro #
#                    ject\EWARM\STM3220F_EVAL\Obj\ --no_cse --no_unroll       #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files\IAR        #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWAR #
#                    M\..\ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWA #
#                    RM\..\..\Libraries\CMSIS\CM3\CoreSupport\ -I             #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F2xx\ -I       #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\STM32F2xx_StdPeriph_Driver\inc\ -I             #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Utilities\STM32_EVAL\ -I E:\Work\Firmware\DTG\DTG_EMS_SY #
#                    STEM\Project\EWARM\..\..\Utilities\STM32_EVAL\Common\    #
#                    -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\ #
#                    ..\Utilities\STM32_EVAL\STM3220F_EVAL\ -I                #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\STM32_USB_OTG_Driver\inc\ -I                   #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\STM32_USB_Device_Library\Core\inc\ -I          #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\STM32_USB_Device_Library\Class\msc\inc\ -I     #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\Usb #
#                    \ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\. #
#                    .\Usb\Inc\ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Projec #
#                    t\EWARM\..\Usb\src\ -I E:\Work\Firmware\DTG\DTG_EMS_SYST #
#                    EM\Project\EWARM\..\..\Libraries\STM32_USB_HOST_Library\ #
#                    Core\inc\ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project #
#                    \EWARM\..\..\Libraries\STM32_USB_HOST_Library\Class\MSC\ #
#                    inc\ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWAR #
#                    M\..\..\Libraries\STM32_USB_Device_Library\Class\cdc\inc #
#                    \ -Ol --use_c++_inline                                   #
#    List file    =  E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\STM322 #
#                    0F_EVAL\List\misc.lst                                    #
#    Object file  =  E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\STM322 #
#                    0F_EVAL\Obj\misc.o                                       #
#                                                                             #
#                                                                             #
###############################################################################

E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Libraries\STM32F2xx_StdPeriph_Driver\src\misc.c
      1          /**
      2            ******************************************************************************
      3            * @file    misc.c
      4            * @author  MCD Application Team
      5            * @version V0.0.4
      6            * @date    13-January-2011
      7            * @brief   This file provides all the miscellaneous firmware functions (add-on
      8            *          to CMSIS functions).
      9            ******************************************************************************
     10            * @attention
     11            *
     12            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     13            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     14            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     15            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     16            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     17            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     18            *
     19            * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
     20            ******************************************************************************
     21            */
     22          
     23          /* Includes ------------------------------------------------------------------*/
     24          #include "misc.h"
     25          
     26          /** @addtogroup STM32F2xx_StdPeriph_Driver
     27            * @{
     28            */
     29          
     30          /** @defgroup MISC 
     31            * @brief MISC driver modules
     32            * @{
     33            */
     34          
     35          /** @defgroup MISC_Private_TypesDefinitions
     36            * @{
     37            */
     38          
     39          /**
     40            * @}
     41            */ 
     42          
     43          /** @defgroup MISC_Private_Defines
     44            * @{
     45            */
     46          
     47          #define AIRCR_VECTKEY_MASK    ((uint32_t)0x05FA0000)
     48          /**
     49            * @}
     50            */
     51          
     52          /** @defgroup MISC_Private_Macros
     53            * @{
     54            */
     55          
     56          /**
     57            * @}
     58            */
     59          
     60          /** @defgroup MISC_Private_Variables
     61            * @{
     62            */
     63          
     64          /**
     65            * @}
     66            */
     67          
     68          /** @defgroup MISC_Private_FunctionPrototypes
     69            * @{
     70            */
     71          
     72          /**
     73            * @}
     74            */
     75          
     76          /** @defgroup MISC_Private_Functions
     77            * @{
     78            */
     79          
     80          /**
     81            * @brief  Configures the priority grouping: pre-emption priority and subpriority.
     82            * @param  NVIC_PriorityGroup: specifies the priority grouping bits length. 
     83            *   This parameter can be one of the following values:
     84            *     @arg NVIC_PriorityGroup_0: 0 bits for pre-emption priority
     85            *                                4 bits for subpriority
     86            *     @arg NVIC_PriorityGroup_1: 1 bits for pre-emption priority
     87            *                                3 bits for subpriority
     88            *     @arg NVIC_PriorityGroup_2: 2 bits for pre-emption priority
     89            *                                2 bits for subpriority
     90            *     @arg NVIC_PriorityGroup_3: 3 bits for pre-emption priority
     91            *                                1 bits for subpriority
     92            *     @arg NVIC_PriorityGroup_4: 4 bits for pre-emption priority
     93            *                                0 bits for subpriority
     94            * @retval None
     95            */

   \                                 In section .text, align 2, keep-with-next
     96          void NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)
     97          {
     98            /* Check the parameters */
     99            assert_param(IS_NVIC_PRIORITY_GROUP(NVIC_PriorityGroup));
    100            
    101            /* Set the PRIGROUP[10:8] bits according to NVIC_PriorityGroup value */
    102            SCB->AIRCR = AIRCR_VECTKEY_MASK | NVIC_PriorityGroup;
   \                     NVIC_PriorityGroupConfig:
   \   00000000   ....               LDR.N    R1,??DataTable4  ;; 0x5fa0000
   \   00000002   0843               ORRS     R0,R1,R0
   \   00000004   ....               LDR.N    R1,??DataTable4_1  ;; 0xe000ed0c
   \   00000006   0860               STR      R0,[R1, #+0]
    103          }
   \   00000008   7047               BX       LR               ;; return
    104          
    105          /**
    106            * @brief  Initializes the NVIC peripheral according to the specified
    107            *   parameters in the NVIC_InitStruct.
    108            * @param  NVIC_InitStruct: pointer to a NVIC_InitTypeDef structure that contains
    109            *   the configuration information for the specified NVIC peripheral.
    110            * @retval None
    111            */

   \                                 In section .text, align 2, keep-with-next
    112          void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)
    113          {
   \                     NVIC_Init:
   \   00000000   10B4               PUSH     {R4}
    114            uint32_t tmppriority = 0x00, tmppre = 0x00, tmpsub = 0x0F;
   \   00000002   0021               MOVS     R1,#+0
   \   00000004   0022               MOVS     R2,#+0
   \   00000006   0F23               MOVS     R3,#+15
    115            
    116            /* Check the parameters */
    117            assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
    118            assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
    119            assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
    120              
    121            if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
   \   00000008   C478               LDRB     R4,[R0, #+3]
   \   0000000A   002C               CMP      R4,#+0
   \   0000000C   1ED0               BEQ.N    ??NVIC_Init_0
    122            {
    123              /* Compute the Corresponding IRQ Priority --------------------------------*/    
    124              tmppriority = (0x700 - ((SCB->AIRCR) & (uint32_t)0x700))>> 0x08;
   \   0000000E   ....               LDR.N    R1,??DataTable4_1  ;; 0xe000ed0c
   \   00000010   0968               LDR      R1,[R1, #+0]
   \   00000012   11F4E061           ANDS     R1,R1,#0x700
   \   00000016   D1F5E061           RSBS     R1,R1,#+1792
   \   0000001A   090A               LSRS     R1,R1,#+8
    125              tmppre = (0x4 - tmppriority);
   \   0000001C   D1F10402           RSBS     R2,R1,#+4
    126              tmpsub = tmpsub >> tmppriority;
   \   00000020   CB40               LSRS     R3,R3,R1
    127          
    128              tmppriority = (uint32_t)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
   \   00000022   4178               LDRB     R1,[R0, #+1]
   \   00000024   9140               LSLS     R1,R1,R2
    129              tmppriority |=  NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub;
   \   00000026   8278               LDRB     R2,[R0, #+2]
   \   00000028   1A40               ANDS     R2,R3,R2
   \   0000002A   1143               ORRS     R1,R2,R1
    130              tmppriority = tmppriority << 0x04;
   \   0000002C   0901               LSLS     R1,R1,#+4
    131                  
    132              NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel] = tmppriority;
   \   0000002E   0278               LDRB     R2,[R0, #+0]
   \   00000030   ....               LDR.N    R3,??DataTable4_2  ;; 0xe000e400
   \   00000032   D154               STRB     R1,[R2, R3]
    133              
    134              /* Enable the Selected IRQ Channels --------------------------------------*/
    135              NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
    136                (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
   \   00000034   0178               LDRB     R1,[R0, #+0]
   \   00000036   4911               ASRS     R1,R1,#+5
   \   00000038   ....               LDR.N    R2,??DataTable4_3  ;; 0xe000e100
   \   0000003A   0123               MOVS     R3,#+1
   \   0000003C   0078               LDRB     R0,[R0, #+0]
   \   0000003E   10F01F00           ANDS     R0,R0,#0x1F
   \   00000042   13FA00F0           LSLS     R0,R3,R0
   \   00000046   42F82100           STR      R0,[R2, R1, LSL #+2]
   \   0000004A   0AE0               B.N      ??NVIC_Init_1
    137            }
    138            else
    139            {
    140              /* Disable the Selected IRQ Channels -------------------------------------*/
    141              NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
    142                (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
   \                     ??NVIC_Init_0:
   \   0000004C   0178               LDRB     R1,[R0, #+0]
   \   0000004E   4911               ASRS     R1,R1,#+5
   \   00000050   ....               LDR.N    R2,??DataTable4_4  ;; 0xe000e180
   \   00000052   0123               MOVS     R3,#+1
   \   00000054   0078               LDRB     R0,[R0, #+0]
   \   00000056   10F01F00           ANDS     R0,R0,#0x1F
   \   0000005A   13FA00F0           LSLS     R0,R3,R0
   \   0000005E   42F82100           STR      R0,[R2, R1, LSL #+2]
    143            }
    144          }
   \                     ??NVIC_Init_1:
   \   00000062   10BC               POP      {R4}
   \   00000064   7047               BX       LR               ;; return
    145          
    146          /**
    147            * @brief  Sets the vector table location and Offset.
    148            * @param  NVIC_VectTab: specifies if the vector table is in RAM or FLASH memory.
    149            *   This parameter can be one of the following values:
    150            *     @arg NVIC_VectTab_RAM
    151            *     @arg NVIC_VectTab_FLASH
    152            * @param  Offset: Vector Table base offset field. This value must be a multiple of 0x100.
    153            * @retval None
    154            */

   \                                 In section .text, align 2, keep-with-next
    155          void NVIC_SetVectorTable(uint32_t NVIC_VectTab, uint32_t Offset)
    156          { 
    157            /* Check the parameters */
    158            assert_param(IS_NVIC_VECTTAB(NVIC_VectTab));
    159            assert_param(IS_NVIC_OFFSET(Offset));  
    160             
    161            SCB->VTOR = NVIC_VectTab | (Offset & (uint32_t)0x1FFFFF80);
   \                     NVIC_SetVectorTable:
   \   00000000   ....               LDR.N    R2,??DataTable4_5  ;; 0x1fffff80
   \   00000002   1140               ANDS     R1,R2,R1
   \   00000004   0843               ORRS     R0,R1,R0
   \   00000006   ....               LDR.N    R1,??DataTable4_6  ;; 0xe000ed08
   \   00000008   0860               STR      R0,[R1, #+0]
    162          }
   \   0000000A   7047               BX       LR               ;; return
    163          
    164          /**
    165            * @brief  Selects the condition for the system to enter low power mode.
    166            * @param  LowPowerMode: Specifies the new mode for the system to enter low power mode.
    167            *   This parameter can be one of the following values:
    168            *     @arg NVIC_LP_SEVONPEND
    169            *     @arg NVIC_LP_SLEEPDEEP
    170            *     @arg NVIC_LP_SLEEPONEXIT
    171            * @param  NewState: new state of LP condition. This parameter can be: ENABLE or DISABLE.
    172            * @retval None
    173            */

   \                                 In section .text, align 2, keep-with-next
    174          void NVIC_SystemLPConfig(uint8_t LowPowerMode, FunctionalState NewState)
    175          {
    176            /* Check the parameters */
    177            assert_param(IS_NVIC_LP(LowPowerMode));
    178            assert_param(IS_FUNCTIONAL_STATE(NewState));  
    179            
    180            if (NewState != DISABLE)
   \                     NVIC_SystemLPConfig:
   \   00000000   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000002   0029               CMP      R1,#+0
   \   00000004   06D0               BEQ.N    ??NVIC_SystemLPConfig_0
    181            {
    182              SCB->SCR |= LowPowerMode;
   \   00000006   ....               LDR.N    R1,??DataTable4_7  ;; 0xe000ed10
   \   00000008   0968               LDR      R1,[R1, #+0]
   \   0000000A   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0843               ORRS     R0,R0,R1
   \   0000000E   ....               LDR.N    R1,??DataTable4_7  ;; 0xe000ed10
   \   00000010   0860               STR      R0,[R1, #+0]
   \   00000012   06E0               B.N      ??NVIC_SystemLPConfig_1
    183            }
    184            else
    185            {
    186              SCB->SCR &= (uint32_t)(~(uint32_t)LowPowerMode);
   \                     ??NVIC_SystemLPConfig_0:
   \   00000014   ....               LDR.N    R1,??DataTable4_7  ;; 0xe000ed10
   \   00000016   0968               LDR      R1,[R1, #+0]
   \   00000018   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001A   31EA0000           BICS     R0,R1,R0
   \   0000001E   ....               LDR.N    R1,??DataTable4_7  ;; 0xe000ed10
   \   00000020   0860               STR      R0,[R1, #+0]
    187            }
    188          }
   \                     ??NVIC_SystemLPConfig_1:
   \   00000022   7047               BX       LR               ;; return
    189          
    190          /**
    191            * @brief  Configures the SysTick clock source.
    192            * @param  SysTick_CLKSource: specifies the SysTick clock source.
    193            *   This parameter can be one of the following values:
    194            *     @arg SysTick_CLKSource_HCLK_Div8: AHB clock divided by 8 selected as SysTick clock source.
    195            *     @arg SysTick_CLKSource_HCLK: AHB clock selected as SysTick clock source.
    196            * @retval None
    197            */

   \                                 In section .text, align 2, keep-with-next
    198          void SysTick_CLKSourceConfig(uint32_t SysTick_CLKSource)
    199          {
    200            /* Check the parameters */
    201            assert_param(IS_SYSTICK_CLK_SOURCE(SysTick_CLKSource));
    202            if (SysTick_CLKSource == SysTick_CLKSource_HCLK)
   \                     SysTick_CLKSourceConfig:
   \   00000000   0428               CMP      R0,#+4
   \   00000002   06D1               BNE.N    ??SysTick_CLKSourceConfig_0
    203            {
    204              SysTick->CTRL |= SysTick_CLKSource_HCLK;
   \   00000004   ....               LDR.N    R0,??DataTable4_8  ;; 0xe000e010
   \   00000006   0068               LDR      R0,[R0, #+0]
   \   00000008   50F00400           ORRS     R0,R0,#0x4
   \   0000000C   ....               LDR.N    R1,??DataTable4_8  ;; 0xe000e010
   \   0000000E   0860               STR      R0,[R1, #+0]
   \   00000010   05E0               B.N      ??SysTick_CLKSourceConfig_1
    205            }
    206            else
    207            {
    208              SysTick->CTRL &= SysTick_CLKSource_HCLK_Div8;
   \                     ??SysTick_CLKSourceConfig_0:
   \   00000012   ....               LDR.N    R0,??DataTable4_8  ;; 0xe000e010
   \   00000014   0068               LDR      R0,[R0, #+0]
   \   00000016   30F00400           BICS     R0,R0,#0x4
   \   0000001A   ....               LDR.N    R1,??DataTable4_8  ;; 0xe000e010
   \   0000001C   0860               STR      R0,[R1, #+0]
    209            }
    210          }
   \                     ??SysTick_CLKSourceConfig_1:
   \   0000001E   7047               BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0000FA05           DC32     0x5fa0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0CED00E0           DC32     0xe000ed0c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   00E400E0           DC32     0xe000e400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   00E100E0           DC32     0xe000e100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   80E100E0           DC32     0xe000e180

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   80FFFF1F           DC32     0x1fffff80

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   08ED00E0           DC32     0xe000ed08

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   10ED00E0           DC32     0xe000ed10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   10E000E0           DC32     0xe000e010
    211          
    212          /**
    213            * @}
    214            */
    215          
    216          /**
    217            * @}
    218            */
    219          
    220          /**
    221            * @}
    222            */
    223          
    224          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

     Function                 .cstack
     --------                 -------
     NVIC_Init                     4
     NVIC_PriorityGroupConfig      0
     NVIC_SetVectorTable           0
     NVIC_SystemLPConfig           0
     SysTick_CLKSourceConfig       0


   Section sizes:

     Function/Label           Bytes
     --------------           -----
     NVIC_PriorityGroupConfig   10
     NVIC_Init                 102
     NVIC_SetVectorTable        12
     NVIC_SystemLPConfig        36
     SysTick_CLKSourceConfig    32
     ??DataTable4                4
     ??DataTable4_1              4
     ??DataTable4_2              4
     ??DataTable4_3              4
     ??DataTable4_4              4
     ??DataTable4_5              4
     ??DataTable4_6              4
     ??DataTable4_7              4
     ??DataTable4_8              4

 
 228 bytes in section .text
 
 228 bytes of CODE memory

Errors: none
Warnings: none
