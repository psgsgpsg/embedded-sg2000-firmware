###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.1.52143/W32 for ARM     08/Jan/2012  13:10:33 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Libraries\STM32_USB_ #
#                    Device_Library\Core\src\usbd_desc.c                      #
#    Command line =  E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Libraries\STM32_USB_ #
#                    Device_Library\Core\src\usbd_desc.c -D                   #
#                    USE_STDPERIPH_DRIVER -D STM32F2XX -D USE_STM3220F_EVAL   #
#                    -D USE_USB_OTG_FS -D RTC_CLOCK_SOURCE_LSE -lC            #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\STM322 #
#                    0F_EVAL\List\ -lA E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Pr #
#                    oject\EWARM\STM3220F_EVAL\List\ -o                       #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\STM322 #
#                    0F_EVAL\Obj\ --no_cse --no_unroll --no_inline            #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files\IAR        #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWAR #
#                    M\..\ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWA #
#                    RM\..\..\Libraries\CMSIS\CM3\CoreSupport\ -I             #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F2xx\ -I       #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\STM32F2xx_StdPeriph_Driver\inc\ -I             #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Utilities\STM32_EVAL\ -I E:\Work\Firmware\DTG\DTG_EMS_SY #
#                    STEM\Project\EWARM\..\..\Utilities\STM32_EVAL\Common\    #
#                    -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\ #
#                    ..\Utilities\STM32_EVAL\STM3220F_EVAL\ -I                #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\STM32_USB_OTG_Driver\inc\ -I                   #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\STM32_USB_Device_Library\Core\inc\ -I          #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\STM32_USB_Device_Library\Class\msc\inc\ -I     #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\Usb #
#                    \ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\. #
#                    .\Usb\Inc\ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Projec #
#                    t\EWARM\..\Usb\src\ -I E:\Work\Firmware\DTG\DTG_EMS_SYST #
#                    EM\Project\EWARM\..\..\Libraries\STM32_USB_HOST_Library\ #
#                    Core\inc\ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project #
#                    \EWARM\..\..\Libraries\STM32_USB_HOST_Library\Class\MSC\ #
#                    inc\ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWAR #
#                    M\..\..\Libraries\STM32_USB_Device_Library\Class\cdc\inc #
#                    \ -Ol --use_c++_inline                                   #
#    List file    =  E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\STM322 #
#                    0F_EVAL\List\usbd_desc.lst                               #
#    Object file  =  E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\STM322 #
#                    0F_EVAL\Obj\usbd_desc.o                                  #
#                                                                             #
#                                                                             #
###############################################################################

E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Libraries\STM32_USB_Device_Library\Core\src\usbd_desc.c
      1          /**
      2            ******************************************************************************
      3            * @file    usbd_desc.c
      4            * @author  MCD Application Team
      5            * @version V0.0.1
      6            * @date    11/12/2010
      7            * @brief   This file provides the USBD descriptors and string formating method.
      8            ******************************************************************************
      9            * @copy
     10            *
     11            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     12            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     13            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     14            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     15            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     16            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     17            *
     18            * <h2><center>&copy; COPYRIGHT 2010 STMicroelectronics</center></h2>
     19            */ 
     20          
     21          /* Includes ------------------------------------------------------------------*/
     22          #include "usbd_core.h"
     23          #include "usbd_desc.h"
     24          #include "usbd_conf.h"
     25          #include "usb_regs.h"
     26          
     27          /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
     28            * @{
     29            */
     30          
     31          
     32          /** @defgroup USBD_DESC 
     33            * @brief USBD descriptors module
     34            * @{
     35            */ 
     36          
     37          /** @defgroup USBD_DESC_Private_TypesDefinitions
     38            * @{
     39            */ 
     40          /**
     41            * @}
     42            */ 
     43          
     44          
     45          /** @defgroup USBD_DESC_Private_Defines
     46            * @{
     47            */ 
     48          
     49          /**
     50            * @}
     51            */ 
     52          
     53          
     54          /** @defgroup USBD_DESC_Private_Macros
     55            * @{
     56            */ 
     57          /**
     58            * @}
     59            */ 
     60          
     61          
     62          /** @defgroup USBD_DESC_Private_Variables
     63            * @{
     64            */ 
     65          #ifdef USB_OTG_HS_INTERNAL_DMA_ENABLED 
     66          #pragma data_alignment =  4
     67          #endif

   \                                 In section .bss, align 4
     68          uint8_t USBD_StrDesc[USB_MAX_STR_DESC_SIZ];
   \                     USBD_StrDesc:
   \   00000000                      DS8 52

   \                                 In section .bss, align 4
     69          uint8_t USBD_OtherSpeedCfgDesc[USB_LEN_CFG_DESC]; 
   \                     USBD_OtherSpeedCfgDesc:
   \   00000000                      DS8 12
     70          
     71          /* USB Standard Device Descriptor */

   \                                 In section .data, align 4
     72          uint8_t USBD_DeviceDesc[USB_SIZ_DEVICE_DESC] =
   \                     USBD_DeviceDesc:
   \   00000000   120100020000       DC8 18, 1, 0, 2, 0, 0, 0, 64, 131, 4, 0, 0, 0, 2, 1, 2, 3, 1, 0, 0
   \              004083040000
   \              000201020301
   \              0000        
     73            {
     74              0x12,                       /*bLength */
     75              USB_DEVICE_DESCRIPTOR_TYPE, /*bDescriptorType*/
     76              0x00,                       /*bcdUSB */
     77              0x02,
     78              0x00,                       /*bDeviceClass*/
     79              0x00,                       /*bDeviceSubClass*/
     80              0x00,                       /*bDeviceProtocol*/
     81              USB_OTG_MAX_EP0_SIZE,      /*bMaxPacketSize*/
     82              LOBYTE(USBD_VID),           /*idVendor*/
     83              HIBYTE(USBD_VID),           /*idVendor*/
     84              0,                          /*idProduct*/
     85              0,                        
     86              0x00,                       /*bcdDevice rel. 2.00*/
     87              0x02,
     88              USBD_IDX_MFC_STR,           /*Index of manufacturer  string*/
     89              USBD_IDX_PRODUCT_STR,       /*Index of product string*/
     90              USBD_IDX_SERIAL_STR,        /*Index of serial number string*/
     91              USBD_CFG_MAX_NUM            /*bNumConfigurations*/
     92            }
     93            ; /* USB_DeviceDescriptor */
     94          
     95          
     96          /* USB Standard Device Descriptor */

   \                                 In section .data, align 4
     97          uint8_t USBD_DeviceQualifierDesc[USB_LEN_DEV_QUALIFIER_DESC] =
   \                     USBD_DeviceQualifierDesc:
   \   00000000   0A0600020000       DC8 10, 6, 0, 2, 0, 0, 0, 64, 1, 0, 0, 0
   \              004001000000
     98          {
     99            USB_LEN_DEV_QUALIFIER_DESC,
    100            USB_DESC_TYPE_DEVICE_QUALIFIER,
    101            0x00,
    102            0x02,
    103            0x00,
    104            0x00,
    105            0x00,
    106            0x40,
    107            0x01,
    108            0x00,
    109          };
    110          /**
    111            * @}
    112            */ 
    113          
    114          
    115          /** @defgroup USBD_DESC_Private_FunctionPrototypes
    116            * @{
    117            */ 
    118          static uint8_t USBD_GetLen(uint8_t *buf);
    119          /**
    120            * @}
    121            */ 
    122          
    123          
    124          /** @defgroup USBD_DESC_Private_Functions
    125            * @{
    126            */ 
    127          
    128          /**
    129            * @brief  USBD_GetString
    130            *         Convert Ascii string into unicode one
    131            * @param  desc : descriptor buffer
    132            * @param  unicode : Formatted string buffer (unicode)
    133            * @param  len : descriptor length
    134            * @retval None
    135            */

   \                                 In section .text, align 2, keep-with-next
    136          void USBD_GetString(uint8_t *desc, uint8_t *unicode, uint16_t *len)
    137          {
   \                     USBD_GetString:
   \   00000000   F8B5               PUSH     {R3-R7,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0D00               MOVS     R5,R1
   \   00000006   1700               MOVS     R7,R2
    138            uint8_t idx = 0;
   \   00000008   0026               MOVS     R6,#+0
    139            
    140            if (desc != NULL) 
   \   0000000A   002C               CMP      R4,#+0
   \   0000000C   1AD0               BEQ.N    ??USBD_GetString_0
    141            {
    142              *len =  USBD_GetLen(desc) * 2 + 2;    
   \   0000000E   2000               MOVS     R0,R4
   \   00000010   ........           BL       USBD_GetLen
   \   00000014   4000               LSLS     R0,R0,#+1
   \   00000016   801C               ADDS     R0,R0,#+2
   \   00000018   3880               STRH     R0,[R7, #+0]
    143              unicode[idx++] = *len;
   \   0000001A   F6B2               UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000001C   3888               LDRH     R0,[R7, #+0]
   \   0000001E   7055               STRB     R0,[R6, R5]
   \   00000020   761C               ADDS     R6,R6,#+1
    144              unicode[idx++] =  USB_DESC_TYPE_STRING;
   \   00000022   F6B2               UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000024   0320               MOVS     R0,#+3
   \   00000026   7055               STRB     R0,[R6, R5]
   \   00000028   761C               ADDS     R6,R6,#+1
   \   0000002A   08E0               B.N      ??USBD_GetString_1
    145              
    146              while (*desc != NULL) 
    147              {
    148                unicode[idx++] = *desc++;
   \                     ??USBD_GetString_2:
   \   0000002C   F6B2               UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000002E   2078               LDRB     R0,[R4, #+0]
   \   00000030   7055               STRB     R0,[R6, R5]
   \   00000032   641C               ADDS     R4,R4,#+1
   \   00000034   761C               ADDS     R6,R6,#+1
    149                unicode[idx++] =  0x00;
   \   00000036   F6B2               UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000038   0020               MOVS     R0,#+0
   \   0000003A   7055               STRB     R0,[R6, R5]
   \   0000003C   761C               ADDS     R6,R6,#+1
    150              }
   \                     ??USBD_GetString_1:
   \   0000003E   2078               LDRB     R0,[R4, #+0]
   \   00000040   0028               CMP      R0,#+0
   \   00000042   F3D1               BNE.N    ??USBD_GetString_2
    151            } 
    152          }
   \                     ??USBD_GetString_0:
   \   00000044   F1BD               POP      {R0,R4-R7,PC}    ;; return
    153          
    154          /**
    155            * @brief  USBD_GetLen
    156            *         return the string length
    157             * @param  buf : pointer to the ascii string buffer
    158            * @retval string length
    159            */

   \                                 In section .text, align 2, keep-with-next
    160          static uint8_t USBD_GetLen(uint8_t *buf)
    161          {
    162              uint8_t  len = 0;
   \                     USBD_GetLen:
   \   00000000   0021               MOVS     R1,#+0
   \   00000002   01E0               B.N      ??USBD_GetLen_0
    163          
    164              while (*buf != NULL) 
    165              {
    166                  len++;
   \                     ??USBD_GetLen_1:
   \   00000004   491C               ADDS     R1,R1,#+1
    167                  buf++;
   \   00000006   401C               ADDS     R0,R0,#+1
    168              }
   \                     ??USBD_GetLen_0:
   \   00000008   0278               LDRB     R2,[R0, #+0]
   \   0000000A   002A               CMP      R2,#+0
   \   0000000C   FAD1               BNE.N    ??USBD_GetLen_1
    169          
    170              return len;
   \   0000000E   0800               MOVS     R0,R1
   \   00000010   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000012   7047               BX       LR               ;; return
    171          }
    172          /**
    173            * @}
    174            */ 
    175          
    176          
    177          /**
    178            * @}
    179            */ 
    180          
    181          
    182          /**
    183            * @}
    184            */ 
    185          
    186          /******************* (C) COPYRIGHT 2010 STMicroelectronics *****END OF FILE****/
    187          

   Maximum stack usage in bytes:

     Function       .cstack
     --------       -------
     USBD_GetLen         0
     USBD_GetString     24


   Section sizes:

     Function/Label           Bytes
     --------------           -----
     USBD_StrDesc               52
     USBD_OtherSpeedCfgDesc     12
     USBD_DeviceDesc            20
     USBD_DeviceQualifierDesc   12
     USBD_GetString             70
     USBD_GetLen                20

 
 64 bytes in section .bss
 32 bytes in section .data
 90 bytes in section .text
 
 90 bytes of CODE memory
 96 bytes of DATA memory

Errors: none
Warnings: none
