###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.1.52143/W32 for ARM     08/Jan/2012  13:10:13 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Libraries\STM32_USB_ #
#                    HOST_Library\Core\src\usbh_ioreq.c                       #
#    Command line =  E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Libraries\STM32_USB_ #
#                    HOST_Library\Core\src\usbh_ioreq.c -D                    #
#                    USE_STDPERIPH_DRIVER -D STM32F2XX -D USE_STM3220F_EVAL   #
#                    -D USE_USB_OTG_FS -D RTC_CLOCK_SOURCE_LSE -lC            #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\STM322 #
#                    0F_EVAL\List\ -lA E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Pr #
#                    oject\EWARM\STM3220F_EVAL\List\ -o                       #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\STM322 #
#                    0F_EVAL\Obj\ --no_cse --no_unroll --no_inline            #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files\IAR        #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWAR #
#                    M\..\ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWA #
#                    RM\..\..\Libraries\CMSIS\CM3\CoreSupport\ -I             #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F2xx\ -I       #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\STM32F2xx_StdPeriph_Driver\inc\ -I             #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Utilities\STM32_EVAL\ -I E:\Work\Firmware\DTG\DTG_EMS_SY #
#                    STEM\Project\EWARM\..\..\Utilities\STM32_EVAL\Common\    #
#                    -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\ #
#                    ..\Utilities\STM32_EVAL\STM3220F_EVAL\ -I                #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\STM32_USB_OTG_Driver\inc\ -I                   #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\STM32_USB_Device_Library\Core\inc\ -I          #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\STM32_USB_Device_Library\Class\msc\inc\ -I     #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\Usb #
#                    \ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\. #
#                    .\Usb\Inc\ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Projec #
#                    t\EWARM\..\Usb\src\ -I E:\Work\Firmware\DTG\DTG_EMS_SYST #
#                    EM\Project\EWARM\..\..\Libraries\STM32_USB_HOST_Library\ #
#                    Core\inc\ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project #
#                    \EWARM\..\..\Libraries\STM32_USB_HOST_Library\Class\MSC\ #
#                    inc\ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWAR #
#                    M\..\..\Libraries\STM32_USB_Device_Library\Class\cdc\inc #
#                    \ -Ol --use_c++_inline                                   #
#    List file    =  E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\STM322 #
#                    0F_EVAL\List\usbh_ioreq.lst                              #
#    Object file  =  E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\STM322 #
#                    0F_EVAL\Obj\usbh_ioreq.o                                 #
#                                                                             #
#                                                                             #
###############################################################################

E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Libraries\STM32_USB_HOST_Library\Core\src\usbh_ioreq.c
      1          /** 
      2            ******************************************************************************
      3            * @file    usbh_ioreq.c 
      4            * @author  MCD Application Team
      5            * @version V2.0.0RC1
      6            * @date    18-March-2011
      7            * @brief   This file handles the issuing of the USB transactions
      8            ******************************************************************************
      9            * @attention
     10            *
     11            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     12            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     13            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     14            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     15            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     16            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     17            *
     18            * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
     19            ******************************************************************************
     20            */ 
     21          /* Includes ------------------------------------------------------------------*/
     22          
     23          #include "usbh_ioreq.h"
     24          
     25          /** @addtogroup USBH_LIB
     26            * @{
     27            */
     28          
     29          /** @addtogroup USBH_LIB_CORE
     30          * @{
     31          */
     32            
     33          /** @defgroup USBH_IOREQ 
     34            * @brief This file handles the standard protocol processing (USB v2.0)
     35            * @{
     36            */
     37          
     38          
     39          /** @defgroup USBH_IOREQ_Private_Defines
     40            * @{
     41            */ 
     42          /**
     43            * @}
     44            */ 
     45           
     46          
     47          /** @defgroup USBH_IOREQ_Private_TypesDefinitions
     48            * @{
     49            */ 
     50          /**
     51            * @}
     52            */ 
     53          
     54          
     55          
     56          /** @defgroup USBH_IOREQ_Private_Macros
     57            * @{
     58            */ 
     59          /**
     60            * @}
     61            */ 
     62          
     63          
     64          /** @defgroup USBH_IOREQ_Private_Variables
     65            * @{
     66            */ 
     67          /**
     68            * @}
     69            */ 
     70          
     71          
     72          /** @defgroup USBH_IOREQ_Private_FunctionPrototypes
     73            * @{
     74            */ 
     75          static USBH_Status USBH_SubmitSetupRequest(USBH_HOST *phost,
     76                                                     uint8_t* buff, 
     77                                                     uint16_t length);
     78          
     79          /**
     80            * @}
     81            */ 
     82          
     83          
     84          /** @defgroup USBH_IOREQ_Private_Functions
     85            * @{
     86            */ 
     87          
     88          
     89          /**
     90            * @brief  USBH_CtlReq
     91            *         USBH_CtlReq sends a control request and provide the status after 
     92            *            completion of the request
     93            * @param  pdev: Selected device
     94            * @param  req: Setup Request Structure
     95            * @param  buff: data buffer address to store the response
     96            * @param  length: length of the response
     97            * @retval Status
     98            */

   \                                 In section .text, align 2, keep-with-next
     99          USBH_Status USBH_CtlReq     (USB_OTG_CORE_HANDLE *pdev, 
    100                                       USBH_HOST           *phost, 
    101                                       uint8_t             *buff,
    102                                       uint16_t            length)
    103          {
   \                     USBH_CtlReq:
   \   00000000   F8B5               PUSH     {R3-R7,LR}
   \   00000002   0C00               MOVS     R4,R1
   \   00000004   1500               MOVS     R5,R2
   \   00000006   1E00               MOVS     R6,R3
    104            USBH_Status status;
    105            URB_STATE URB_Status = URB_IDLE;
   \   00000008   0027               MOVS     R7,#+0
    106            
    107            URB_Status = HCD_GetURB_State(pdev, phost->Control.hc_num_out); 
   \   0000000A   6179               LDRB     R1,[R4, #+5]
   \   0000000C   ........           BL       HCD_GetURB_State
   \   00000010   0700               MOVS     R7,R0
    108            
    109            status = USBH_BUSY;
   \   00000012   0120               MOVS     R0,#+1
    110            
    111            switch (phost->RequestState)
   \   00000014   E178               LDRB     R1,[R4, #+3]
   \   00000016   0129               CMP      R1,#+1
   \   00000018   02D0               BEQ.N    ??USBH_CtlReq_0
   \   0000001A   0229               CMP      R1,#+2
   \   0000001C   0AD0               BEQ.N    ??USBH_CtlReq_1
   \   0000001E   1EE0               B.N      ??USBH_CtlReq_2
    112            {
    113            case CMD_SEND:
    114              /* Start a SETUP transfer */
    115              USBH_SubmitSetupRequest(phost, buff, length);
   \                     ??USBH_CtlReq_0:
   \   00000020   3200               MOVS     R2,R6
   \   00000022   92B2               UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000024   2900               MOVS     R1,R5
   \   00000026   2000               MOVS     R0,R4
   \   00000028   ........           BL       USBH_SubmitSetupRequest
    116              phost->RequestState = CMD_WAIT;
   \   0000002C   0220               MOVS     R0,#+2
   \   0000002E   E070               STRB     R0,[R4, #+3]
    117              status = USBH_BUSY;
   \   00000030   0120               MOVS     R0,#+1
    118              break;
   \   00000032   14E0               B.N      ??USBH_CtlReq_3
    119              
    120            case CMD_WAIT:
    121              if  (URB_Status == URB_DONE)
   \                     ??USBH_CtlReq_1:
   \   00000034   FFB2               UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000036   012F               CMP      R7,#+1
   \   00000038   03D1               BNE.N    ??USBH_CtlReq_4
    122              {
    123                /* Commands successfully sent and Response Received  */       
    124                phost->RequestState = CMD_SEND;
   \   0000003A   0120               MOVS     R0,#+1
   \   0000003C   E070               STRB     R0,[R4, #+3]
    125                status = USBH_OK;
   \   0000003E   0020               MOVS     R0,#+0
   \   00000040   0CE0               B.N      ??USBH_CtlReq_5
    126              }
    127              else if  (URB_Status == URB_ERROR)
   \                     ??USBH_CtlReq_4:
   \   00000042   FFB2               UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000044   032F               CMP      R7,#+3
   \   00000046   03D1               BNE.N    ??USBH_CtlReq_6
    128              {
    129                /* Failure Mode */
    130                phost->RequestState = CMD_SEND;
   \   00000048   0120               MOVS     R0,#+1
   \   0000004A   E070               STRB     R0,[R4, #+3]
    131                status = USBH_FAIL;
   \   0000004C   0220               MOVS     R0,#+2
   \   0000004E   05E0               B.N      ??USBH_CtlReq_5
    132              }   
    133               else if  (URB_Status == URB_STALL)
   \                     ??USBH_CtlReq_6:
   \   00000050   FFB2               UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000052   042F               CMP      R7,#+4
   \   00000054   02D1               BNE.N    ??USBH_CtlReq_5
    134              {
    135                /* Commands successfully sent and Response Received  */       
    136                phost->RequestState = CMD_SEND;
   \   00000056   0120               MOVS     R0,#+1
   \   00000058   E070               STRB     R0,[R4, #+3]
    137                status = USBH_NOT_SUPPORTED;
   \   0000005A   0320               MOVS     R0,#+3
    138              }
    139              break;
   \                     ??USBH_CtlReq_5:
   \   0000005C   FFE7               B.N      ??USBH_CtlReq_3
    140              
    141            default:
    142              break; 
    143            }
    144            return status;
   \                     ??USBH_CtlReq_2:
   \                     ??USBH_CtlReq_3:
   \   0000005E   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000060   F2BD               POP      {R1,R4-R7,PC}    ;; return
    145          }
    146          
    147          /**
    148            * @brief  USBH_CtlSendSetup
    149            *         Sends the Setup Packet to the Device
    150            * @param  pdev: Selected device
    151            * @param  buff: Buffer pointer from which the Data will be send to Device
    152            * @param  hc_num: Host channel Number
    153            * @retval Status
    154            */

   \                                 In section .text, align 2, keep-with-next
    155          USBH_Status USBH_CtlSendSetup ( USB_OTG_CORE_HANDLE *pdev, 
    156                                          uint8_t *buff, 
    157                                          uint8_t hc_num){
   \                     USBH_CtlSendSetup:
   \   00000000   10B5               PUSH     {R4,LR}
    158            pdev->host.hc[hc_num].ep_is_in = 0;
   \   00000002   D2B2               UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000004   10EB4213           ADDS     R3,R0,R2, LSL #+5
   \   00000008   0024               MOVS     R4,#+0
   \   0000000A   83F88A47           STRB     R4,[R3, #+1930]
    159            pdev->host.hc[hc_num].data_pid = HC_PID_SETUP;   
   \   0000000E   D2B2               UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000010   10EB4213           ADDS     R3,R0,R2, LSL #+5
   \   00000014   0324               MOVS     R4,#+3
   \   00000016   83F89047           STRB     R4,[R3, #+1936]
    160            pdev->host.hc[hc_num].xfer_buff = buff;
   \   0000001A   D2B2               UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000001C   10EB4213           ADDS     R3,R0,R2, LSL #+5
   \   00000020   C3F89417           STR      R1,[R3, #+1940]
    161            pdev->host.hc[hc_num].xfer_len = USBH_SETUP_PKT_SIZE;   
   \   00000024   D2B2               UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000026   10EB4211           ADDS     R1,R0,R2, LSL #+5
   \   0000002A   0823               MOVS     R3,#+8
   \   0000002C   C1F89837           STR      R3,[R1, #+1944]
    162          
    163            return (USBH_Status)HCD_SubmitRequest (pdev , hc_num);   
   \   00000030   1100               MOVS     R1,R2
   \   00000032   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000034   ........           BL       HCD_SubmitRequest
   \   00000038   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003A   10BD               POP      {R4,PC}          ;; return
    164          }
    165          
    166          
    167          /**
    168            * @brief  USBH_CtlSendData
    169            *         Sends a data Packet to the Device
    170            * @param  pdev: Selected device
    171            * @param  buff: Buffer pointer from which the Data will be sent to Device
    172            * @param  length: Length of the data to be sent
    173            * @param  hc_num: Host channel Number
    174            * @retval Status
    175            */

   \                                 In section .text, align 2, keep-with-next
    176          USBH_Status USBH_CtlSendData ( USB_OTG_CORE_HANDLE *pdev, 
    177                                          uint8_t *buff, 
    178                                          uint8_t length,
    179                                          uint8_t hc_num)
    180          {
   \                     USBH_CtlSendData:
   \   00000000   38B5               PUSH     {R3-R5,LR}
   \   00000002   0C00               MOVS     R4,R1
   \   00000004   1900               MOVS     R1,R3
    181            pdev->host.hc[hc_num].ep_is_in = 0;
   \   00000006   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000008   10EB4113           ADDS     R3,R0,R1, LSL #+5
   \   0000000C   0025               MOVS     R5,#+0
   \   0000000E   83F88A57           STRB     R5,[R3, #+1930]
    182            pdev->host.hc[hc_num].xfer_buff = buff;
   \   00000012   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000014   10EB4113           ADDS     R3,R0,R1, LSL #+5
   \   00000018   C3F89447           STR      R4,[R3, #+1940]
    183            pdev->host.hc[hc_num].xfer_len = length;
   \   0000001C   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000001E   10EB4113           ADDS     R3,R0,R1, LSL #+5
   \   00000022   D2B2               UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000024   C3F89827           STR      R2,[R3, #+1944]
    184           
    185            if ( length == 0 )
   \   00000028   D2B2               UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000002A   002A               CMP      R2,#+0
   \   0000002C   05D1               BNE.N    ??USBH_CtlSendData_0
    186            { /* For Status OUT stage, Length==0, Status Out PID = 1 */
    187              pdev->host.hc[hc_num].toggle_out = 1;   
   \   0000002E   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000030   10EB4112           ADDS     R2,R0,R1, LSL #+5
   \   00000034   0123               MOVS     R3,#+1
   \   00000036   82F8A137           STRB     R3,[R2, #+1953]
    188            }
    189           
    190           /* Set the Data Toggle bit as per the Flag */
    191            if ( pdev->host.hc[hc_num].toggle_out == 0)
   \                     ??USBH_CtlSendData_0:
   \   0000003A   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000003C   10EB4112           ADDS     R2,R0,R1, LSL #+5
   \   00000040   92F8A127           LDRB     R2,[R2, #+1953]
   \   00000044   002A               CMP      R2,#+0
   \   00000046   06D1               BNE.N    ??USBH_CtlSendData_1
    192            { /* Put the PID 0 */
    193                pdev->host.hc[hc_num].data_pid = HC_PID_DATA0;    
   \   00000048   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000004A   10EB4112           ADDS     R2,R0,R1, LSL #+5
   \   0000004E   0023               MOVS     R3,#+0
   \   00000050   82F89037           STRB     R3,[R2, #+1936]
   \   00000054   05E0               B.N      ??USBH_CtlSendData_2
    194            }
    195           else
    196           { /* Put the PID 1 */
    197                pdev->host.hc[hc_num].data_pid = HC_PID_DATA1 ;
   \                     ??USBH_CtlSendData_1:
   \   00000056   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000058   10EB4112           ADDS     R2,R0,R1, LSL #+5
   \   0000005C   0223               MOVS     R3,#+2
   \   0000005E   82F89037           STRB     R3,[R2, #+1936]
    198           }
    199          
    200            HCD_SubmitRequest (pdev , hc_num);   
   \                     ??USBH_CtlSendData_2:
   \   00000062   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000064   ........           BL       HCD_SubmitRequest
    201             
    202            return USBH_OK;
   \   00000068   0020               MOVS     R0,#+0
   \   0000006A   32BD               POP      {R1,R4,R5,PC}    ;; return
    203          }
    204          
    205          
    206          /**
    207            * @brief  USBH_CtlReceiveData
    208            *         Receives the Device Response to the Setup Packet
    209            * @param  pdev: Selected device
    210            * @param  buff: Buffer pointer in which the response needs to be copied
    211            * @param  length: Length of the data to be received
    212            * @param  hc_num: Host channel Number
    213            * @retval Status. 
    214            */

   \                                 In section .text, align 2, keep-with-next
    215          USBH_Status USBH_CtlReceiveData(USB_OTG_CORE_HANDLE *pdev, 
    216                                          uint8_t* buff, 
    217                                          uint8_t length,
    218                                          uint8_t hc_num)
    219          {
   \                     USBH_CtlReceiveData:
   \   00000000   38B5               PUSH     {R3-R5,LR}
    220          
    221            pdev->host.hc[hc_num].ep_is_in = 1;
   \   00000002   DBB2               UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000004   10EB4314           ADDS     R4,R0,R3, LSL #+5
   \   00000008   0125               MOVS     R5,#+1
   \   0000000A   84F88A57           STRB     R5,[R4, #+1930]
    222            pdev->host.hc[hc_num].data_pid = HC_PID_DATA1;
   \   0000000E   DBB2               UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000010   10EB4314           ADDS     R4,R0,R3, LSL #+5
   \   00000014   0225               MOVS     R5,#+2
   \   00000016   84F89057           STRB     R5,[R4, #+1936]
    223            pdev->host.hc[hc_num].xfer_buff = buff;
   \   0000001A   DBB2               UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000001C   10EB4314           ADDS     R4,R0,R3, LSL #+5
   \   00000020   C4F89417           STR      R1,[R4, #+1940]
    224            pdev->host.hc[hc_num].xfer_len = length;  
   \   00000024   DBB2               UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000026   10EB4311           ADDS     R1,R0,R3, LSL #+5
   \   0000002A   D2B2               UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000002C   C1F89827           STR      R2,[R1, #+1944]
    225          
    226            HCD_SubmitRequest (pdev , hc_num);   
   \   00000030   1900               MOVS     R1,R3
   \   00000032   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000034   ........           BL       HCD_SubmitRequest
    227            
    228            return USBH_OK;
   \   00000038   0020               MOVS     R0,#+0
   \   0000003A   32BD               POP      {R1,R4,R5,PC}    ;; return
    229            
    230          }
    231          
    232          
    233          /**
    234            * @brief  USBH_BulkSendData
    235            *         Sends the Bulk Packet to the device
    236            * @param  pdev: Selected device
    237            * @param  buff: Buffer pointer from which the Data will be sent to Device
    238            * @param  length: Length of the data to be sent
    239            * @param  hc_num: Host channel Number
    240            * @retval Status
    241            */

   \                                 In section .text, align 2, keep-with-next
    242          USBH_Status USBH_BulkSendData ( USB_OTG_CORE_HANDLE *pdev, 
    243                                          uint8_t *buff, 
    244                                          uint16_t length,
    245                                          uint8_t hc_num)
    246          { 
   \                     USBH_BulkSendData:
   \   00000000   38B5               PUSH     {R3-R5,LR}
    247            pdev->host.hc[hc_num].ep_is_in = 0;
   \   00000002   DBB2               UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000004   10EB4314           ADDS     R4,R0,R3, LSL #+5
   \   00000008   0025               MOVS     R5,#+0
   \   0000000A   84F88A57           STRB     R5,[R4, #+1930]
    248            pdev->host.hc[hc_num].xfer_buff = buff;
   \   0000000E   DBB2               UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000010   10EB4314           ADDS     R4,R0,R3, LSL #+5
   \   00000014   C4F89417           STR      R1,[R4, #+1940]
    249            pdev->host.hc[hc_num].xfer_len = length;  
   \   00000018   DBB2               UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000001A   10EB4311           ADDS     R1,R0,R3, LSL #+5
   \   0000001E   92B2               UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000020   C1F89827           STR      R2,[R1, #+1944]
    250          
    251           /* Set the Data Toggle bit as per the Flag */
    252            if ( pdev->host.hc[hc_num].toggle_out == 0)
   \   00000024   DBB2               UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000026   10EB4311           ADDS     R1,R0,R3, LSL #+5
   \   0000002A   91F8A117           LDRB     R1,[R1, #+1953]
   \   0000002E   0029               CMP      R1,#+0
   \   00000030   06D1               BNE.N    ??USBH_BulkSendData_0
    253            { /* Put the PID 0 */
    254                pdev->host.hc[hc_num].data_pid = HC_PID_DATA0;    
   \   00000032   DBB2               UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000034   10EB4311           ADDS     R1,R0,R3, LSL #+5
   \   00000038   0022               MOVS     R2,#+0
   \   0000003A   81F89027           STRB     R2,[R1, #+1936]
   \   0000003E   05E0               B.N      ??USBH_BulkSendData_1
    255            }
    256           else
    257           { /* Put the PID 1 */
    258                pdev->host.hc[hc_num].data_pid = HC_PID_DATA1 ;
   \                     ??USBH_BulkSendData_0:
   \   00000040   DBB2               UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000042   10EB4311           ADDS     R1,R0,R3, LSL #+5
   \   00000046   0222               MOVS     R2,#+2
   \   00000048   81F89027           STRB     R2,[R1, #+1936]
    259           }
    260          
    261            HCD_SubmitRequest (pdev , hc_num);   
   \                     ??USBH_BulkSendData_1:
   \   0000004C   1900               MOVS     R1,R3
   \   0000004E   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000050   ........           BL       HCD_SubmitRequest
    262            return USBH_OK;
   \   00000054   0020               MOVS     R0,#+0
   \   00000056   32BD               POP      {R1,R4,R5,PC}    ;; return
    263          }
    264          
    265          
    266          /**
    267            * @brief  USBH_BulkReceiveData
    268            *         Receives IN bulk packet from device
    269            * @param  pdev: Selected device
    270            * @param  buff: Buffer pointer in which the received data packet to be copied
    271            * @param  length: Length of the data to be received
    272            * @param  hc_num: Host channel Number
    273            * @retval Status. 
    274            */

   \                                 In section .text, align 2, keep-with-next
    275          USBH_Status USBH_BulkReceiveData( USB_OTG_CORE_HANDLE *pdev, 
    276                                          uint8_t *buff, 
    277                                          uint16_t length,
    278                                          uint8_t hc_num)
    279          {
   \                     USBH_BulkReceiveData:
   \   00000000   38B5               PUSH     {R3-R5,LR}
    280            pdev->host.hc[hc_num].ep_is_in = 1;   
   \   00000002   DBB2               UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000004   10EB4314           ADDS     R4,R0,R3, LSL #+5
   \   00000008   0125               MOVS     R5,#+1
   \   0000000A   84F88A57           STRB     R5,[R4, #+1930]
    281            pdev->host.hc[hc_num].xfer_buff = buff;
   \   0000000E   DBB2               UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000010   10EB4314           ADDS     R4,R0,R3, LSL #+5
   \   00000014   C4F89417           STR      R1,[R4, #+1940]
    282            pdev->host.hc[hc_num].xfer_len = length;
   \   00000018   DBB2               UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000001A   10EB4311           ADDS     R1,R0,R3, LSL #+5
   \   0000001E   92B2               UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000020   C1F89827           STR      R2,[R1, #+1944]
    283            
    284          
    285            if( pdev->host.hc[hc_num].toggle_in == 0)
   \   00000024   DBB2               UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000026   10EB4311           ADDS     R1,R0,R3, LSL #+5
   \   0000002A   91F8A017           LDRB     R1,[R1, #+1952]
   \   0000002E   0029               CMP      R1,#+0
   \   00000030   06D1               BNE.N    ??USBH_BulkReceiveData_0
    286            {
    287              pdev->host.hc[hc_num].data_pid = HC_PID_DATA0;
   \   00000032   DBB2               UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000034   10EB4311           ADDS     R1,R0,R3, LSL #+5
   \   00000038   0022               MOVS     R2,#+0
   \   0000003A   81F89027           STRB     R2,[R1, #+1936]
   \   0000003E   05E0               B.N      ??USBH_BulkReceiveData_1
    288            }
    289            else
    290            {
    291              pdev->host.hc[hc_num].data_pid = HC_PID_DATA1;
   \                     ??USBH_BulkReceiveData_0:
   \   00000040   DBB2               UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000042   10EB4311           ADDS     R1,R0,R3, LSL #+5
   \   00000046   0222               MOVS     R2,#+2
   \   00000048   81F89027           STRB     R2,[R1, #+1936]
    292            }
    293          
    294            HCD_SubmitRequest (pdev , hc_num);  
   \                     ??USBH_BulkReceiveData_1:
   \   0000004C   1900               MOVS     R1,R3
   \   0000004E   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000050   ........           BL       HCD_SubmitRequest
    295            return USBH_OK;
   \   00000054   0020               MOVS     R0,#+0
   \   00000056   32BD               POP      {R1,R4,R5,PC}    ;; return
    296          }
    297          
    298          
    299          /**
    300            * @brief  USBH_InterruptReceiveData
    301            *         Receives the Device Response to the Interrupt IN token
    302            * @param  pdev: Selected device
    303            * @param  buff: Buffer pointer in which the response needs to be copied
    304            * @param  length: Length of the data to be received
    305            * @param  hc_num: Host channel Number
    306            * @retval Status. 
    307            */

   \                                 In section .text, align 2, keep-with-next
    308          USBH_Status USBH_InterruptReceiveData( USB_OTG_CORE_HANDLE *pdev, 
    309                                          uint8_t *buff, 
    310                                          uint8_t length,
    311                                          uint8_t hc_num)
    312          {
   \                     USBH_InterruptReceiveData:
   \   00000000   38B5               PUSH     {R3-R5,LR}
   \   00000002   0C00               MOVS     R4,R1
   \   00000004   1900               MOVS     R1,R3
    313          
    314            pdev->host.hc[hc_num].ep_is_in = 1;  
   \   00000006   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000008   10EB4113           ADDS     R3,R0,R1, LSL #+5
   \   0000000C   0125               MOVS     R5,#+1
   \   0000000E   83F88A57           STRB     R5,[R3, #+1930]
    315            pdev->host.hc[hc_num].xfer_buff = buff;
   \   00000012   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000014   10EB4113           ADDS     R3,R0,R1, LSL #+5
   \   00000018   C3F89447           STR      R4,[R3, #+1940]
    316            pdev->host.hc[hc_num].xfer_len = length;
   \   0000001C   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000001E   10EB4113           ADDS     R3,R0,R1, LSL #+5
   \   00000022   D2B2               UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000024   C3F89827           STR      R2,[R3, #+1944]
    317            
    318          
    319            
    320            if(pdev->host.hc[hc_num].toggle_in == 0)
   \   00000028   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002A   10EB4112           ADDS     R2,R0,R1, LSL #+5
   \   0000002E   92F8A027           LDRB     R2,[R2, #+1952]
   \   00000032   002A               CMP      R2,#+0
   \   00000034   06D1               BNE.N    ??USBH_InterruptReceiveData_0
    321            {
    322              pdev->host.hc[hc_num].data_pid = HC_PID_DATA0;
   \   00000036   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000038   10EB4112           ADDS     R2,R0,R1, LSL #+5
   \   0000003C   0023               MOVS     R3,#+0
   \   0000003E   82F89037           STRB     R3,[R2, #+1936]
   \   00000042   05E0               B.N      ??USBH_InterruptReceiveData_1
    323            }
    324            else
    325            {
    326              pdev->host.hc[hc_num].data_pid = HC_PID_DATA1;
   \                     ??USBH_InterruptReceiveData_0:
   \   00000044   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000046   10EB4112           ADDS     R2,R0,R1, LSL #+5
   \   0000004A   0223               MOVS     R3,#+2
   \   0000004C   82F89037           STRB     R3,[R2, #+1936]
    327            }
    328          
    329            /* toggle DATA PID */
    330            pdev->host.hc[hc_num].toggle_in ^= 1;  
   \                     ??USBH_InterruptReceiveData_1:
   \   00000050   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000052   10EB4112           ADDS     R2,R0,R1, LSL #+5
   \   00000056   92F8A027           LDRB     R2,[R2, #+1952]
   \   0000005A   92F00102           EORS     R2,R2,#0x1
   \   0000005E   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000060   10EB4113           ADDS     R3,R0,R1, LSL #+5
   \   00000064   83F8A027           STRB     R2,[R3, #+1952]
    331            
    332            HCD_SubmitRequest (pdev , hc_num);  
   \   00000068   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000006A   ........           BL       HCD_SubmitRequest
    333            
    334            return USBH_OK;
   \   0000006E   0020               MOVS     R0,#+0
   \   00000070   32BD               POP      {R1,R4,R5,PC}    ;; return
    335          }
    336          
    337          /**
    338            * @brief  USBH_InterruptSendData
    339            *         Sends the data on Interrupt OUT Endpoint
    340            * @param  pdev: Selected device
    341            * @param  buff: Buffer pointer from where the data needs to be copied
    342            * @param  length: Length of the data to be sent
    343            * @param  hc_num: Host channel Number
    344            * @retval Status. 
    345            */

   \                                 In section .text, align 2, keep-with-next
    346          USBH_Status USBH_InterruptSendData( USB_OTG_CORE_HANDLE *pdev, 
    347                                          uint8_t *buff, 
    348                                          uint8_t length,
    349                                          uint8_t hc_num)
    350          {
   \                     USBH_InterruptSendData:
   \   00000000   38B5               PUSH     {R3-R5,LR}
   \   00000002   0C00               MOVS     R4,R1
   \   00000004   1900               MOVS     R1,R3
    351          
    352            pdev->host.hc[hc_num].ep_is_in = 0;  
   \   00000006   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000008   10EB4113           ADDS     R3,R0,R1, LSL #+5
   \   0000000C   0025               MOVS     R5,#+0
   \   0000000E   83F88A57           STRB     R5,[R3, #+1930]
    353            pdev->host.hc[hc_num].xfer_buff = buff;
   \   00000012   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000014   10EB4113           ADDS     R3,R0,R1, LSL #+5
   \   00000018   C3F89447           STR      R4,[R3, #+1940]
    354            pdev->host.hc[hc_num].xfer_len = length;
   \   0000001C   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000001E   10EB4113           ADDS     R3,R0,R1, LSL #+5
   \   00000022   D2B2               UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000024   C3F89827           STR      R2,[R3, #+1944]
    355            
    356            if(pdev->host.hc[hc_num].toggle_in == 0)
   \   00000028   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002A   10EB4112           ADDS     R2,R0,R1, LSL #+5
   \   0000002E   92F8A027           LDRB     R2,[R2, #+1952]
   \   00000032   002A               CMP      R2,#+0
   \   00000034   06D1               BNE.N    ??USBH_InterruptSendData_0
    357            {
    358              pdev->host.hc[hc_num].data_pid = HC_PID_DATA0;
   \   00000036   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000038   10EB4112           ADDS     R2,R0,R1, LSL #+5
   \   0000003C   0023               MOVS     R3,#+0
   \   0000003E   82F89037           STRB     R3,[R2, #+1936]
   \   00000042   05E0               B.N      ??USBH_InterruptSendData_1
    359            }
    360            else
    361            {
    362              pdev->host.hc[hc_num].data_pid = HC_PID_DATA1;
   \                     ??USBH_InterruptSendData_0:
   \   00000044   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000046   10EB4112           ADDS     R2,R0,R1, LSL #+5
   \   0000004A   0223               MOVS     R3,#+2
   \   0000004C   82F89037           STRB     R3,[R2, #+1936]
    363            }
    364          
    365            pdev->host.hc[hc_num].toggle_in ^= 1;  
   \                     ??USBH_InterruptSendData_1:
   \   00000050   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000052   10EB4112           ADDS     R2,R0,R1, LSL #+5
   \   00000056   92F8A027           LDRB     R2,[R2, #+1952]
   \   0000005A   92F00102           EORS     R2,R2,#0x1
   \   0000005E   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000060   10EB4113           ADDS     R3,R0,R1, LSL #+5
   \   00000064   83F8A027           STRB     R2,[R3, #+1952]
    366            
    367            HCD_SubmitRequest (pdev , hc_num);  
   \   00000068   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000006A   ........           BL       HCD_SubmitRequest
    368            
    369            return USBH_OK;
   \   0000006E   0020               MOVS     R0,#+0
   \   00000070   32BD               POP      {R1,R4,R5,PC}    ;; return
    370          }
    371          
    372          
    373          /**
    374            * @brief  USBH_SubmitSetupRequest
    375            *         Start a setup transfer by changing the state-machine and 
    376            *         initializing  the required variables needed for the Control Transfer
    377            * @param  pdev: Selected device
    378            * @param  setup: Setup Request Structure
    379            * @param  buff: Buffer used for setup request
    380            * @param  length: Length of the data
    381            * @retval Status. 
    382          */

   \                                 In section .text, align 2, keep-with-next
    383          static USBH_Status USBH_SubmitSetupRequest(USBH_HOST *phost,
    384                                                     uint8_t* buff, 
    385                                                     uint16_t length)
    386          {
    387            
    388            /* Save Global State */
    389            phost->gStateBkp =   phost->gState; 
   \                     USBH_SubmitSetupRequest:
   \   00000000   0378               LDRB     R3,[R0, #+0]
   \   00000002   4370               STRB     R3,[R0, #+1]
    390            
    391            /* Prepare the Transactions */
    392            phost->gState = HOST_CTRL_XFER;
   \   00000004   0923               MOVS     R3,#+9
   \   00000006   0370               STRB     R3,[R0, #+0]
    393            phost->Control.buff = buff; 
   \   00000008   8160               STR      R1,[R0, #+8]
    394            phost->Control.length = length;
   \   0000000A   8281               STRH     R2,[R0, #+12]
    395            phost->Control.state = CTRL_SETUP;  
   \   0000000C   0121               MOVS     R1,#+1
   \   0000000E   0177               STRB     R1,[R0, #+28]
    396          
    397            return USBH_OK;  
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   7047               BX       LR               ;; return
    398          }
    399          
    400          /**
    401          * @}
    402          */ 
    403          
    404          /**
    405          * @}
    406          */ 
    407          
    408          /**
    409          * @}
    410          */
    411          
    412          /**
    413          * @}
    414          */ 
    415          
    416          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/
    417          
    418          
    419          

   Maximum stack usage in bytes:

     Function                  .cstack
     --------                  -------
     USBH_BulkReceiveData          16
     USBH_BulkSendData             16
     USBH_CtlReceiveData           16
     USBH_CtlReq                   24
     USBH_CtlSendData              16
     USBH_CtlSendSetup              8
     USBH_InterruptReceiveData     16
     USBH_InterruptSendData        16
     USBH_SubmitSetupRequest        0


   Section sizes:

     Function/Label            Bytes
     --------------            -----
     USBH_CtlReq                 98
     USBH_CtlSendSetup           60
     USBH_CtlSendData           108
     USBH_CtlReceiveData         60
     USBH_BulkSendData           88
     USBH_BulkReceiveData        88
     USBH_InterruptReceiveData  114
     USBH_InterruptSendData     114
     USBH_SubmitSetupRequest     20

 
 750 bytes in section .text
 
 750 bytes of CODE memory

Errors: none
Warnings: none
