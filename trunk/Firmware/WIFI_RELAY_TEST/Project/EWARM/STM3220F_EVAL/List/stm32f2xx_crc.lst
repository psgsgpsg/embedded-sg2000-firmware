###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.1.52143/W32 for ARM     12/Nov/2011  19:31:23 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  F:\¹¬ÀÛ¾÷\[ NewDTG ]\WORK\DTG_EMS_SYSTEM\Libraries\STM32 #
#                    F2xx_StdPeriph_Driver\src\stm32f2xx_crc.c                #
#    Command line =  "F:\¹¬ÀÛ¾÷\[ NewDTG ]\WORK\DTG_EMS_SYSTEM\Libraries\STM3 #
#                    2F2xx_StdPeriph_Driver\src\stm32f2xx_crc.c" -D           #
#                    USE_STDPERIPH_DRIVER -D STM32F2XX -D USE_STM3220F_EVAL   #
#                    -D USE_USB_OTG_FS -D RTC_CLOCK_SOURCE_LSE -lC            #
#                    "F:\¹¬ÀÛ¾÷\[ NewDTG ]\WORK\DTG_EMS_SYSTEM\Project\EWARM\ #
#                    STM3220F_EVAL\List\" -lA "F:\¹¬ÀÛ¾÷\[ NewDTG             #
#                    ]\WORK\DTG_EMS_SYSTEM\Project\EWARM\STM3220F_EVAL\List\" #
#                     -o "F:\¹¬ÀÛ¾÷\[ NewDTG ]\WORK\DTG_EMS_SYSTEM\Project\EW #
#                    ARM\STM3220F_EVAL\Obj\" --no_cse --no_unroll             #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files\IAR        #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I "F:\¹¬ÀÛ¾÷\[ NewDTG                              #
#                    ]\WORK\DTG_EMS_SYSTEM\Project\EWARM\..\" -I              #
#                    "F:\¹¬ÀÛ¾÷\[ NewDTG ]\WORK\DTG_EMS_SYSTEM\Project\EWARM\ #
#                    ..\..\Libraries\CMSIS\CM3\CoreSupport\" -I "F:\¹¬ÀÛ¾÷\[  #
#                    NewDTG ]\WORK\DTG_EMS_SYSTEM\Project\EWARM\..\..\Librari #
#                    es\CMSIS\CM3\DeviceSupport\ST\STM32F2xx\" -I             #
#                    "F:\¹¬ÀÛ¾÷\[ NewDTG ]\WORK\DTG_EMS_SYSTEM\Project\EWARM\ #
#                    ..\..\Libraries\STM32F2xx_StdPeriph_Driver\inc\" -I      #
#                    "F:\¹¬ÀÛ¾÷\[ NewDTG ]\WORK\DTG_EMS_SYSTEM\Project\EWARM\ #
#                    ..\..\Utilities\STM32_EVAL\" -I "F:\¹¬ÀÛ¾÷\[ NewDTG      #
#                    ]\WORK\DTG_EMS_SYSTEM\Project\EWARM\..\..\Utilities\STM3 #
#                    2_EVAL\Common\" -I "F:\¹¬ÀÛ¾÷\[ NewDTG                   #
#                    ]\WORK\DTG_EMS_SYSTEM\Project\EWARM\..\..\Utilities\STM3 #
#                    2_EVAL\STM3220F_EVAL\" -I "F:\¹¬ÀÛ¾÷\[ NewDTG            #
#                    ]\WORK\DTG_EMS_SYSTEM\Project\EWARM\..\..\Libraries\STM3 #
#                    2_USB_OTG_Driver\inc\" -I "F:\¹¬ÀÛ¾÷\[ NewDTG            #
#                    ]\WORK\DTG_EMS_SYSTEM\Project\EWARM\..\..\Libraries\STM3 #
#                    2_USB_Device_Library\Core\inc\" -I "F:\¹¬ÀÛ¾÷\[ NewDTG   #
#                    ]\WORK\DTG_EMS_SYSTEM\Project\EWARM\..\..\Libraries\STM3 #
#                    2_USB_Device_Library\Class\msc\inc\" -I "F:\¹¬ÀÛ¾÷\[     #
#                    NewDTG ]\WORK\DTG_EMS_SYSTEM\Project\EWARM\..\Usb\" -I   #
#                    "F:\¹¬ÀÛ¾÷\[ NewDTG ]\WORK\DTG_EMS_SYSTEM\Project\EWARM\ #
#                    ..\Usb\Inc\" -I "F:\¹¬ÀÛ¾÷\[ NewDTG                      #
#                    ]\WORK\DTG_EMS_SYSTEM\Project\EWARM\..\Usb\src\" -I      #
#                    "F:\¹¬ÀÛ¾÷\[ NewDTG ]\WORK\DTG_EMS_SYSTEM\Project\EWARM\ #
#                    ..\..\Libraries\STM32_USB_HOST_Library\Core\inc\" -I     #
#                    "F:\¹¬ÀÛ¾÷\[ NewDTG ]\WORK\DTG_EMS_SYSTEM\Project\EWARM\ #
#                    ..\..\Libraries\STM32_USB_HOST_Library\Class\MSC\inc\"   #
#                    -Ol --use_c++_inline                                     #
#    List file    =  F:\¹¬ÀÛ¾÷\[ NewDTG ]\WORK\DTG_EMS_SYSTEM\Project\EWARM\S #
#                    TM3220F_EVAL\List\stm32f2xx_crc.lst                      #
#    Object file  =  F:\¹¬ÀÛ¾÷\[ NewDTG ]\WORK\DTG_EMS_SYSTEM\Project\EWARM\S #
#                    TM3220F_EVAL\Obj\stm32f2xx_crc.o                         #
#                                                                             #
#                                                                             #
###############################################################################

F:\¹¬ÀÛ¾÷\[ NewDTG ]\WORK\DTG_EMS_SYSTEM\Libraries\STM32F2xx_StdPeriph_Driver\src\stm32f2xx_crc.c
      1          /**
      2            ******************************************************************************
      3            * @file    stm32f2xx_crc.c
      4            * @author  MCD Application Team
      5            * @version V0.0.4
      6            * @date    13-January-2011
      7            * @brief   This file provides all the CRC firmware functions.
      8            ******************************************************************************
      9            * @attention
     10            *
     11            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     12            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     13            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     14            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     15            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     16            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     17            *
     18            * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
     19            ******************************************************************************
     20            */
     21          
     22          /* Includes ------------------------------------------------------------------*/
     23          #include "stm32f2xx_crc.h"
     24          
     25          /** @addtogroup STM32F2xx_StdPeriph_Driver
     26            * @{
     27            */
     28          
     29          /** @defgroup CRC 
     30            * @brief CRC driver modules
     31            * @{
     32            */
     33          
     34          /** @defgroup CRC_Private_TypesDefinitions
     35            * @{
     36            */
     37          
     38          /**
     39            * @}
     40            */
     41          
     42          /** @defgroup CRC_Private_Defines
     43            * @{
     44            */
     45          
     46          /* CR register bit mask */
     47          
     48          #define CR_RESET_Set    ((uint32_t)0x00000001)
     49          
     50          /**
     51            * @}
     52            */
     53          
     54          /** @defgroup CRC_Private_Macros
     55            * @{
     56            */
     57          
     58          /**
     59            * @}
     60            */
     61          
     62          /** @defgroup CRC_Private_Variables
     63            * @{
     64            */
     65          
     66          /**
     67            * @}
     68            */
     69          
     70          /** @defgroup CRC_Private_FunctionPrototypes
     71            * @{
     72            */
     73          
     74          /**
     75            * @}
     76            */
     77          
     78          /** @defgroup CRC_Private_Functions
     79            * @{
     80            */
     81          
     82          /**
     83            * @brief  Resets the CRC Data register (DR).
     84            * @param  None
     85            * @retval None
     86            */

   \                                 In section .text, align 2, keep-with-next
     87          void CRC_ResetDR(void)
     88          {
     89            /* Reset CRC generator */
     90            CRC->CR = CR_RESET_Set;
   \                     CRC_ResetDR:
   \   00000000   ....               LDR.N    R0,??DataTable5  ;; 0x40023008
   \   00000002   0121               MOVS     R1,#+1
   \   00000004   0160               STR      R1,[R0, #+0]
     91          }
   \   00000006   7047               BX       LR               ;; return
     92          
     93          /**
     94            * @brief  Computes the 32-bit CRC of a given data word(32-bit).
     95            * @param  Data: data word(32-bit) to compute its CRC
     96            * @retval 32-bit CRC
     97            */

   \                                 In section .text, align 2, keep-with-next
     98          uint32_t CRC_CalcCRC(uint32_t Data)
     99          {
    100            CRC->DR = Data;
   \                     CRC_CalcCRC:
   \   00000000   ....               LDR.N    R1,??DataTable5_1  ;; 0x40023000
   \   00000002   0860               STR      R0,[R1, #+0]
    101            
    102            return (CRC->DR);
   \   00000004   ....               LDR.N    R0,??DataTable5_1  ;; 0x40023000
   \   00000006   0068               LDR      R0,[R0, #+0]
   \   00000008   7047               BX       LR               ;; return
    103          }
    104          
    105          /**
    106            * @brief  Computes the 32-bit CRC of a given buffer of data word(32-bit).
    107            * @param  pBuffer: pointer to the buffer containing the data to be computed
    108            * @param  BufferLength: length of the buffer to be computed					
    109            * @retval 32-bit CRC
    110            */

   \                                 In section .text, align 2, keep-with-next
    111          uint32_t CRC_CalcBlockCRC(uint32_t pBuffer[], uint32_t BufferLength)
    112          {
   \                     CRC_CalcBlockCRC:
   \   00000000   10B4               PUSH     {R4}
    113            uint32_t index = 0;
   \   00000002   0022               MOVS     R2,#+0
    114            
    115            for(index = 0; index < BufferLength; index++)
   \   00000004   0023               MOVS     R3,#+0
   \   00000006   1A00               MOVS     R2,R3
   \   00000008   04E0               B.N      ??CRC_CalcBlockCRC_0
    116            {
    117              CRC->DR = pBuffer[index];
   \                     ??CRC_CalcBlockCRC_1:
   \   0000000A   50F82230           LDR      R3,[R0, R2, LSL #+2]
   \   0000000E   ....               LDR.N    R4,??DataTable5_1  ;; 0x40023000
   \   00000010   2360               STR      R3,[R4, #+0]
    118            }
   \   00000012   521C               ADDS     R2,R2,#+1
   \                     ??CRC_CalcBlockCRC_0:
   \   00000014   8A42               CMP      R2,R1
   \   00000016   F8D3               BCC.N    ??CRC_CalcBlockCRC_1
    119            return (CRC->DR);
   \   00000018   ....               LDR.N    R0,??DataTable5_1  ;; 0x40023000
   \   0000001A   0068               LDR      R0,[R0, #+0]
   \   0000001C   10BC               POP      {R4}
   \   0000001E   7047               BX       LR               ;; return
    120          }
    121          
    122          /**
    123            * @brief  Returns the current CRC value.
    124            * @param  None
    125            * @retval 32-bit CRC
    126            */

   \                                 In section .text, align 2, keep-with-next
    127          uint32_t CRC_GetCRC(void)
    128          {
    129            return (CRC->DR);
   \                     CRC_GetCRC:
   \   00000000   ....               LDR.N    R0,??DataTable5_1  ;; 0x40023000
   \   00000002   0068               LDR      R0,[R0, #+0]
   \   00000004   7047               BX       LR               ;; return
    130          }
    131          
    132          /**
    133            * @brief  Stores a 8-bit data in the Independent Data(ID) register.
    134            * @param  IDValue: 8-bit value to be stored in the ID register 					
    135            * @retval None
    136            */

   \                                 In section .text, align 2, keep-with-next
    137          void CRC_SetIDRegister(uint8_t IDValue)
    138          {
    139            CRC->IDR = IDValue;
   \                     CRC_SetIDRegister:
   \   00000000   ....               LDR.N    R1,??DataTable5_2  ;; 0x40023004
   \   00000002   0870               STRB     R0,[R1, #+0]
    140          }
   \   00000004   7047               BX       LR               ;; return
    141          
    142          /**
    143            * @brief  Returns the 8-bit data stored in the Independent Data(ID) register
    144            * @param  None
    145            * @retval 8-bit value of the ID register 
    146            */

   \                                 In section .text, align 2, keep-with-next
    147          uint8_t CRC_GetIDRegister(void)
    148          {
    149            return (CRC->IDR);
   \                     CRC_GetIDRegister:
   \   00000000   ....               LDR.N    R0,??DataTable5_2  ;; 0x40023004
   \   00000002   0078               LDRB     R0,[R0, #+0]
   \   00000004   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000006   7047               BX       LR               ;; return
    150          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   08300240           DC32     0x40023008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   00300240           DC32     0x40023000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   04300240           DC32     0x40023004
    151          
    152          /**
    153            * @}
    154            */
    155          
    156          /**
    157            * @}
    158            */
    159          
    160          /**
    161            * @}
    162            */
    163          
    164          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

     Function          .cstack
     --------          -------
     CRC_CalcBlockCRC       4
     CRC_CalcCRC            0
     CRC_GetCRC             0
     CRC_GetIDRegister      0
     CRC_ResetDR            0
     CRC_SetIDRegister      0


   Section sizes:

     Function/Label    Bytes
     --------------    -----
     CRC_ResetDR          8
     CRC_CalcCRC         10
     CRC_CalcBlockCRC    32
     CRC_GetCRC           6
     CRC_SetIDRegister    6
     CRC_GetIDRegister    8
     ??DataTable5         4
     ??DataTable5_1       4
     ??DataTable5_2       4

 
 82 bytes in section .text
 
 82 bytes of CODE memory

Errors: none
Warnings: none
