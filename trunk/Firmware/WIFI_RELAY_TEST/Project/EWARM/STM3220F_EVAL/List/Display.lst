###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.1.52143/W32 for ARM     20/Dec/2011  16:14:17 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\Work\Firmware\DTG\WIFI_RELAY_TEST\Project\Display.c   #
#    Command line =  E:\Work\Firmware\DTG\WIFI_RELAY_TEST\Project\Display.c   #
#                    -D USE_STDPERIPH_DRIVER -D STM32F2XX -D                  #
#                    USE_STM3220F_EVAL -D USE_USB_OTG_FS -D                   #
#                    RTC_CLOCK_SOURCE_LSE -lC E:\Work\Firmware\DTG\WIFI_RELAY #
#                    _TEST\Project\EWARM\STM3220F_EVAL\List\ -lA              #
#                    E:\Work\Firmware\DTG\WIFI_RELAY_TEST\Project\EWARM\STM32 #
#                    20F_EVAL\List\ -o E:\Work\Firmware\DTG\WIFI_RELAY_TEST\P #
#                    roject\EWARM\STM3220F_EVAL\Obj\ --no_cse --no_unroll     #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files\IAR        #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I E:\Work\Firmware\DTG\WIFI_RELAY_TEST\Project\EWA #
#                    RM\..\ -I E:\Work\Firmware\DTG\WIFI_RELAY_TEST\Project\E #
#                    WARM\..\..\Libraries\CMSIS\CM3\CoreSupport\ -I           #
#                    E:\Work\Firmware\DTG\WIFI_RELAY_TEST\Project\EWARM\..\.. #
#                    \Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F2xx\ -I      #
#                    E:\Work\Firmware\DTG\WIFI_RELAY_TEST\Project\EWARM\..\.. #
#                    \Libraries\STM32F2xx_StdPeriph_Driver\inc\ -I            #
#                    E:\Work\Firmware\DTG\WIFI_RELAY_TEST\Project\EWARM\..\.. #
#                    \Utilities\STM32_EVAL\ -I E:\Work\Firmware\DTG\WIFI_RELA #
#                    Y_TEST\Project\EWARM\..\..\Utilities\STM32_EVAL\Common\  #
#                    -I E:\Work\Firmware\DTG\WIFI_RELAY_TEST\Project\EWARM\.. #
#                    \..\Utilities\STM32_EVAL\STM3220F_EVAL\ -I               #
#                    E:\Work\Firmware\DTG\WIFI_RELAY_TEST\Project\EWARM\..\.. #
#                    \Libraries\STM32_USB_OTG_Driver\inc\ -I                  #
#                    E:\Work\Firmware\DTG\WIFI_RELAY_TEST\Project\EWARM\..\.. #
#                    \Libraries\STM32_USB_Device_Library\Core\inc\ -I         #
#                    E:\Work\Firmware\DTG\WIFI_RELAY_TEST\Project\EWARM\..\.. #
#                    \Libraries\STM32_USB_Device_Library\Class\msc\inc\ -I    #
#                    E:\Work\Firmware\DTG\WIFI_RELAY_TEST\Project\EWARM\..\Us #
#                    b\ -I E:\Work\Firmware\DTG\WIFI_RELAY_TEST\Project\EWARM #
#                    \..\Usb\Inc\ -I E:\Work\Firmware\DTG\WIFI_RELAY_TEST\Pro #
#                    ject\EWARM\..\Usb\src\ -I E:\Work\Firmware\DTG\WIFI_RELA #
#                    Y_TEST\Project\EWARM\..\..\Libraries\STM32_USB_HOST_Libr #
#                    ary\Core\inc\ -I E:\Work\Firmware\DTG\WIFI_RELAY_TEST\Pr #
#                    oject\EWARM\..\..\Libraries\STM32_USB_HOST_Library\Class #
#                    \MSC\inc\ -Ol --use_c++_inline                           #
#    List file    =  E:\Work\Firmware\DTG\WIFI_RELAY_TEST\Project\EWARM\STM32 #
#                    20F_EVAL\List\Display.lst                                #
#    Object file  =  E:\Work\Firmware\DTG\WIFI_RELAY_TEST\Project\EWARM\STM32 #
#                    20F_EVAL\Obj\Display.o                                   #
#                                                                             #
#                                                                             #
###############################################################################

E:\Work\Firmware\DTG\WIFI_RELAY_TEST\Project\Display.c
      1          /*////////////////////////////////////////////////////////////////////////////////////
      2          
      3          2011.6.1 작성 - 윤성묵
      4          - Graphic LCD Module : LGM12232A-FL-YBW 
      5          - Font : 8x16 dot / 15 x 2 
      6          - 메인 함수에서 그래픽 루틴 처리 
      7          - 화면 구성에 관련된 전반적인 함수와 변수 처리
      8          
      9          *////////////////////////////////////////////////////////////////////////////////////
     10          #include "main.h"

   \                                 In section .text, align 2
   \   __intrinsic __interwork __softfp void *memset(void *, int, size_t)
   \                     memset:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   1000               MOVS     R0,R2
   \   00000006   0A00               MOVS     R2,R1
   \   00000008   0100               MOVS     R1,R0
   \   0000000A   2000               MOVS     R0,R4
   \   0000000C   ........           BL       __aeabi_memset
   \   00000010   2000               MOVS     R0,R4
   \   00000012   10BD               POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void LED2_OFF(void)
   \                     LED2_OFF:
   \   00000000   80B5               PUSH     {R7,LR}
   \   00000002   4FF40061           MOV      R1,#+2048
   \   00000006   ........           LDR.W    R0,??DataTable156  ;; 0x40021800
   \   0000000A   ........           BL       GPIO_SetBits
   \   0000000E   4FF48051           MOV      R1,#+4096
   \   00000012   ........           LDR.W    R0,??DataTable156  ;; 0x40021800
   \   00000016   ........           BL       GPIO_SetBits
   \   0000001A   01BD               POP      {R0,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void LED2_GREEN(void)
   \                     LED2_GREEN:
   \   00000000   80B5               PUSH     {R7,LR}
   \   00000002   4FF40061           MOV      R1,#+2048
   \   00000006   ........           LDR.W    R0,??DataTable156  ;; 0x40021800
   \   0000000A   ........           BL       GPIO_SetBits
   \   0000000E   4FF48051           MOV      R1,#+4096
   \   00000012   ........           LDR.W    R0,??DataTable156  ;; 0x40021800
   \   00000016   ........           BL       GPIO_ResetBits
   \   0000001A   01BD               POP      {R0,PC}          ;; return
     11          #include "Display.h"
     12          #include "Log.h"
     13          #include "EMS_System.h"
     14          #include "GraphicLcd.h"
     15          #include "Key_Process.h"
     16          #include "Tilt.h"
     17          #include "Memory.h"
     18          #include "History.h"
     19          #include "rtc.h"
     20           

   \                                 In section .bss, align 4
     21          struct _DisplayInfo DisplayInfo;
   \                     DisplayInfo:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
     22          u8 Display_Buff[100];		// 가로 15 세로 2 칸
   \                     Display_Buff:
   \   00000000                      DS8 100
     23          

   \                                 In section .bss, align 1
     24          u8 IOReverse_Count;		// 화면 입력신호 변경 처리
   \                     IOReverse_Count:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     25          u8 GLCD_Refresh_Flag;         // 화면 변경있을경우 바로 처리
   \                     GLCD_Refresh_Flag:
   \   00000000                      DS8 1
     26          

   \                                 In section .bss, align 1
     27          u8 Toogle_Cursor;             // 커서 반전 500ms마다
   \                     Toogle_Cursor:
   \   00000000                      DS8 1
     28          

   \                                 In section .bss, align 1
     29          u8 Wait_x;
   \                     Wait_x:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     30          u8 Wait_y;
   \                     Wait_y:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
     31          u8 LCD_WaitString[50];
   \                     LCD_WaitString:
   \   00000000                      DS8 52
     32          
     33          // 화면 출력에 관련된 그래픽 LCD 처리 메인 함수
     34          // 10ms 마다 진입

   \                                 In section .data, align 4
     35          const u8 *BAKUP_WORD[5]={
   \                     BAKUP_WORD:
   \   00000000   ........           DC32 `?<Constant "- \\277\\300\\264\\303\\271\\351\\276\\367`
   \   00000004   ........           DC32 `?<Constant "- \\307\\317\\267\\347\\271\\351\\276\\367`
   \   00000008   ........           DC32 `?<Constant "- \\300\\317\\301\\326\\300\\317\\271\\351`
   \   0000000C   ........           DC32 `?<Constant "- \\307\\321\\264\\336\\271\\351\\276\\367`
   \   00000010   ........           DC32 `?<Constant "- \\274\\274\\264\\336\\271\\351\\276\\367`
     36               "- 오늘백업  ",
     37               "- 하루백업  ",
     38               "- 일주일백업",
     39               "- 한달백업  ",
     40               "- 세달백업  "
     41          };

   \                                 In section .data, align 4
     42          const u8 *EMS_WORD[3]={
   \                     EMS_WORD:
   \   00000000   ........           DC32 `?<Constant "- \\300\\374\\303\\274\\263\\353\\274\\261`
   \   00000004   ........           DC32 `?<Constant "- \\302\\367\\260\\355\\301\\366\\265\\277`
   \   00000008   ........           DC32 `?<Constant "- \\265\\356\\267\\317\\261\\270\\260\\243`
     43               "- 전체노선동작  ",
     44               "- 차고지동작    ",
     45               "- 등록구간동작  ",
     46          };

   \                                 In section .data, align 4
     47          const u8 *EMS_ON_WORD[13]={
   \                     EMS_ON_WORD:
   \   00000000   ........           DC32 `?<Constant "0.\\275\\303\\265\\277\\277\\302\\265\\277`
   \   00000004   ........           DC32 `?<Constant "1.\\277\\241\\304\\332\\271\\366\\306\\260`
   \   00000008   ........           DC32 `?<Constant "2.\\275\\303\\265\\277\\305\\260\\277\\300`
   \   0000000C   ........           DC32 `?<Constant "3. RPM\\300\\314\\300\\326\\300\\275    `
   \   00000010   ........           DC32 `?<Constant "4. SPEED\\260\\241\\300\\326\\300\\275  `
   \   00000014   ........           DC32 `?<Constant "5. GPS\\277\\241\\274\\323\\265\\265\\260`
   \   00000018   ........           DC32 `?<Constant "6.\\261\\342\\276\\356\\260\\241\\301\\337`
   \   0000001C   ........           DC32 `?<Constant "7. 1\\303\\312\\260\\243\\300\\347\\275\\3`
   \   00000020   ........           DC32 `?<Constant "8.\\275\\303\\265\\277\\300\\347\\275\\303`
   \   00000024   ........           DC32 `?<Constant "9. BREAK\\271\\342\\301\\366\\276\\312\\3`
   \   00000028   ........           DC32 `?<Constant "10.BREAK\\266\\347\\301\\366\\276\\312\\3`
   \   0000002C   ........           DC32 `?<Constant "11. \\270\\360\\265\\347\\301\\266\\260\\3`
   \   00000030   ........           DC32 `?<Constant "12. \\260\\370\\310\\270\\300\\374\\301\\3`
     48               "0.시동온동작중      ",     
     49               "1.에코버튼이오프    ",
     50               "2.시동키오프        ",
     51               "3. RPM이있음        ",
     52               "4. SPEED가있음      ",
     53               "5. GPS에속도가      ",
     54               "6.기어가중립        ",
     55               "7. 1초간재시도실패함",
     56               "8.시동재시도시간 3초",
     57               "9. BREAK밟지않음    ",
     58               "10.BREAK띄지않음    ",
     59               "11. 모든조건완료 1초",
     60               "12. 공회전진입      "
     61          };

   \                                 In section .data, align 4
     62          const u8 *EMS_OFF_WORD[18]={
   \                     EMS_OFF_WORD:
   \   00000000   ........           DC32 `?<Constant "0.\\275\\303\\265\\277\\277\\300\\307\\301`
   \   00000004   ........           DC32 `?<Constant "1.\\277\\241\\304\\332\\271\\366\\306\\260`
   \   00000008   ........           DC32 `?<Constant "2.\\275\\303\\265\\277\\305\\260\\277\\300`
   \   0000000C   ........           DC32 `?<Constant "3. RPM\\300\\314\\276\\370\\300\\275    `
   \   00000010   ........           DC32 `?<Constant "4. SPEED\\260\\241\\300\\326\\300\\275  `
   \   00000014   ........           DC32 `?<Constant "5. GPS\\277\\241\\274\\323\\265\\265\\260_1`
   \   00000018   ........           DC32 `?<Constant "6.\\261\\342\\276\\356\\260\\241\\301\\337`
   \   0000001C   ........           DC32 `?<Constant "7.\\277\\356\\307\\340\\301\\337\\271\\350`
   \   00000020   ........           DC32 `?<Constant "8.\\261\\342\\301\\330\\271\\350\\305\\315`
   \   00000024   ........           DC32 `?<Constant "9.\\263\\303\\260\\242\\274\\366\\260\\241`
   \   00000028   ........           DC32 `?<Constant "10. \\277\\241\\276\\356\\276\\320\\300\\3`
   \   0000002C   ........           DC32 `?<Constant "11. \\261\\342\\277\\357\\261\\342 X\\277`
   \   00000030   ........           DC32 `?<Constant "12. \\261\\342\\277\\357\\261\\342 Y\\277`
   \   00000034   ........           DC32 `?<Constant "13.GPS\\271\\374\\300\\247\\271\\376\\276`
   \   00000038   ........           DC32 `?<Constant "14. \\306\\304\\305\\267\\272\\352\\267\\2`
   \   0000003C   ........           DC32 `?<Constant "15. \\303\\312\\261\\342 3\\272\\320\\264`
   \   00000040   ........           DC32 `?<Constant "16. \\270\\360\\265\\347\\270\\270\\301\\2`
   \   00000044   ........           DC32 `?<Constant "17. \\260\\370\\310\\270\\300\\374\\270\\3`
     63               "0.시동오프동작중    ",     
     64               "1.에코버튼이오프    ",
     65               "2.시동키오프        ",
     66               "3. RPM이없음        ",
     67               "4. SPEED가있음      ",
     68               "5. GPS에속도가있음  ",
     69               "6.기어가중립        ",     
     70               "7.운행중배터리낮음  ",
     71               "8.기준배터리낮음    ",
     72               "9.냉각수가전압높음  ",
     73               "10. 에어압이전압낮음",
     74               "11. 기울기 X오버    ",
     75               "12. 기울기 Y오버    ",
     76               "13.GPS범위벗어남    ",     
     77               "14. 파킹브레이크없음",
     78               "15. 초기 3분대기    ",
     79               "16. 모든만족 3초대기",
     80               "17. 공회전모드진입  "     
     81          };
     82          
     83          

   \                                 In section .data, align 4
     84          const u8 *DISP_WORD[10]={
   \                     DISP_WORD:
   \   00000000   ........           DC32 `?<Constant "- USB \\276\\370\\300\\275          ">`
   \   00000004   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000014   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000        
     85               "- USB 없음          "
     86          };
     87          

   \                                 In section .text, align 2, keep-with-next
     88          void EMS_View_Mode(void)
     89          {     
   \                     EMS_View_Mode:
   \   00000000   80B5               PUSH     {R7,LR}
     90               sprintf( (char *)Display_Buff,"%s ",EMS_ON_WORD[EMSOn_Check] );
   \   00000002   ........           LDR.W    R0,??DataTable156_1
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   ........           LDR.W    R1,??DataTable156_2
   \   0000000C   51F82020           LDR      R2,[R1, R0, LSL #+2]
   \   00000010   ....               ADR.N    R1,??DataTable153  ;; "%s "
   \   00000012   ........           LDR.W    R0,??DataTable156_3
   \   00000016   ........           BL       sprintf
     91               GLcd_PutString(0,0,Display_Buff,1);  
   \   0000001A   0123               MOVS     R3,#+1
   \   0000001C   ........           LDR.W    R2,??DataTable156_3
   \   00000020   0021               MOVS     R1,#+0
   \   00000022   0020               MOVS     R0,#+0
   \   00000024   ........           BL       GLcd_PutString
     92               sprintf( (char *)Display_Buff,"%s ",EMS_OFF_WORD[EMSOff_Check] );
   \   00000028   ........           LDR.W    R0,??DataTable156_4
   \   0000002C   0078               LDRB     R0,[R0, #+0]
   \   0000002E   ........           LDR.W    R1,??DataTable156_5
   \   00000032   51F82020           LDR      R2,[R1, R0, LSL #+2]
   \   00000036   ....               ADR.N    R1,??DataTable153  ;; "%s "
   \   00000038   ........           LDR.W    R0,??DataTable156_3
   \   0000003C   ........           BL       sprintf
     93               GLcd_PutString(0,16,Display_Buff,1);             
   \   00000040   0123               MOVS     R3,#+1
   \   00000042   ........           LDR.W    R2,??DataTable156_3
   \   00000046   1021               MOVS     R1,#+16
   \   00000048   0020               MOVS     R0,#+0
   \   0000004A   ........           BL       GLcd_PutString
     94          }
   \   0000004E   01BD               POP      {R0,PC}          ;; return
     95          

   \                                 In section .text, align 2, keep-with-next
     96          void InputIO_View(void)
     97          {
   \                     InputIO_View:
   \   00000000   80B5               PUSH     {R7,LR}
     98          	if ( (Info.Input_Status & INPUT_BREAK_FLAG)  )    // 브레이크를 밟고 있는가?
   \   00000002   ........           LDR.W    R0,??DataTable156_6
   \   00000006   90F85D00           LDRB     R0,[R0, #+93]
   \   0000000A   C007               LSLS     R0,R0,#+31
   \   0000000C   08D5               BPL.N    ??InputIO_View_0
     99          		GLcd_SmallPutchar(0,0,0x02,0,1);	// 채워진 네모 // 입력중
   \   0000000E   0120               MOVS     R0,#+1
   \   00000010   0090               STR      R0,[SP, #+0]
   \   00000012   0023               MOVS     R3,#+0
   \   00000014   0222               MOVS     R2,#+2
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   ........           BL       GLcd_SmallPutchar
   \   0000001E   07E0               B.N      ??InputIO_View_1
    100          	else
    101          		GLcd_SmallPutchar(0,0,0x01,0,1);	// 빈 네모
   \                     ??InputIO_View_0:
   \   00000020   0120               MOVS     R0,#+1
   \   00000022   0090               STR      R0,[SP, #+0]
   \   00000024   0023               MOVS     R3,#+0
   \   00000026   0122               MOVS     R2,#+1
   \   00000028   0021               MOVS     R1,#+0
   \   0000002A   0020               MOVS     R0,#+0
   \   0000002C   ........           BL       GLcd_SmallPutchar
    102          	
    103          	GLcd_SmallPutString(1,0,"BREAK ",1);           
   \                     ??InputIO_View_1:
   \   00000030   0123               MOVS     R3,#+1
   \   00000032   ........           LDR.W    R2,??DataTable156_7
   \   00000036   0021               MOVS     R1,#+0
   \   00000038   0120               MOVS     R0,#+1
   \   0000003A   ........           BL       GLcd_SmallPutString
    104          	
    105          	if ( (Info.Input_Status & INPUT_GEAR_FLAG)  )    // 키어가 중립인가>?
   \   0000003E   ........           LDR.W    R0,??DataTable156_6
   \   00000042   90F85D00           LDRB     R0,[R0, #+93]
   \   00000046   8007               LSLS     R0,R0,#+30
   \   00000048   08D5               BPL.N    ??InputIO_View_2
    106          		GLcd_SmallPutchar(5,0,0x02,0,1);	// 채워진 네모 // 입력중
   \   0000004A   0120               MOVS     R0,#+1
   \   0000004C   0090               STR      R0,[SP, #+0]
   \   0000004E   0023               MOVS     R3,#+0
   \   00000050   0222               MOVS     R2,#+2
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   0520               MOVS     R0,#+5
   \   00000056   ........           BL       GLcd_SmallPutchar
   \   0000005A   07E0               B.N      ??InputIO_View_3
    107          	else
    108          		GLcd_SmallPutchar(5,0,0x01,0,1);	// 빈 네모
   \                     ??InputIO_View_2:
   \   0000005C   0120               MOVS     R0,#+1
   \   0000005E   0090               STR      R0,[SP, #+0]
   \   00000060   0023               MOVS     R3,#+0
   \   00000062   0122               MOVS     R2,#+1
   \   00000064   0021               MOVS     R1,#+0
   \   00000066   0520               MOVS     R0,#+5
   \   00000068   ........           BL       GLcd_SmallPutchar
    109          	
    110          	GLcd_SmallPutString(6,0,"GEAR  ",1);
   \                     ??InputIO_View_3:
   \   0000006C   0123               MOVS     R3,#+1
   \   0000006E   ........           LDR.W    R2,??DataTable156_8
   \   00000072   0021               MOVS     R1,#+0
   \   00000074   0620               MOVS     R0,#+6
   \   00000076   ........           BL       GLcd_SmallPutString
    111          	
    112          	if ( (Info.Input_Status & INPUT_PARKING_BREAK_FLAG)  )    // 파킹 브레이크 중인가?
   \   0000007A   ........           LDR.W    R0,??DataTable156_6
   \   0000007E   90F85D00           LDRB     R0,[R0, #+93]
   \   00000082   4007               LSLS     R0,R0,#+29
   \   00000084   08D5               BPL.N    ??InputIO_View_4
    113          		GLcd_SmallPutchar(0,8,0x02,0,1);	// 채워진 네모 // 입력중
   \   00000086   0120               MOVS     R0,#+1
   \   00000088   0090               STR      R0,[SP, #+0]
   \   0000008A   0023               MOVS     R3,#+0
   \   0000008C   0222               MOVS     R2,#+2
   \   0000008E   0821               MOVS     R1,#+8
   \   00000090   0020               MOVS     R0,#+0
   \   00000092   ........           BL       GLcd_SmallPutchar
   \   00000096   07E0               B.N      ??InputIO_View_5
    114          	else
    115          		GLcd_SmallPutchar(0,8,0x01,0,1);	// 빈 네모
   \                     ??InputIO_View_4:
   \   00000098   0120               MOVS     R0,#+1
   \   0000009A   0090               STR      R0,[SP, #+0]
   \   0000009C   0023               MOVS     R3,#+0
   \   0000009E   0122               MOVS     R2,#+1
   \   000000A0   0821               MOVS     R1,#+8
   \   000000A2   0020               MOVS     R0,#+0
   \   000000A4   ........           BL       GLcd_SmallPutchar
    116          	
    117          	GLcd_SmallPutString(1,8,"PARKING",1);
   \                     ??InputIO_View_5:
   \   000000A8   0123               MOVS     R3,#+1
   \   000000AA   ........           LDR.W    R2,??DataTable156_9
   \   000000AE   0821               MOVS     R1,#+8
   \   000000B0   0120               MOVS     R0,#+1
   \   000000B2   ........           BL       GLcd_SmallPutString
    118          	
    119          	if ( (Info.Input_Status & INPUT_RLIGHT_FLAG)  )    // 오른쪽 전조등이 켜져 있는가?
   \   000000B6   ........           LDR.W    R0,??DataTable156_6
   \   000000BA   90F85D00           LDRB     R0,[R0, #+93]
   \   000000BE   0007               LSLS     R0,R0,#+28
   \   000000C0   08D5               BPL.N    ??InputIO_View_6
    120          		GLcd_SmallPutchar(5,8,0x02,0,1);	// 채워진 네모 // 입력중
   \   000000C2   0120               MOVS     R0,#+1
   \   000000C4   0090               STR      R0,[SP, #+0]
   \   000000C6   0023               MOVS     R3,#+0
   \   000000C8   0222               MOVS     R2,#+2
   \   000000CA   0821               MOVS     R1,#+8
   \   000000CC   0520               MOVS     R0,#+5
   \   000000CE   ........           BL       GLcd_SmallPutchar
   \   000000D2   07E0               B.N      ??InputIO_View_7
    121          	else
    122          		GLcd_SmallPutchar(5,8,0x01,0,1);	// 빈 네모
   \                     ??InputIO_View_6:
   \   000000D4   0120               MOVS     R0,#+1
   \   000000D6   0090               STR      R0,[SP, #+0]
   \   000000D8   0023               MOVS     R3,#+0
   \   000000DA   0122               MOVS     R2,#+1
   \   000000DC   0821               MOVS     R1,#+8
   \   000000DE   0520               MOVS     R0,#+5
   \   000000E0   ........           BL       GLcd_SmallPutchar
    123          	
    124          	GLcd_SmallPutString(6,8,"RLIGHT",1);
   \                     ??InputIO_View_7:
   \   000000E4   0123               MOVS     R3,#+1
   \   000000E6   ........           LDR.W    R2,??DataTable156_10
   \   000000EA   0821               MOVS     R1,#+8
   \   000000EC   0620               MOVS     R0,#+6
   \   000000EE   ........           BL       GLcd_SmallPutString
    125          	
    126          	if ( (Info.Input_Status & INPUT_LLIGHT_FLAG)  )    // 왼쪽 전조등이 켜져 있는가?
   \   000000F2   ........           LDR.W    R0,??DataTable156_6
   \   000000F6   90F85D00           LDRB     R0,[R0, #+93]
   \   000000FA   C006               LSLS     R0,R0,#+27
   \   000000FC   08D5               BPL.N    ??InputIO_View_8
    127          		GLcd_SmallPutchar(0,16,0x02,0,1);	// 채워진 네모 // 입력중
   \   000000FE   0120               MOVS     R0,#+1
   \   00000100   0090               STR      R0,[SP, #+0]
   \   00000102   0023               MOVS     R3,#+0
   \   00000104   0222               MOVS     R2,#+2
   \   00000106   1021               MOVS     R1,#+16
   \   00000108   0020               MOVS     R0,#+0
   \   0000010A   ........           BL       GLcd_SmallPutchar
   \   0000010E   07E0               B.N      ??InputIO_View_9
    128          	else
    129          		GLcd_SmallPutchar(0,16,0x01,0,1);	// 빈 네모
   \                     ??InputIO_View_8:
   \   00000110   0120               MOVS     R0,#+1
   \   00000112   0090               STR      R0,[SP, #+0]
   \   00000114   0023               MOVS     R3,#+0
   \   00000116   0122               MOVS     R2,#+1
   \   00000118   1021               MOVS     R1,#+16
   \   0000011A   0020               MOVS     R0,#+0
   \   0000011C   ........           BL       GLcd_SmallPutchar
    130          	
    131          	GLcd_SmallPutString(1,16,"LLIGHT",1);
   \                     ??InputIO_View_9:
   \   00000120   0123               MOVS     R3,#+1
   \   00000122   ........           LDR.W    R2,??DataTable156_11
   \   00000126   1021               MOVS     R1,#+16
   \   00000128   0120               MOVS     R0,#+1
   \   0000012A   ........           BL       GLcd_SmallPutString
    132          	
    133          	if ( (Info.Input_Status & INPUT_F_DOOR_FLAG)  )    // 앞문이 열려있는가?
   \   0000012E   ........           LDR.W    R0,??DataTable156_6
   \   00000132   90F85D00           LDRB     R0,[R0, #+93]
   \   00000136   8006               LSLS     R0,R0,#+26
   \   00000138   08D5               BPL.N    ??InputIO_View_10
    134          		GLcd_SmallPutchar(5,16,0x02,0,1);	// 채워진 네모 // 입력중
   \   0000013A   0120               MOVS     R0,#+1
   \   0000013C   0090               STR      R0,[SP, #+0]
   \   0000013E   0023               MOVS     R3,#+0
   \   00000140   0222               MOVS     R2,#+2
   \   00000142   1021               MOVS     R1,#+16
   \   00000144   0520               MOVS     R0,#+5
   \   00000146   ........           BL       GLcd_SmallPutchar
   \   0000014A   07E0               B.N      ??InputIO_View_11
    135          	else
    136          		GLcd_SmallPutchar(5,16,0x01,0,1);	// 빈 네모
   \                     ??InputIO_View_10:
   \   0000014C   0120               MOVS     R0,#+1
   \   0000014E   0090               STR      R0,[SP, #+0]
   \   00000150   0023               MOVS     R3,#+0
   \   00000152   0122               MOVS     R2,#+1
   \   00000154   1021               MOVS     R1,#+16
   \   00000156   0520               MOVS     R0,#+5
   \   00000158   ........           BL       GLcd_SmallPutchar
    137          	
    138          	GLcd_SmallPutString(6,16,"F_DOOR",1);      
   \                     ??InputIO_View_11:
   \   0000015C   0123               MOVS     R3,#+1
   \   0000015E   ........           LDR.W    R2,??DataTable156_12
   \   00000162   1021               MOVS     R1,#+16
   \   00000164   0620               MOVS     R0,#+6
   \   00000166   ........           BL       GLcd_SmallPutString
    139          	
    140          	if ( (Info.Input_Status & INPUT_R_DOOR_FLAG)  )    // 뒷문이 열려 있는가?
   \   0000016A   ........           LDR.W    R0,??DataTable156_6
   \   0000016E   90F85D00           LDRB     R0,[R0, #+93]
   \   00000172   4006               LSLS     R0,R0,#+25
   \   00000174   08D5               BPL.N    ??InputIO_View_12
    141          		GLcd_SmallPutchar(0,24,0x02,0,1);	// 채워진 네모 // 입력중
   \   00000176   0120               MOVS     R0,#+1
   \   00000178   0090               STR      R0,[SP, #+0]
   \   0000017A   0023               MOVS     R3,#+0
   \   0000017C   0222               MOVS     R2,#+2
   \   0000017E   1821               MOVS     R1,#+24
   \   00000180   0020               MOVS     R0,#+0
   \   00000182   ........           BL       GLcd_SmallPutchar
   \   00000186   07E0               B.N      ??InputIO_View_13
    142          	else
    143          		GLcd_SmallPutchar(0,24,0x01,0,1);	// 빈 네모
   \                     ??InputIO_View_12:
   \   00000188   0120               MOVS     R0,#+1
   \   0000018A   0090               STR      R0,[SP, #+0]
   \   0000018C   0023               MOVS     R3,#+0
   \   0000018E   0122               MOVS     R2,#+1
   \   00000190   1821               MOVS     R1,#+24
   \   00000192   0020               MOVS     R0,#+0
   \   00000194   ........           BL       GLcd_SmallPutchar
    144          	
    145          	GLcd_SmallPutString(1,24,"R_DOOR",1);  
   \                     ??InputIO_View_13:
   \   00000198   0123               MOVS     R3,#+1
   \   0000019A   ........           LDR.W    R2,??DataTable156_13
   \   0000019E   1821               MOVS     R1,#+24
   \   000001A0   0120               MOVS     R0,#+1
   \   000001A2   ........           BL       GLcd_SmallPutString
    146          	if ( (Info.Input_Status & INPUT_KEYON_FLAG)  )    // 뒷문이 열려 있는가?
   \   000001A6   ........           LDR.W    R0,??DataTable156_6
   \   000001AA   90F85D00           LDRB     R0,[R0, #+93]
   \   000001AE   0006               LSLS     R0,R0,#+24
   \   000001B0   08D5               BPL.N    ??InputIO_View_14
    147          		GLcd_SmallPutchar(5,24,0x02,0,1);	// 채워진 네모 // 입력중
   \   000001B2   0120               MOVS     R0,#+1
   \   000001B4   0090               STR      R0,[SP, #+0]
   \   000001B6   0023               MOVS     R3,#+0
   \   000001B8   0222               MOVS     R2,#+2
   \   000001BA   1821               MOVS     R1,#+24
   \   000001BC   0520               MOVS     R0,#+5
   \   000001BE   ........           BL       GLcd_SmallPutchar
   \   000001C2   07E0               B.N      ??InputIO_View_15
    148          	else
    149          		GLcd_SmallPutchar(5,24,0x01,0,1);	// 빈 네모
   \                     ??InputIO_View_14:
   \   000001C4   0120               MOVS     R0,#+1
   \   000001C6   0090               STR      R0,[SP, #+0]
   \   000001C8   0023               MOVS     R3,#+0
   \   000001CA   0122               MOVS     R2,#+1
   \   000001CC   1821               MOVS     R1,#+24
   \   000001CE   0520               MOVS     R0,#+5
   \   000001D0   ........           BL       GLcd_SmallPutchar
    150          	
    151          	GLcd_SmallPutString(6,24,"KEY_ON",1);  
   \                     ??InputIO_View_15:
   \   000001D4   0123               MOVS     R3,#+1
   \   000001D6   ........           LDR.W    R2,??DataTable156_14
   \   000001DA   1821               MOVS     R1,#+24
   \   000001DC   0620               MOVS     R0,#+6
   \   000001DE   ........           BL       GLcd_SmallPutString
    152               
    153          }
   \   000001E2   01BD               POP      {R0,PC}          ;; return
    154          

   \                                 In section .text, align 2, keep-with-next
    155          void InputIO_Reverse_View(void)
    156          {
   \                     InputIO_Reverse_View:
   \   00000000   80B5               PUSH     {R7,LR}
    157          
    158          	if ( (INPUT_REVERSE_DATA & INPUT_BREAK_FLAG)  )    // 브레이크를 밟고 있는가?
   \   00000002   ........           LDR.W    R0,??DataTable156_15
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   C007               LSLS     R0,R0,#+31
   \   0000000A   08D5               BPL.N    ??InputIO_Reverse_View_0
    159          		GLcd_SmallPutchar(0,0,0x02,0,1);	// 채워진 네모 // 입력중
   \   0000000C   0120               MOVS     R0,#+1
   \   0000000E   0090               STR      R0,[SP, #+0]
   \   00000010   0023               MOVS     R3,#+0
   \   00000012   0222               MOVS     R2,#+2
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   0020               MOVS     R0,#+0
   \   00000018   ........           BL       GLcd_SmallPutchar
   \   0000001C   07E0               B.N      ??InputIO_Reverse_View_1
    160          	else
    161          		GLcd_SmallPutchar(0,0,0x01,0,1);	// 빈 네모
   \                     ??InputIO_Reverse_View_0:
   \   0000001E   0120               MOVS     R0,#+1
   \   00000020   0090               STR      R0,[SP, #+0]
   \   00000022   0023               MOVS     R3,#+0
   \   00000024   0122               MOVS     R2,#+1
   \   00000026   0021               MOVS     R1,#+0
   \   00000028   0020               MOVS     R0,#+0
   \   0000002A   ........           BL       GLcd_SmallPutchar
    162          	if(IOReverse_Count == 0)
   \                     ??InputIO_Reverse_View_1:
   \   0000002E   ........           LDR.W    R0,??DataTable156_16
   \   00000032   0078               LDRB     R0,[R0, #+0]
   \   00000034   0028               CMP      R0,#+0
   \   00000036   14D1               BNE.N    ??InputIO_Reverse_View_2
    163               {
    164                    if(Toogle_Cursor == 0)
   \   00000038   ........           LDR.W    R0,??DataTable156_17
   \   0000003C   0078               LDRB     R0,[R0, #+0]
   \   0000003E   0028               CMP      R0,#+0
   \   00000040   07D1               BNE.N    ??InputIO_Reverse_View_3
    165                         GLcd_SmallPutString(1,0,"BREAK ",1);          
   \   00000042   0123               MOVS     R3,#+1
   \   00000044   ........           ADR.W    R2,`?<Constant "BREAK ">`
   \   00000048   0021               MOVS     R1,#+0
   \   0000004A   0120               MOVS     R0,#+1
   \   0000004C   ........           BL       GLcd_SmallPutString
   \   00000050   0EE0               B.N      ??InputIO_Reverse_View_4
    166                    else
    167                         GLcd_SmallPutString(1,0,"BREAK ",2);          
   \                     ??InputIO_Reverse_View_3:
   \   00000052   0223               MOVS     R3,#+2
   \   00000054   ........           ADR.W    R2,`?<Constant "BREAK ">`
   \   00000058   0021               MOVS     R1,#+0
   \   0000005A   0120               MOVS     R0,#+1
   \   0000005C   ........           BL       GLcd_SmallPutString
   \   00000060   06E0               B.N      ??InputIO_Reverse_View_4
    168               }else
    169                    GLcd_SmallPutString(1,0,"BREAK ",1);          
   \                     ??InputIO_Reverse_View_2:
   \   00000062   0123               MOVS     R3,#+1
   \   00000064   ........           ADR.W    R2,`?<Constant "BREAK ">`
   \   00000068   0021               MOVS     R1,#+0
   \   0000006A   0120               MOVS     R0,#+1
   \   0000006C   ........           BL       GLcd_SmallPutString
    170          	
    171          	if ( (INPUT_REVERSE_DATA & INPUT_GEAR_FLAG)  )    // 키어가 중립인가>?
   \                     ??InputIO_Reverse_View_4:
   \   00000070   ........           LDR.W    R0,??DataTable156_15
   \   00000074   0078               LDRB     R0,[R0, #+0]
   \   00000076   8007               LSLS     R0,R0,#+30
   \   00000078   08D5               BPL.N    ??InputIO_Reverse_View_5
    172          		GLcd_SmallPutchar(5,0,0x02,0,1);	// 채워진 네모 // 입력중
   \   0000007A   0120               MOVS     R0,#+1
   \   0000007C   0090               STR      R0,[SP, #+0]
   \   0000007E   0023               MOVS     R3,#+0
   \   00000080   0222               MOVS     R2,#+2
   \   00000082   0021               MOVS     R1,#+0
   \   00000084   0520               MOVS     R0,#+5
   \   00000086   ........           BL       GLcd_SmallPutchar
   \   0000008A   07E0               B.N      ??InputIO_Reverse_View_6
    173          	else
    174          		GLcd_SmallPutchar(5,0,0x01,0,1);	// 빈 네모
   \                     ??InputIO_Reverse_View_5:
   \   0000008C   0120               MOVS     R0,#+1
   \   0000008E   0090               STR      R0,[SP, #+0]
   \   00000090   0023               MOVS     R3,#+0
   \   00000092   0122               MOVS     R2,#+1
   \   00000094   0021               MOVS     R1,#+0
   \   00000096   0520               MOVS     R0,#+5
   \   00000098   ........           BL       GLcd_SmallPutchar
    175          	
    176          	if(IOReverse_Count == 1)
   \                     ??InputIO_Reverse_View_6:
   \   0000009C   ........           LDR.W    R0,??DataTable156_16
   \   000000A0   0078               LDRB     R0,[R0, #+0]
   \   000000A2   0128               CMP      R0,#+1
   \   000000A4   14D1               BNE.N    ??InputIO_Reverse_View_7
    177               {
    178                    if(Toogle_Cursor == 0)
   \   000000A6   ........           LDR.W    R0,??DataTable156_17
   \   000000AA   0078               LDRB     R0,[R0, #+0]
   \   000000AC   0028               CMP      R0,#+0
   \   000000AE   07D1               BNE.N    ??InputIO_Reverse_View_8
    179                         GLcd_SmallPutString(6,0,"GEAR  ",1);
   \   000000B0   0123               MOVS     R3,#+1
   \   000000B2   ........           ADR.W    R2,`?<Constant "GEAR  ">`
   \   000000B6   0021               MOVS     R1,#+0
   \   000000B8   0620               MOVS     R0,#+6
   \   000000BA   ........           BL       GLcd_SmallPutString
   \   000000BE   0EE0               B.N      ??InputIO_Reverse_View_9
    180                    else
    181                         GLcd_SmallPutString(6,0,"GEAR  ",2);
   \                     ??InputIO_Reverse_View_8:
   \   000000C0   0223               MOVS     R3,#+2
   \   000000C2   ........           ADR.W    R2,`?<Constant "GEAR  ">`
   \   000000C6   0021               MOVS     R1,#+0
   \   000000C8   0620               MOVS     R0,#+6
   \   000000CA   ........           BL       GLcd_SmallPutString
   \   000000CE   06E0               B.N      ??InputIO_Reverse_View_9
    182               }else
    183                     GLcd_SmallPutString(6,0,"GEAR  ",1);
   \                     ??InputIO_Reverse_View_7:
   \   000000D0   0123               MOVS     R3,#+1
   \   000000D2   ........           ADR.W    R2,`?<Constant "GEAR  ">`
   \   000000D6   0021               MOVS     R1,#+0
   \   000000D8   0620               MOVS     R0,#+6
   \   000000DA   ........           BL       GLcd_SmallPutString
    184          	
    185          	if ( (INPUT_REVERSE_DATA & INPUT_PARKING_BREAK_FLAG)  )    // 파킹 브레이크 중인가?
   \                     ??InputIO_Reverse_View_9:
   \   000000DE   ........           LDR.W    R0,??DataTable156_15
   \   000000E2   0078               LDRB     R0,[R0, #+0]
   \   000000E4   4007               LSLS     R0,R0,#+29
   \   000000E6   08D5               BPL.N    ??InputIO_Reverse_View_10
    186          		GLcd_SmallPutchar(0,8,0x02,0,1);	// 채워진 네모 // 입력중
   \   000000E8   0120               MOVS     R0,#+1
   \   000000EA   0090               STR      R0,[SP, #+0]
   \   000000EC   0023               MOVS     R3,#+0
   \   000000EE   0222               MOVS     R2,#+2
   \   000000F0   0821               MOVS     R1,#+8
   \   000000F2   0020               MOVS     R0,#+0
   \   000000F4   ........           BL       GLcd_SmallPutchar
   \   000000F8   07E0               B.N      ??InputIO_Reverse_View_11
    187          	else
    188          		GLcd_SmallPutchar(0,8,0x01,0,1);	// 빈 네모
   \                     ??InputIO_Reverse_View_10:
   \   000000FA   0120               MOVS     R0,#+1
   \   000000FC   0090               STR      R0,[SP, #+0]
   \   000000FE   0023               MOVS     R3,#+0
   \   00000100   0122               MOVS     R2,#+1
   \   00000102   0821               MOVS     R1,#+8
   \   00000104   0020               MOVS     R0,#+0
   \   00000106   ........           BL       GLcd_SmallPutchar
    189          	if(IOReverse_Count == 2)
   \                     ??InputIO_Reverse_View_11:
   \   0000010A   ........           LDR.W    R0,??DataTable156_16
   \   0000010E   0078               LDRB     R0,[R0, #+0]
   \   00000110   0228               CMP      R0,#+2
   \   00000112   14D1               BNE.N    ??InputIO_Reverse_View_12
    190               {
    191                    if(Toogle_Cursor == 0)               
   \   00000114   ........           LDR.W    R0,??DataTable156_17
   \   00000118   0078               LDRB     R0,[R0, #+0]
   \   0000011A   0028               CMP      R0,#+0
   \   0000011C   07D1               BNE.N    ??InputIO_Reverse_View_13
    192                         GLcd_SmallPutString(1,8,"PARKING",1);
   \   0000011E   0123               MOVS     R3,#+1
   \   00000120   ........           ADR.W    R2,`?<Constant "PARKING">`
   \   00000124   0821               MOVS     R1,#+8
   \   00000126   0120               MOVS     R0,#+1
   \   00000128   ........           BL       GLcd_SmallPutString
   \   0000012C   0EE0               B.N      ??InputIO_Reverse_View_14
    193                    else
    194                         GLcd_SmallPutString(1,8,"PARKING",2);
   \                     ??InputIO_Reverse_View_13:
   \   0000012E   0223               MOVS     R3,#+2
   \   00000130   ........           ADR.W    R2,`?<Constant "PARKING">`
   \   00000134   0821               MOVS     R1,#+8
   \   00000136   0120               MOVS     R0,#+1
   \   00000138   ........           BL       GLcd_SmallPutString
   \   0000013C   06E0               B.N      ??InputIO_Reverse_View_14
    195               }else
    196                    GLcd_SmallPutString(1,8,"PARKING",1);
   \                     ??InputIO_Reverse_View_12:
   \   0000013E   0123               MOVS     R3,#+1
   \   00000140   ........           ADR.W    R2,`?<Constant "PARKING">`
   \   00000144   0821               MOVS     R1,#+8
   \   00000146   0120               MOVS     R0,#+1
   \   00000148   ........           BL       GLcd_SmallPutString
    197          	if ( (INPUT_REVERSE_DATA & INPUT_RLIGHT_FLAG)  )    // 오른쪽 전조등이 켜져 있는가?
   \                     ??InputIO_Reverse_View_14:
   \   0000014C   ........           LDR.W    R0,??DataTable156_15
   \   00000150   0078               LDRB     R0,[R0, #+0]
   \   00000152   0007               LSLS     R0,R0,#+28
   \   00000154   08D5               BPL.N    ??InputIO_Reverse_View_15
    198          		GLcd_SmallPutchar(5,8,0x02,0,1);	// 채워진 네모 // 입력중
   \   00000156   0120               MOVS     R0,#+1
   \   00000158   0090               STR      R0,[SP, #+0]
   \   0000015A   0023               MOVS     R3,#+0
   \   0000015C   0222               MOVS     R2,#+2
   \   0000015E   0821               MOVS     R1,#+8
   \   00000160   0520               MOVS     R0,#+5
   \   00000162   ........           BL       GLcd_SmallPutchar
   \   00000166   07E0               B.N      ??InputIO_Reverse_View_16
    199          	else
    200          		GLcd_SmallPutchar(5,8,0x01,0,1);	// 빈 네모
   \                     ??InputIO_Reverse_View_15:
   \   00000168   0120               MOVS     R0,#+1
   \   0000016A   0090               STR      R0,[SP, #+0]
   \   0000016C   0023               MOVS     R3,#+0
   \   0000016E   0122               MOVS     R2,#+1
   \   00000170   0821               MOVS     R1,#+8
   \   00000172   0520               MOVS     R0,#+5
   \   00000174   ........           BL       GLcd_SmallPutchar
    201          	if(IOReverse_Count == 3)
   \                     ??InputIO_Reverse_View_16:
   \   00000178   ....               LDR.N    R0,??DataTable156_16
   \   0000017A   0078               LDRB     R0,[R0, #+0]
   \   0000017C   0328               CMP      R0,#+3
   \   0000017E   13D1               BNE.N    ??InputIO_Reverse_View_17
    202               {
    203                    if(Toogle_Cursor == 0)                  
   \   00000180   ....               LDR.N    R0,??DataTable156_17
   \   00000182   0078               LDRB     R0,[R0, #+0]
   \   00000184   0028               CMP      R0,#+0
   \   00000186   07D1               BNE.N    ??InputIO_Reverse_View_18
    204                         GLcd_SmallPutString(6,8,"RLIGHT",1);
   \   00000188   0123               MOVS     R3,#+1
   \   0000018A   ........           ADR.W    R2,`?<Constant "RLIGHT">`
   \   0000018E   0821               MOVS     R1,#+8
   \   00000190   0620               MOVS     R0,#+6
   \   00000192   ........           BL       GLcd_SmallPutString
   \   00000196   0EE0               B.N      ??InputIO_Reverse_View_19
    205                    else
    206                         GLcd_SmallPutString(6,8,"RLIGHT",2);               
   \                     ??InputIO_Reverse_View_18:
   \   00000198   0223               MOVS     R3,#+2
   \   0000019A   ........           ADR.W    R2,`?<Constant "RLIGHT">`
   \   0000019E   0821               MOVS     R1,#+8
   \   000001A0   0620               MOVS     R0,#+6
   \   000001A2   ........           BL       GLcd_SmallPutString
   \   000001A6   06E0               B.N      ??InputIO_Reverse_View_19
    207               }else
    208                    GLcd_SmallPutString(6,8,"RLIGHT",1);
   \                     ??InputIO_Reverse_View_17:
   \   000001A8   0123               MOVS     R3,#+1
   \   000001AA   ........           ADR.W    R2,`?<Constant "RLIGHT">`
   \   000001AE   0821               MOVS     R1,#+8
   \   000001B0   0620               MOVS     R0,#+6
   \   000001B2   ........           BL       GLcd_SmallPutString
    209          	
    210          	if ( (INPUT_REVERSE_DATA & INPUT_LLIGHT_FLAG)  )    // 왼쪽 전조등이 켜져 있는가?
   \                     ??InputIO_Reverse_View_19:
   \   000001B6   ....               LDR.N    R0,??DataTable156_15
   \   000001B8   0078               LDRB     R0,[R0, #+0]
   \   000001BA   C006               LSLS     R0,R0,#+27
   \   000001BC   08D5               BPL.N    ??InputIO_Reverse_View_20
    211          		GLcd_SmallPutchar(0,16,0x02,0,1);	// 채워진 네모 // 입력중
   \   000001BE   0120               MOVS     R0,#+1
   \   000001C0   0090               STR      R0,[SP, #+0]
   \   000001C2   0023               MOVS     R3,#+0
   \   000001C4   0222               MOVS     R2,#+2
   \   000001C6   1021               MOVS     R1,#+16
   \   000001C8   0020               MOVS     R0,#+0
   \   000001CA   ........           BL       GLcd_SmallPutchar
   \   000001CE   07E0               B.N      ??InputIO_Reverse_View_21
    212          	else
    213          		GLcd_SmallPutchar(0,16,0x01,0,1);	// 빈 네모
   \                     ??InputIO_Reverse_View_20:
   \   000001D0   0120               MOVS     R0,#+1
   \   000001D2   0090               STR      R0,[SP, #+0]
   \   000001D4   0023               MOVS     R3,#+0
   \   000001D6   0122               MOVS     R2,#+1
   \   000001D8   1021               MOVS     R1,#+16
   \   000001DA   0020               MOVS     R0,#+0
   \   000001DC   ........           BL       GLcd_SmallPutchar
    214          	if(IOReverse_Count == 4)
   \                     ??InputIO_Reverse_View_21:
   \   000001E0   ....               LDR.N    R0,??DataTable156_16
   \   000001E2   0078               LDRB     R0,[R0, #+0]
   \   000001E4   0428               CMP      R0,#+4
   \   000001E6   13D1               BNE.N    ??InputIO_Reverse_View_22
    215               {
    216                    if(Toogle_Cursor == 0)                  
   \   000001E8   ....               LDR.N    R0,??DataTable156_17
   \   000001EA   0078               LDRB     R0,[R0, #+0]
   \   000001EC   0028               CMP      R0,#+0
   \   000001EE   07D1               BNE.N    ??InputIO_Reverse_View_23
    217                         GLcd_SmallPutString(1,16,"LLIGHT",1);
   \   000001F0   0123               MOVS     R3,#+1
   \   000001F2   ........           ADR.W    R2,`?<Constant "LLIGHT">`
   \   000001F6   1021               MOVS     R1,#+16
   \   000001F8   0120               MOVS     R0,#+1
   \   000001FA   ........           BL       GLcd_SmallPutString
   \   000001FE   0EE0               B.N      ??InputIO_Reverse_View_24
    218                    else
    219                         GLcd_SmallPutString(1,16,"LLIGHT",2);
   \                     ??InputIO_Reverse_View_23:
   \   00000200   0223               MOVS     R3,#+2
   \   00000202   ........           ADR.W    R2,`?<Constant "LLIGHT">`
   \   00000206   1021               MOVS     R1,#+16
   \   00000208   0120               MOVS     R0,#+1
   \   0000020A   ........           BL       GLcd_SmallPutString
   \   0000020E   06E0               B.N      ??InputIO_Reverse_View_24
    220               }
    221               else
    222                    GLcd_SmallPutString(1,16,"LLIGHT",1);
   \                     ??InputIO_Reverse_View_22:
   \   00000210   0123               MOVS     R3,#+1
   \   00000212   ........           ADR.W    R2,`?<Constant "LLIGHT">`
   \   00000216   1021               MOVS     R1,#+16
   \   00000218   0120               MOVS     R0,#+1
   \   0000021A   ........           BL       GLcd_SmallPutString
    223          	
    224          	if ( (INPUT_REVERSE_DATA & INPUT_F_DOOR_FLAG)  )    // 앞문이 열려있는가?
   \                     ??InputIO_Reverse_View_24:
   \   0000021E   ....               LDR.N    R0,??DataTable156_15
   \   00000220   0078               LDRB     R0,[R0, #+0]
   \   00000222   8006               LSLS     R0,R0,#+26
   \   00000224   08D5               BPL.N    ??InputIO_Reverse_View_25
    225          		GLcd_SmallPutchar(5,16,0x02,0,1);	// 채워진 네모 // 입력중
   \   00000226   0120               MOVS     R0,#+1
   \   00000228   0090               STR      R0,[SP, #+0]
   \   0000022A   0023               MOVS     R3,#+0
   \   0000022C   0222               MOVS     R2,#+2
   \   0000022E   1021               MOVS     R1,#+16
   \   00000230   0520               MOVS     R0,#+5
   \   00000232   ........           BL       GLcd_SmallPutchar
   \   00000236   07E0               B.N      ??InputIO_Reverse_View_26
    226          	else
    227          		GLcd_SmallPutchar(5,16,0x01,0,1);	// 빈 네모
   \                     ??InputIO_Reverse_View_25:
   \   00000238   0120               MOVS     R0,#+1
   \   0000023A   0090               STR      R0,[SP, #+0]
   \   0000023C   0023               MOVS     R3,#+0
   \   0000023E   0122               MOVS     R2,#+1
   \   00000240   1021               MOVS     R1,#+16
   \   00000242   0520               MOVS     R0,#+5
   \   00000244   ........           BL       GLcd_SmallPutchar
    228          	if(IOReverse_Count == 5)
   \                     ??InputIO_Reverse_View_26:
   \   00000248   ....               LDR.N    R0,??DataTable156_16
   \   0000024A   0078               LDRB     R0,[R0, #+0]
   \   0000024C   0528               CMP      R0,#+5
   \   0000024E   13D1               BNE.N    ??InputIO_Reverse_View_27
    229               {
    230                    if(Toogle_Cursor == 0)                    
   \   00000250   ....               LDR.N    R0,??DataTable156_17
   \   00000252   0078               LDRB     R0,[R0, #+0]
   \   00000254   0028               CMP      R0,#+0
   \   00000256   07D1               BNE.N    ??InputIO_Reverse_View_28
    231                         GLcd_SmallPutString(6,16,"F_DOOR",1);         
   \   00000258   0123               MOVS     R3,#+1
   \   0000025A   ........           ADR.W    R2,`?<Constant "F_DOOR">`
   \   0000025E   1021               MOVS     R1,#+16
   \   00000260   0620               MOVS     R0,#+6
   \   00000262   ........           BL       GLcd_SmallPutString
   \   00000266   0EE0               B.N      ??InputIO_Reverse_View_29
    232                    else
    233                         GLcd_SmallPutString(6,16,"F_DOOR",2);                        
   \                     ??InputIO_Reverse_View_28:
   \   00000268   0223               MOVS     R3,#+2
   \   0000026A   ........           ADR.W    R2,`?<Constant "F_DOOR">`
   \   0000026E   1021               MOVS     R1,#+16
   \   00000270   0620               MOVS     R0,#+6
   \   00000272   ........           BL       GLcd_SmallPutString
   \   00000276   06E0               B.N      ??InputIO_Reverse_View_29
    234               }else
    235                    GLcd_SmallPutString(6,16,"F_DOOR",1);
   \                     ??InputIO_Reverse_View_27:
   \   00000278   0123               MOVS     R3,#+1
   \   0000027A   ........           ADR.W    R2,`?<Constant "F_DOOR">`
   \   0000027E   1021               MOVS     R1,#+16
   \   00000280   0620               MOVS     R0,#+6
   \   00000282   ........           BL       GLcd_SmallPutString
    236          	
    237          	if ( (INPUT_REVERSE_DATA & INPUT_R_DOOR_FLAG)  )    // 뒷문이 열려 있는가?
   \                     ??InputIO_Reverse_View_29:
   \   00000286   ....               LDR.N    R0,??DataTable156_15
   \   00000288   0078               LDRB     R0,[R0, #+0]
   \   0000028A   4006               LSLS     R0,R0,#+25
   \   0000028C   08D5               BPL.N    ??InputIO_Reverse_View_30
    238          		GLcd_SmallPutchar(0,24,0x02,0,1);	// 채워진 네모 // 입력중
   \   0000028E   0120               MOVS     R0,#+1
   \   00000290   0090               STR      R0,[SP, #+0]
   \   00000292   0023               MOVS     R3,#+0
   \   00000294   0222               MOVS     R2,#+2
   \   00000296   1821               MOVS     R1,#+24
   \   00000298   0020               MOVS     R0,#+0
   \   0000029A   ........           BL       GLcd_SmallPutchar
   \   0000029E   07E0               B.N      ??InputIO_Reverse_View_31
    239          	else
    240          		GLcd_SmallPutchar(0,24,0x01,0,1);	// 빈 네모
   \                     ??InputIO_Reverse_View_30:
   \   000002A0   0120               MOVS     R0,#+1
   \   000002A2   0090               STR      R0,[SP, #+0]
   \   000002A4   0023               MOVS     R3,#+0
   \   000002A6   0122               MOVS     R2,#+1
   \   000002A8   1821               MOVS     R1,#+24
   \   000002AA   0020               MOVS     R0,#+0
   \   000002AC   ........           BL       GLcd_SmallPutchar
    241               
    242          	if(IOReverse_Count == 6)
   \                     ??InputIO_Reverse_View_31:
   \   000002B0   ....               LDR.N    R0,??DataTable156_16
   \   000002B2   0078               LDRB     R0,[R0, #+0]
   \   000002B4   0628               CMP      R0,#+6
   \   000002B6   13D1               BNE.N    ??InputIO_Reverse_View_32
    243               {
    244                    if(Toogle_Cursor == 0) 	
   \   000002B8   ....               LDR.N    R0,??DataTable156_17
   \   000002BA   0078               LDRB     R0,[R0, #+0]
   \   000002BC   0028               CMP      R0,#+0
   \   000002BE   07D1               BNE.N    ??InputIO_Reverse_View_33
    245                         GLcd_SmallPutString(1,24,"R_DOOR",1);  
   \   000002C0   0123               MOVS     R3,#+1
   \   000002C2   ........           ADR.W    R2,`?<Constant "R_DOOR">`
   \   000002C6   1821               MOVS     R1,#+24
   \   000002C8   0120               MOVS     R0,#+1
   \   000002CA   ........           BL       GLcd_SmallPutString
   \   000002CE   0EE0               B.N      ??InputIO_Reverse_View_34
    246                    else
    247                         GLcd_SmallPutString(1,24,"R_DOOR",2);
   \                     ??InputIO_Reverse_View_33:
   \   000002D0   0223               MOVS     R3,#+2
   \   000002D2   ........           ADR.W    R2,`?<Constant "R_DOOR">`
   \   000002D6   1821               MOVS     R1,#+24
   \   000002D8   0120               MOVS     R0,#+1
   \   000002DA   ........           BL       GLcd_SmallPutString
   \   000002DE   06E0               B.N      ??InputIO_Reverse_View_34
    248               }
    249               else
    250                    GLcd_SmallPutString(1,24,"R_DOOR",1);
   \                     ??InputIO_Reverse_View_32:
   \   000002E0   0123               MOVS     R3,#+1
   \   000002E2   ........           ADR.W    R2,`?<Constant "R_DOOR">`
   \   000002E6   1821               MOVS     R1,#+24
   \   000002E8   0120               MOVS     R0,#+1
   \   000002EA   ........           BL       GLcd_SmallPutString
    251          	if ( (INPUT_REVERSE_DATA & INPUT_KEYON_FLAG)  )    // 뒷문이 열려 있는가?
   \                     ??InputIO_Reverse_View_34:
   \   000002EE   ....               LDR.N    R0,??DataTable156_15
   \   000002F0   0078               LDRB     R0,[R0, #+0]
   \   000002F2   0006               LSLS     R0,R0,#+24
   \   000002F4   08D5               BPL.N    ??InputIO_Reverse_View_35
    252          		GLcd_SmallPutchar(5,24,0x02,0,1);	// 채워진 네모 // 입력중
   \   000002F6   0120               MOVS     R0,#+1
   \   000002F8   0090               STR      R0,[SP, #+0]
   \   000002FA   0023               MOVS     R3,#+0
   \   000002FC   0222               MOVS     R2,#+2
   \   000002FE   1821               MOVS     R1,#+24
   \   00000300   0520               MOVS     R0,#+5
   \   00000302   ........           BL       GLcd_SmallPutchar
   \   00000306   07E0               B.N      ??InputIO_Reverse_View_36
    253          	else
    254          		GLcd_SmallPutchar(5,24,0x01,0,1);	// 빈 네모
   \                     ??InputIO_Reverse_View_35:
   \   00000308   0120               MOVS     R0,#+1
   \   0000030A   0090               STR      R0,[SP, #+0]
   \   0000030C   0023               MOVS     R3,#+0
   \   0000030E   0122               MOVS     R2,#+1
   \   00000310   1821               MOVS     R1,#+24
   \   00000312   0520               MOVS     R0,#+5
   \   00000314   ........           BL       GLcd_SmallPutchar
    255               
    256          	if(IOReverse_Count == 7)
   \                     ??InputIO_Reverse_View_36:
   \   00000318   ....               LDR.N    R0,??DataTable156_16
   \   0000031A   0078               LDRB     R0,[R0, #+0]
   \   0000031C   0728               CMP      R0,#+7
   \   0000031E   13D1               BNE.N    ??InputIO_Reverse_View_37
    257               {
    258                    if(Toogle_Cursor == 0) 		
   \   00000320   ....               LDR.N    R0,??DataTable156_17
   \   00000322   0078               LDRB     R0,[R0, #+0]
   \   00000324   0028               CMP      R0,#+0
   \   00000326   07D1               BNE.N    ??InputIO_Reverse_View_38
    259                         GLcd_SmallPutString(6,24,"KEY_ON",1);  
   \   00000328   0123               MOVS     R3,#+1
   \   0000032A   ........           ADR.W    R2,`?<Constant "KEY_ON">`
   \   0000032E   1821               MOVS     R1,#+24
   \   00000330   0620               MOVS     R0,#+6
   \   00000332   ........           BL       GLcd_SmallPutString
   \   00000336   0EE0               B.N      ??InputIO_Reverse_View_39
    260                    else
    261                         GLcd_SmallPutString(6,24,"KEY_ON",2);  
   \                     ??InputIO_Reverse_View_38:
   \   00000338   0223               MOVS     R3,#+2
   \   0000033A   ........           ADR.W    R2,`?<Constant "KEY_ON">`
   \   0000033E   1821               MOVS     R1,#+24
   \   00000340   0620               MOVS     R0,#+6
   \   00000342   ........           BL       GLcd_SmallPutString
   \   00000346   06E0               B.N      ??InputIO_Reverse_View_39
    262               }else
    263                    GLcd_SmallPutString(6,24,"KEY_ON",1);  
   \                     ??InputIO_Reverse_View_37:
   \   00000348   0123               MOVS     R3,#+1
   \   0000034A   ........           ADR.W    R2,`?<Constant "KEY_ON">`
   \   0000034E   1821               MOVS     R1,#+24
   \   00000350   0620               MOVS     R0,#+6
   \   00000352   ........           BL       GLcd_SmallPutString
    264               
    265          }
   \                     ??InputIO_Reverse_View_39:
   \   00000356   01BD               POP      {R0,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
    266          void Input_View(void)
    267          {
   \                     Input_View:
   \   00000000   80B5               PUSH     {R7,LR}
    268          
    269          	sprintf((char *)Buffer,"LPGP %04.1f",(float)Info.EMS_Data.LPG_PWM_Value/10);
   \   00000002   ....               LDR.N    R0,??DataTable156_6
   \   00000004   B0F85100           LDRH     R0,[R0, #+81]
   \   00000008   ........           BL       __aeabi_ui2f
   \   0000000C   ....               LDR.N    R1,??DataTable156_18  ;; 0x41200000
   \   0000000E   ........           BL       __aeabi_fdiv
   \   00000012   ........           BL       __aeabi_f2d
   \   00000016   0200               MOVS     R2,R0
   \   00000018   0B00               MOVS     R3,R1
   \   0000001A   ........           ADR.W    R1,`?<Constant "LPGP %04.1f">`
   \   0000001E   ....               LDR.N    R0,??DataTable156_19
   \   00000020   ........           BL       sprintf
    270          	GLcd_SmallPutString(0,0,Buffer,1);          
   \   00000024   0123               MOVS     R3,#+1
   \   00000026   ....               LDR.N    R2,??DataTable156_19
   \   00000028   0021               MOVS     R1,#+0
   \   0000002A   0020               MOVS     R0,#+0
   \   0000002C   ........           BL       GLcd_SmallPutString
    271          	
    272          	sprintf((char *)Buffer,"AirP %04.1f",(float)Info.EMS_Data.AirPressure_Volt/1000);
   \   00000030   ....               LDR.N    R0,??DataTable156_6
   \   00000032   B0F84B00           LDRH     R0,[R0, #+75]
   \   00000036   ........           BL       __aeabi_ui2f
   \   0000003A   ....               LDR.N    R1,??DataTable156_20  ;; 0x447a0000
   \   0000003C   ........           BL       __aeabi_fdiv
   \   00000040   ........           BL       __aeabi_f2d
   \   00000044   0200               MOVS     R2,R0
   \   00000046   0B00               MOVS     R3,R1
   \   00000048   ........           ADR.W    R1,`?<Constant "AirP %04.1f">`
   \   0000004C   ....               LDR.N    R0,??DataTable156_19
   \   0000004E   ........           BL       sprintf
    273          	GLcd_SmallPutString(5,0,Buffer,1);               
   \   00000052   0123               MOVS     R3,#+1
   \   00000054   ....               LDR.N    R2,??DataTable156_19
   \   00000056   0021               MOVS     R1,#+0
   \   00000058   0520               MOVS     R0,#+5
   \   0000005A   ........           BL       GLcd_SmallPutString
    274          	
    275          	sprintf((char *)Buffer,"WTmp %04.1f",(float)Info.EMS_Data.CoolWaterTemp_Volt/1000);
   \   0000005E   ....               LDR.N    R0,??DataTable156_6
   \   00000060   B0F84D00           LDRH     R0,[R0, #+77]
   \   00000064   ........           BL       __aeabi_ui2f
   \   00000068   ....               LDR.N    R1,??DataTable156_20  ;; 0x447a0000
   \   0000006A   ........           BL       __aeabi_fdiv
   \   0000006E   ........           BL       __aeabi_f2d
   \   00000072   0200               MOVS     R2,R0
   \   00000074   0B00               MOVS     R3,R1
   \   00000076   ........           ADR.W    R1,`?<Constant "WTmp %04.1f">`
   \   0000007A   ....               LDR.N    R0,??DataTable156_19
   \   0000007C   ........           BL       sprintf
    276          	GLcd_SmallPutString(0,12,Buffer,1);
   \   00000080   0123               MOVS     R3,#+1
   \   00000082   ....               LDR.N    R2,??DataTable156_19
   \   00000084   0C21               MOVS     R1,#+12
   \   00000086   0020               MOVS     R0,#+0
   \   00000088   ........           BL       GLcd_SmallPutString
    277          	
    278          	sprintf((char *)Buffer,"Batt %04.1f",(float)Info.EMS_Data.Battery_Volt/1000);
   \   0000008C   ....               LDR.N    R0,??DataTable156_6
   \   0000008E   B0F84900           LDRH     R0,[R0, #+73]
   \   00000092   ........           BL       __aeabi_ui2f
   \   00000096   ....               LDR.N    R1,??DataTable156_20  ;; 0x447a0000
   \   00000098   ........           BL       __aeabi_fdiv
   \   0000009C   ........           BL       __aeabi_f2d
   \   000000A0   0200               MOVS     R2,R0
   \   000000A2   0B00               MOVS     R3,R1
   \   000000A4   ........           ADR.W    R1,`?<Constant "Batt %04.1f">`
   \   000000A8   ....               LDR.N    R0,??DataTable156_19
   \   000000AA   ........           BL       sprintf
    279          	GLcd_SmallPutString(5,12,Buffer,1);
   \   000000AE   0123               MOVS     R3,#+1
   \   000000B0   ....               LDR.N    R2,??DataTable156_19
   \   000000B2   0C21               MOVS     R1,#+12
   \   000000B4   0520               MOVS     R0,#+5
   \   000000B6   ........           BL       GLcd_SmallPutString
    280          	
    281          	sprintf((char *)Buffer,"Fuel %04.1f",(float)Info.EMS_Data.Fuel_Volt/1000);
   \   000000BA   ....               LDR.N    R0,??DataTable156_6
   \   000000BC   B0F84700           LDRH     R0,[R0, #+71]
   \   000000C0   ........           BL       __aeabi_ui2f
   \   000000C4   ....               LDR.N    R1,??DataTable156_20  ;; 0x447a0000
   \   000000C6   ........           BL       __aeabi_fdiv
   \   000000CA   ........           BL       __aeabi_f2d
   \   000000CE   0200               MOVS     R2,R0
   \   000000D0   0B00               MOVS     R3,R1
   \   000000D2   ........           ADR.W    R1,`?<Constant "Fuel %04.1f">`
   \   000000D6   ....               LDR.N    R0,??DataTable156_19
   \   000000D8   ........           BL       sprintf
    282          	GLcd_SmallPutString(0,24,Buffer,1);			
   \   000000DC   0123               MOVS     R3,#+1
   \   000000DE   ....               LDR.N    R2,??DataTable156_19
   \   000000E0   1821               MOVS     R1,#+24
   \   000000E2   0020               MOVS     R0,#+0
   \   000000E4   ........           BL       GLcd_SmallPutString
    283          	
    284          	sprintf((char *)Buffer,"Accl %04.1f",(float)Info.EMS_Data.Acceller_Volt/1000);
   \   000000E8   ....               LDR.N    R0,??DataTable156_6
   \   000000EA   B0F84F00           LDRH     R0,[R0, #+79]
   \   000000EE   ........           BL       __aeabi_ui2f
   \   000000F2   ....               LDR.N    R1,??DataTable156_20  ;; 0x447a0000
   \   000000F4   ........           BL       __aeabi_fdiv
   \   000000F8   ........           BL       __aeabi_f2d
   \   000000FC   0200               MOVS     R2,R0
   \   000000FE   0B00               MOVS     R3,R1
   \   00000100   ........           ADR.W    R1,`?<Constant "Accl %04.1f">`
   \   00000104   ....               LDR.N    R0,??DataTable156_19
   \   00000106   ........           BL       sprintf
    285          	GLcd_SmallPutString(5,24,Buffer,1);			    
   \   0000010A   0123               MOVS     R3,#+1
   \   0000010C   ....               LDR.N    R2,??DataTable156_19
   \   0000010E   1821               MOVS     R1,#+24
   \   00000110   0520               MOVS     R0,#+5
   \   00000112   ........           BL       GLcd_SmallPutString
    286          }
   \   00000116   01BD               POP      {R0,PC}          ;; return
    287          
    288          

   \                                 In section .text, align 2, keep-with-next
    289          void Write_Word(unsigned char x, unsigned char y, char *string)
    290          {
   \                     Write_Word:
   \   00000000   80B5               PUSH     {R7,LR}
    291               Wait_x = x;
   \   00000002   ....               LDR.N    R3,??DataTable156_21
   \   00000004   1870               STRB     R0,[R3, #+0]
    292               Wait_y = y;
   \   00000006   ....               LDR.N    R0,??DataTable156_22
   \   00000008   0170               STRB     R1,[R0, #+0]
    293               strcpy((char*)LCD_WaitString,string);
   \   0000000A   1100               MOVS     R1,R2
   \   0000000C   ....               LDR.N    R0,??DataTable156_23
   \   0000000E   ........           BL       strcpy
    294          
    295          }
   \   00000012   01BD               POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
    296          void Display(void)
    297          {
   \                     Display:
   \   00000000   00B5               PUSH     {LR}
   \   00000002   85B0               SUB      SP,SP,#+20
    298          	static u16 Display_Time;
    299          	static u8 Led_Flag = 0;
    300               u8 i;
    301               u8 PasswordBuffer[6];
    302          	//////////////////////////////////////////////////////////////////////
    303          	if(GLCD_Refresh_Flag == 0)
   \   00000004   DFF8A80C           LDR.W    R0,??Display_0
   \   00000008   0078               LDRB     R0,[R0, #+0]
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   09D1               BNE.N    ??Display_1
    304               {
    305                    if(!CheckTimeOver(500,Display_Time))		// 500ms 마다 진입               
   \   0000000E   DFF8A40C           LDR.W    R0,??Display_0+0x4
   \   00000012   0188               LDRH     R1,[R0, #+0]
   \   00000014   4FF4FA70           MOV      R0,#+500
   \   00000018   ........           BL       CheckTimeOver
   \   0000001C   0028               CMP      R0,#+0
   \   0000001E   01F03982           BEQ.W    ??Display_2
    306                         return;              
    307               }
    308               
    309               ///////////////////////////////////////////////////////////////////////
    310                
    311               GLCD_Refresh_Flag = 0;
   \                     ??Display_1:
   \   00000022   DFF88C0C           LDR.W    R0,??Display_0
   \   00000026   0021               MOVS     R1,#+0
   \   00000028   0170               STRB     R1,[R0, #+0]
    312               memset(GLCD_Data,0,sizeof(GLCD_Data));
   \   0000002A   4FF4FA62           MOV      R2,#+2000
   \   0000002E   0021               MOVS     R1,#+0
   \   00000030   DFF8840C           LDR.W    R0,??Display_0+0x8
   \   00000034   ........           BL       memset
    313               memset(GLCD_Buffer,0,sizeof(GLCD_Buffer));
   \   00000038   4FF4FA62           MOV      R2,#+2000
   \   0000003C   0021               MOVS     R1,#+0
   \   0000003E   DFF87C0C           LDR.W    R0,??Display_0+0xC
   \   00000042   ........           BL       memset
    314          	Display_Time = MS_TIMER;  	
   \   00000046   DFF8240E           LDR.W    R0,??Display_3   ;; 0x40000c00
   \   0000004A   ........           BL       TIM_GetCounter
   \   0000004E   DFF8641C           LDR.W    R1,??Display_0+0x4
   \   00000052   0880               STRH     R0,[R1, #+0]
    315               if(Led_Flag == 1)
   \   00000054   DFF8680C           LDR.W    R0,??Display_0+0x10
   \   00000058   0078               LDRB     R0,[R0, #+0]
   \   0000005A   0128               CMP      R0,#+1
   \   0000005C   0AD1               BNE.N    ??Display_4
    316               {
    317                    Led_Flag = 0;
   \   0000005E   DFF8600C           LDR.W    R0,??Display_0+0x10
   \   00000062   0021               MOVS     R1,#+0
   \   00000064   0170               STRB     R1,[R0, #+0]
    318                    Toogle_Cursor = 0;   
   \   00000066   DFF85C0C           LDR.W    R0,??Display_0+0x14
   \   0000006A   0021               MOVS     R1,#+0
   \   0000006C   0170               STRB     R1,[R0, #+0]
    319                    LED2_GREEN();
   \   0000006E   ........           BL       LED2_GREEN
   \   00000072   09E0               B.N      ??Display_5
    320               }
    321               else
    322               {
    323                    Led_Flag = 1;
   \                     ??Display_4:
   \   00000074   DFF8480C           LDR.W    R0,??Display_0+0x10
   \   00000078   0121               MOVS     R1,#+1
   \   0000007A   0170               STRB     R1,[R0, #+0]
    324                    Toogle_Cursor = 1;   
   \   0000007C   DFF8440C           LDR.W    R0,??Display_0+0x14
   \   00000080   0121               MOVS     R1,#+1
   \   00000082   0170               STRB     R1,[R0, #+0]
    325                    LED2_OFF();
   \   00000084   ........           BL       LED2_OFF
    326               }	
    327               GLCD_OUT_Flag = 1;       //화면 출력 선택
   \                     ??Display_5:
   \   00000088   DFF83C0C           LDR.W    R0,??Display_0+0x18
   \   0000008C   0121               MOVS     R1,#+1
   \   0000008E   0170               STRB     R1,[R0, #+0]
    328               GLCD_Buffer_Cnt = 0;
   \   00000090   DFF8380C           LDR.W    R0,??Display_0+0x1C
   \   00000094   0021               MOVS     R1,#+0
   \   00000096   0180               STRH     R1,[R0, #+0]
    329          	/////////////////////////////////////////////////////////////////////         
    330          	
    331          	switch(DisplayInfo.Now_View)
   \   00000098   DFF8340C           LDR.W    R0,??Display_0+0x20
   \   0000009C   4079               LDRB     R0,[R0, #+5]
   \   0000009E   0128               CMP      R0,#+1
   \   000000A0   00F09580           BEQ.W    ??Display_6
   \   000000A4   0228               CMP      R0,#+2
   \   000000A6   00F0B780           BEQ.W    ??Display_7
   \   000000AA   0328               CMP      R0,#+3
   \   000000AC   00F0E380           BEQ.W    ??Display_8
   \   000000B0   0428               CMP      R0,#+4
   \   000000B2   00F00081           BEQ.W    ??Display_9
   \   000000B6   0528               CMP      R0,#+5
   \   000000B8   00F02B81           BEQ.W    ??Display_10
   \   000000BC   0628               CMP      R0,#+6
   \   000000BE   00F04A81           BEQ.W    ??Display_11
   \   000000C2   0728               CMP      R0,#+7
   \   000000C4   00F07181           BEQ.W    ??Display_12
   \   000000C8   0828               CMP      R0,#+8
   \   000000CA   00F09281           BEQ.W    ??Display_13
   \   000000CE   0928               CMP      R0,#+9
   \   000000D0   00F09381           BEQ.W    ??Display_14
   \   000000D4   0A28               CMP      R0,#+10
   \   000000D6   00F09481           BEQ.W    ??Display_15
   \   000000DA   0B28               CMP      R0,#+11
   \   000000DC   00F0B181           BEQ.W    ??Display_16
   \   000000E0   0C28               CMP      R0,#+12
   \   000000E2   00F0EA81           BEQ.W    ??Display_17
   \   000000E6   0D28               CMP      R0,#+13
   \   000000E8   00F00582           BEQ.W    ??Display_18
   \   000000EC   0E28               CMP      R0,#+14
   \   000000EE   00F02082           BEQ.W    ??Display_19
   \   000000F2   0F28               CMP      R0,#+15
   \   000000F4   67D0               BEQ.N    ??Display_20
   \   000000F6   1028               CMP      R0,#+16
   \   000000F8   00F03D82           BEQ.W    ??Display_21
   \   000000FC   1128               CMP      R0,#+17
   \   000000FE   00F05A82           BEQ.W    ??Display_22
   \   00000102   1228               CMP      R0,#+18
   \   00000104   00F07782           BEQ.W    ??Display_23
   \   00000108   1328               CMP      R0,#+19
   \   0000010A   00F09482           BEQ.W    ??Display_24
   \   0000010E   1428               CMP      R0,#+20
   \   00000110   00F0B182           BEQ.W    ??Display_25
   \   00000114   1528               CMP      R0,#+21
   \   00000116   00F00583           BEQ.W    ??Display_26
   \   0000011A   1628               CMP      R0,#+22
   \   0000011C   00F07F83           BEQ.W    ??Display_27
   \   00000120   1728               CMP      R0,#+23
   \   00000122   01F0A081           BEQ.W    ??Display_28
   \   00000126   1928               CMP      R0,#+25
   \   00000128   00F0F483           BEQ.W    ??Display_29
   \   0000012C   1A28               CMP      R0,#+26
   \   0000012E   00F08284           BEQ.W    ??Display_30
   \   00000132   1B28               CMP      R0,#+27
   \   00000134   00F0FB84           BEQ.W    ??Display_31
   \   00000138   1C28               CMP      R0,#+28
   \   0000013A   00F06D85           BEQ.W    ??Display_32
   \   0000013E   1D28               CMP      R0,#+29
   \   00000140   00F00186           BEQ.W    ??Display_33
   \   00000144   1E28               CMP      R0,#+30
   \   00000146   00F02586           BEQ.W    ??Display_34
   \   0000014A   1F28               CMP      R0,#+31
   \   0000014C   00F04386           BEQ.W    ??Display_35
   \   00000150   2028               CMP      R0,#+32
   \   00000152   00F07286           BEQ.W    ??Display_36
   \   00000156   2128               CMP      R0,#+33
   \   00000158   00F0D486           BEQ.W    ??Display_37
   \   0000015C   2228               CMP      R0,#+34
   \   0000015E   00F01687           BEQ.W    ??Display_38
   \   00000162   2328               CMP      R0,#+35
   \   00000164   00F04387           BEQ.W    ??Display_39
   \   00000168   2428               CMP      R0,#+36
   \   0000016A   00F07F87           BEQ.W    ??Display_40
   \   0000016E   2528               CMP      R0,#+37
   \   00000170   00F0AA87           BEQ.W    ??Display_41
   \   00000174   2628               CMP      R0,#+38
   \   00000176   00F0D587           BEQ.W    ??Display_42
   \   0000017A   2728               CMP      R0,#+39
   \   0000017C   01F00080           BEQ.W    ??Display_43
   \   00000180   2828               CMP      R0,#+40
   \   00000182   01F02B80           BEQ.W    ??Display_44
   \   00000186   2928               CMP      R0,#+41
   \   00000188   01F04680           BEQ.W    ??Display_45
   \   0000018C   2A28               CMP      R0,#+42
   \   0000018E   01F06080           BEQ.W    ??Display_46
   \   00000192   2B28               CMP      R0,#+43
   \   00000194   01F07880           BEQ.W    ??Display_47
   \   00000198   2C28               CMP      R0,#+44
   \   0000019A   01F08D80           BEQ.W    ??Display_48
   \   0000019E   2D28               CMP      R0,#+45
   \   000001A0   01F0AE80           BEQ.W    ??Display_49
   \   000001A4   2E28               CMP      R0,#+46
   \   000001A6   01F0C380           BEQ.W    ??Display_50
   \   000001AA   2F28               CMP      R0,#+47
   \   000001AC   01F0F180           BEQ.W    ??Display_51
   \   000001B0   3028               CMP      R0,#+48
   \   000001B2   01F00381           BEQ.W    ??Display_52
   \   000001B6   3128               CMP      R0,#+49
   \   000001B8   01F01B81           BEQ.W    ??Display_53
   \   000001BC   3228               CMP      R0,#+50
   \   000001BE   01F03A81           BEQ.W    ??Display_54
   \   000001C2   01F067B9           B.W      ??Display_55
    332          	{
    333               case DISP_ENGINER:
    334                    {
    335                         EMS_View_Mode();               
   \                     ??Display_20:
   \   000001C6   ........           BL       EMS_View_Mode
    336                    }break;
   \   000001CA   01F063B9           B.W      ??Display_55
    337                    
    338          	case DISP_WAIT:
    339          		{
    340          
    341                         sprintf( (char *)Display_Buff,"%s",LCD_WaitString );
   \                     ??Display_6:
   \   000001CE   DFF8042B           LDR.W    R2,??Display_0+0x24
   \   000001D2   E0A1               ADR.N    R1,??Display_56  ;; 0x25, 0x73, 0x00, 0x00
   \   000001D4   DFF8000B           LDR.W    R0,??Display_0+0x28
   \   000001D8   ........           BL       sprintf
    342          			GLcd_PutString(Wait_x,Wait_y,Display_Buff,1);
   \   000001DC   0123               MOVS     R3,#+1
   \   000001DE   DFF8F82A           LDR.W    R2,??Display_0+0x28
   \   000001E2   DFF8F80A           LDR.W    R0,??Display_0+0x2C
   \   000001E6   0178               LDRB     R1,[R0, #+0]
   \   000001E8   DFF8F40A           LDR.W    R0,??Display_0+0x30
   \   000001EC   0078               LDRB     R0,[R0, #+0]
   \   000001EE   ........           BL       GLcd_PutString
    343                         
    344          			if(!CheckTimeOver(DisplayInfo.HoldingTime,DisplayInfo.TimeOut))		
   \   000001F2   DFF8DC0A           LDR.W    R0,??Display_0+0x20
   \   000001F6   4188               LDRH     R1,[R0, #+2]
   \   000001F8   DFF8D40A           LDR.W    R0,??Display_0+0x20
   \   000001FC   0088               LDRH     R0,[R0, #+0]
   \   000001FE   ........           BL       CheckTimeOver
   \   00000202   0028               CMP      R0,#+0
   \   00000204   01F04681           BEQ.W    ??Display_2
    345          				return;   				
    346          			DisplayInfo.Now_View = DisplayInfo.Next_View ;
   \                     ??Display_57:
   \   00000208   DFF8C40A           LDR.W    R0,??Display_0+0x20
   \   0000020C   DFF8C01A           LDR.W    R1,??Display_0+0x20
   \   00000210   0979               LDRB     R1,[R1, #+4]
   \   00000212   4171               STRB     R1,[R0, #+5]
    347          		}  // end of DISP_WAIT
    348          		break;
   \   00000214   01F03EB9           B.W      ??Display_55
    349          	case DISP_INTRO:
    350          		{	
    351          
    352          			sprintf( (char *)Display_Buff,Title1 );
   \                     ??Display_7:
   \   00000218   ........           ADR.W    R1,`?<Constant "   - TEAHO TECH -   ">`
   \   0000021C   DFF8B80A           LDR.W    R0,??Display_0+0x28
   \   00000220   ........           BL       sprintf
    353          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000224   0123               MOVS     R3,#+1
   \   00000226   DFF8B02A           LDR.W    R2,??Display_0+0x28
   \   0000022A   0021               MOVS     R1,#+0
   \   0000022C   0020               MOVS     R0,#+0
   \   0000022E   ........           BL       GLcd_PutString
    354          			sprintf( (char *)Display_Buff,Title2 );		        
   \   00000232   ........           ADR.W    R1,`?<Constant " EMS_SYSTEM V000021 ">`
   \   00000236   DFF8A00A           LDR.W    R0,??Display_0+0x28
   \   0000023A   ........           BL       sprintf
    355          			GLcd_PutString(0,16,Display_Buff,1);
   \   0000023E   0123               MOVS     R3,#+1
   \   00000240   DFF8942A           LDR.W    R2,??Display_0+0x28
   \   00000244   1021               MOVS     R1,#+16
   \   00000246   0020               MOVS     R0,#+0
   \   00000248   ........           BL       GLcd_PutString
    356                        
    357          			DisplayInfo.Now_View = DISP_WAIT;		
   \   0000024C   DFF8800A           LDR.W    R0,??Display_0+0x20
   \   00000250   0121               MOVS     R1,#+1
   \   00000252   4171               STRB     R1,[R0, #+5]
    358          			DisplayInfo.Next_View = DISP_IDLE;	// 대기화면으로 이동		
   \   00000254   DFF8780A           LDR.W    R0,??Display_0+0x20
   \   00000258   0321               MOVS     R1,#+3
   \   0000025A   0171               STRB     R1,[R0, #+4]
    359          			DisplayInfo.HoldingTime = 100;		// 3초후에		
   \   0000025C   DFF8700A           LDR.W    R0,??Display_0+0x20
   \   00000260   6421               MOVS     R1,#+100
   \   00000262   0180               STRH     R1,[R0, #+0]
    360          			DisplayInfo.TimeOut = MS_TIMER ;
   \   00000264   DFF8040C           LDR.W    R0,??Display_3   ;; 0x40000c00
   \   00000268   ........           BL       TIM_GetCounter
   \   0000026C   DFF8601A           LDR.W    R1,??Display_0+0x20
   \   00000270   4880               STRH     R0,[R1, #+2]
    361          			
    362          			
    363          		}  // end DISP_INTRO
    364          		break;
   \   00000272   01F00FB9           B.W      ??Display_55
    365          	case DISP_IDLE:       // 대기화면 / 시간, 속도, RPM
    366          		{
    367          //			sprintf( (char *)Display_Buff,"%02d/%02d/%02d %02d:%02d:%02d",SYSTEM_TIME.tm_year,SYSTEM_TIME.tm_mon,SYSTEM_TIME.tm_mday, SYSTEM_TIME.tm_hour,SYSTEM_TIME.tm_min,SYSTEM_TIME.tm_sec);
    368          //			GLcd_PutString(0,0,Display_Buff,1);
    369          //			sprintf( (char *)Display_Buff,"%4d RPM %3d km %c%02d",Info.RPM_Value,Info.SPEED_Value,Flag.GPS_Check,Info.MachineStatus);
    370          //			GLcd_PutString(0,16,Display_Buff,1);
    371                         
    372          			sprintf( (char *)Display_Buff,"  DEMO PROGRAM v1 ");
   \                     ??Display_8:
   \   00000276   ........           ADR.W    R1,`?<Constant "  DEMO PROGRAM v1 ">`
   \   0000027A   DFF85C0A           LDR.W    R0,??Display_0+0x28
   \   0000027E   ........           BL       sprintf
    373          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000282   0123               MOVS     R3,#+1
   \   00000284   DFF8502A           LDR.W    R2,??Display_0+0x28
   \   00000288   0021               MOVS     R1,#+0
   \   0000028A   0020               MOVS     R0,#+0
   \   0000028C   ........           BL       GLcd_PutString
    374          			sprintf( (char *)Display_Buff,"  WIFI_RELAY TEST  ");
   \   00000290   ........           ADR.W    R1,`?<Constant "  WIFI_RELAY TEST  ">`
   \   00000294   DFF8400A           LDR.W    R0,??Display_0+0x28
   \   00000298   ........           BL       sprintf
    375          			GLcd_PutString(0,16,Display_Buff,1);
   \   0000029C   0123               MOVS     R3,#+1
   \   0000029E   DFF8382A           LDR.W    R2,??Display_0+0x28
   \   000002A2   1021               MOVS     R1,#+16
   \   000002A4   0020               MOVS     R0,#+0
   \   000002A6   ........           BL       GLcd_PutString
    376                         
    377          			DisplayInfo.Mode = DISPMODE_VIEW;
   \   000002AA   DFF8240A           LDR.W    R0,??Display_0+0x20
   \   000002AE   0121               MOVS     R1,#+1
   \   000002B0   8171               STRB     R1,[R0, #+6]
    378          		}  // end of DIS_IDLE
    379          		break;
   \   000002B2   01F0EFB8           B.W      ??Display_55
    380          	case DISP_TODAY_DISTANCE:   // 일운행 거리, 시간
    381          		{
    382          			sprintf( (char *)Display_Buff,"  < 일일운행시간 >  ");
   \                     ??Display_9:
   \   000002B6   ........           ADR.W    R1,`?<Constant "  < \\300\\317\\300\\317\\277\\356\\307\\3`
   \   000002BA   DFF81C0A           LDR.W    R0,??Display_0+0x28
   \   000002BE   ........           BL       sprintf
    383          			GLcd_PutString(0,0,Display_Buff,1);
   \   000002C2   0123               MOVS     R3,#+1
   \   000002C4   DFF8102A           LDR.W    R2,??Display_0+0x28
   \   000002C8   0021               MOVS     R1,#+0
   \   000002CA   0020               MOVS     R0,#+0
   \   000002CC   ........           BL       GLcd_PutString
    384          			sprintf( (char *)Display_Buff,"      [ %02d:%02d ]      ",(unsigned int)(EMS_Drive_Value.Drive_Time/3600), (unsigned int)(EMS_Drive_Value.Drive_Time/60) % 60 );
   \   000002D0   DFF87C0D           LDR.W    R0,??Display_58
   \   000002D4   4068               LDR      R0,[R0, #+4]
   \   000002D6   3C21               MOVS     R1,#+60
   \   000002D8   B0FBF1F0           UDIV     R0,R0,R1
   \   000002DC   3C21               MOVS     R1,#+60
   \   000002DE   B0FBF1F2           UDIV     R2,R0,R1
   \   000002E2   01FB1203           MLS      R3,R1,R2,R0
   \   000002E6   DFF8680D           LDR.W    R0,??Display_58
   \   000002EA   4068               LDR      R0,[R0, #+4]
   \   000002EC   4FF46161           MOV      R1,#+3600
   \   000002F0   B0FBF1F2           UDIV     R2,R0,R1
   \   000002F4   ........           ADR.W    R1,`?<Constant "      [ %02d:%02d ]  ...">`
   \   000002F8   DFF8DC09           LDR.W    R0,??Display_0+0x28
   \   000002FC   ........           BL       sprintf
    385          			GLcd_PutString(0,16,Display_Buff,1);					
   \   00000300   0123               MOVS     R3,#+1
   \   00000302   DFF8D429           LDR.W    R2,??Display_0+0x28
   \   00000306   1021               MOVS     R1,#+16
   \   00000308   0020               MOVS     R0,#+0
   \   0000030A   ........           BL       GLcd_PutString
    386          		}  // end of DISP_TODAY_DISTANCE
    387          		break;
   \   0000030E   01F0C1B8           B.W      ??Display_55
    388          	case DISP_TOTAL_DISTANCE:   // 총주행 거리, 시간
    389          		{
    390          			
    391          			sprintf( (char *)Display_Buff,"일주행      %05d km", Info.DayDriveLength );
   \                     ??Display_10:
   \   00000312   DFF8400D           LDR.W    R0,??Display_58+0x4
   \   00000316   428B               LDRH     R2,[R0, #+26]
   \   00000318   ........           ADR.W    R1,`?<Constant "\\300\\317\\301\\326\\307\\340      %05d`
   \   0000031C   DFF8B809           LDR.W    R0,??Display_0+0x28
   \   00000320   ........           BL       sprintf
    392          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000324   0123               MOVS     R3,#+1
   \   00000326   DFF8B029           LDR.W    R2,??Display_0+0x28
   \   0000032A   0021               MOVS     R1,#+0
   \   0000032C   0020               MOVS     R0,#+0
   \   0000032E   ........           BL       GLcd_PutString
    393          			sprintf( (char *)Display_Buff,"총주행    %07d km", Info.TotalDriveLength );               
   \   00000332   DFF8200D           LDR.W    R0,??Display_58+0x4
   \   00000336   C269               LDR      R2,[R0, #+28]
   \   00000338   ........           ADR.W    R1,`?<Constant "\\303\\321\\301\\326\\307\\340    %07d k`
   \   0000033C   DFF89809           LDR.W    R0,??Display_0+0x28
   \   00000340   ........           BL       sprintf
    394          			GLcd_PutString(0,16,Display_Buff,1);	
   \   00000344   0123               MOVS     R3,#+1
   \   00000346   DFF89029           LDR.W    R2,??Display_0+0x28
   \   0000034A   1021               MOVS     R1,#+16
   \   0000034C   0020               MOVS     R0,#+0
   \   0000034E   ........           BL       GLcd_PutString
    395          			
    396          		}  // end of DISP_TOTAL_DISTANCE
    397          		break;
   \   00000352   01F09FB8           B.W      ??Display_55
    398          	case DISP_DRIVER_VIEW:    // 운전자 코드
    399          		{
    400          			
    401          			sprintf( (char *)Display_Buff,"  < 운전자코드 >  ");
   \                     ??Display_11:
   \   00000356   ........           ADR.W    R1,`?<Constant "  < \\277\\356\\300\\374\\300\\332\\304\\3`
   \   0000035A   DFF87C09           LDR.W    R0,??Display_0+0x28
   \   0000035E   ........           BL       sprintf
    402          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000362   0123               MOVS     R3,#+1
   \   00000364   DFF87029           LDR.W    R2,??Display_0+0x28
   \   00000368   0021               MOVS     R1,#+0
   \   0000036A   0020               MOVS     R0,#+0
   \   0000036C   ........           BL       GLcd_PutString
    403                         if(Info.Driver_Index == NO_DRIVER)
   \   00000370   DFF8E00C           LDR.W    R0,??Display_58+0x4
   \   00000374   0078               LDRB     R0,[R0, #+0]
   \   00000376   FF28               CMP      R0,#+255
   \   00000378   06D1               BNE.N    ??Display_59
    404                         {
    405                              sprintf( (char *)Display_Buff,"  운전자선택안됨     ");
   \   0000037A   ........           ADR.W    R1,`?<Constant "  \\277\\356\\300\\374\\300\\332\\274\\261`
   \   0000037E   DFF85809           LDR.W    R0,??Display_0+0x28
   \   00000382   ........           BL       sprintf
   \   00000386   07E0               B.N      ??Display_60
    406                         }else
    407                         {
    408                              sprintf( (char *)Display_Buff,"[%018s]",Info.Driver_Num );//SFLASH_Memory.Driver[SFLASH_Memory.Driver_Index]);
   \                     ??Display_59:
   \   00000388   DFF8CC2C           LDR.W    R2,??Display_58+0x8
   \   0000038C   ........           ADR.W    R1,`?<Constant "[%018s]">`
   \   00000390   DFF84409           LDR.W    R0,??Display_0+0x28
   \   00000394   ........           BL       sprintf
    409                         }
    410          			GLcd_PutString(0,16,Display_Buff,1);	
   \                     ??Display_60:
   \   00000398   0123               MOVS     R3,#+1
   \   0000039A   DFF83C29           LDR.W    R2,??Display_0+0x28
   \   0000039E   1021               MOVS     R1,#+16
   \   000003A0   0020               MOVS     R0,#+0
   \   000003A2   ........           BL       GLcd_PutString
    411          			
    412          		}  // end of DISP_DRIVER_VIEW
    413          		break;
   \   000003A6   01F075B8           B.W      ??Display_55
    414          		
    415          	case DISP_MEMS_VIEW:
    416          		{
    417          			sprintf( (char *)Display_Buff,"  < 기울기세팅 >  " );
   \                     ??Display_12:
   \   000003AA   ........           ADR.W    R1,`?<Constant "  < \\261\\342\\277\\357\\261\\342\\274\\2`
   \   000003AE   DFF82809           LDR.W    R0,??Display_0+0x28
   \   000003B2   ........           BL       sprintf
    418          			GLcd_PutString(0,0,Display_Buff,1);
   \   000003B6   0123               MOVS     R3,#+1
   \   000003B8   DFF81C29           LDR.W    R2,??Display_0+0x28
   \   000003BC   0021               MOVS     R1,#+0
   \   000003BE   0020               MOVS     R0,#+0
   \   000003C0   ........           BL       GLcd_PutString
    419          			sprintf( (char *)Display_Buff,"   [ X=%-2d  Y=%-2d ]  ",TiltInfo.DegX,TiltInfo.DegY );	        
   \   000003C4   DFF8940C           LDR.W    R0,??Display_58+0xC
   \   000003C8   B0F91230           LDRSH    R3,[R0, #+18]
   \   000003CC   DFF88C0C           LDR.W    R0,??Display_58+0xC
   \   000003D0   B0F91020           LDRSH    R2,[R0, #+16]
   \   000003D4   ........           ADR.W    R1,`?<Constant "   [ X=%-2d  Y=%-2d ]  ">`
   \   000003D8   DFF8FC08           LDR.W    R0,??Display_0+0x28
   \   000003DC   ........           BL       sprintf
    420          			GLcd_PutString(0,16,Display_Buff,1);          
   \   000003E0   0123               MOVS     R3,#+1
   \   000003E2   DFF8F428           LDR.W    R2,??Display_0+0x28
   \   000003E6   1021               MOVS     R1,#+16
   \   000003E8   0020               MOVS     R0,#+0
   \   000003EA   ........           BL       GLcd_PutString
    421          		}break;
   \   000003EE   01F051B8           B.W      ??Display_55
    422          	case DISP_IO_VIEW:		// IO 뷰어
    423          		{
    424                         InputIO_View();			
   \                     ??Display_13:
   \   000003F2   ........           BL       InputIO_View
    425          		}break;
   \   000003F6   01F04DB8           B.W      ??Display_55
    426          	case DISP_INPUT_VIEW:	// 각종 입력 화면 뷰어
    427          		{
    428          			Input_View();
   \                     ??Display_14:
   \   000003FA   ........           BL       Input_View
    429          		}break;
   \   000003FE   01F049B8           B.W      ??Display_55
    430               case DISP_STARTMOTOR_VIEW:         // 스타트 모터 뷰어
    431                    {
    432          			sprintf( (char *)Display_Buff,"< 시동모터누적횟수 >" );
   \                     ??Display_15:
   \   00000402   ........           ADR.W    R1,`?<Constant "< \\275\\303\\265\\277\\270\\360\\305\\315`
   \   00000406   DFF8D008           LDR.W    R0,??Display_0+0x28
   \   0000040A   ........           BL       sprintf
    433          			GLcd_PutString(0,0,Display_Buff,1);
   \   0000040E   0123               MOVS     R3,#+1
   \   00000410   DFF8C428           LDR.W    R2,??Display_0+0x28
   \   00000414   0021               MOVS     R1,#+0
   \   00000416   0020               MOVS     R0,#+0
   \   00000418   ........           BL       GLcd_PutString
    434          			sprintf( (char *)Display_Buff,"     [ %06d ]   ",Info.Total_StartCount);	        
   \   0000041C   DFF8340C           LDR.W    R0,??Display_58+0x4
   \   00000420   D0F82620           LDR      R2,[R0, #+38]
   \   00000424   ........           ADR.W    R1,`?<Constant "     [ %06d ]   ">`
   \   00000428   DFF8AC08           LDR.W    R0,??Display_0+0x28
   \   0000042C   ........           BL       sprintf
    435          			GLcd_PutString(0,16,Display_Buff,1);                
   \   00000430   0123               MOVS     R3,#+1
   \   00000432   DFF8A428           LDR.W    R2,??Display_0+0x28
   \   00000436   1021               MOVS     R1,#+16
   \   00000438   0020               MOVS     R0,#+0
   \   0000043A   ........           BL       GLcd_PutString
    436                    }break;
   \   0000043E   01F029B8           B.W      ??Display_55
    437                       
    438               case DISP_GPS_VIEW:         // 스타트 모터 뷰어
    439                    {
    440          			sprintf( (char *)Display_Buff,"GPS-X %03d.%06d",Info.GPSX/ 1000000,Info.GPSX% 1000000 );
   \                     ??Display_16:
   \   00000442   DFF8100C           LDR.W    R0,??Display_58+0x4
   \   00000446   806B               LDR      R0,[R0, #+56]
   \   00000448   DFF8141C           LDR.W    R1,??Display_58+0x10  ;; 0xf4240
   \   0000044C   B0FBF1F2           UDIV     R2,R0,R1
   \   00000450   01FB1203           MLS      R3,R1,R2,R0
   \   00000454   DFF8FC0B           LDR.W    R0,??Display_58+0x4
   \   00000458   806B               LDR      R0,[R0, #+56]
   \   0000045A   DFF8041C           LDR.W    R1,??Display_58+0x10  ;; 0xf4240
   \   0000045E   B0FBF1F2           UDIV     R2,R0,R1
   \   00000462   ........           ADR.W    R1,`?<Constant "GPS-X %03d.%06d">`
   \   00000466   DFF87008           LDR.W    R0,??Display_0+0x28
   \   0000046A   ........           BL       sprintf
    441          			GLcd_PutString(0,0,Display_Buff,1);
   \   0000046E   0123               MOVS     R3,#+1
   \   00000470   DFF86428           LDR.W    R2,??Display_0+0x28
   \   00000474   0021               MOVS     R1,#+0
   \   00000476   0020               MOVS     R0,#+0
   \   00000478   ........           BL       GLcd_PutString
    442          			sprintf( (char *)Display_Buff,"GPS-Y %03d.%06d",Info.GPSY/ 1000000,Info.GPSY% 1000000);	        
   \   0000047C   DFF8D40B           LDR.W    R0,??Display_58+0x4
   \   00000480   C06B               LDR      R0,[R0, #+60]
   \   00000482   DFF8DC1B           LDR.W    R1,??Display_58+0x10  ;; 0xf4240
   \   00000486   B0FBF1F2           UDIV     R2,R0,R1
   \   0000048A   01FB1203           MLS      R3,R1,R2,R0
   \   0000048E   DFF8C40B           LDR.W    R0,??Display_58+0x4
   \   00000492   C06B               LDR      R0,[R0, #+60]
   \   00000494   DFF8C81B           LDR.W    R1,??Display_58+0x10  ;; 0xf4240
   \   00000498   B0FBF1F2           UDIV     R2,R0,R1
   \   0000049C   ........           ADR.W    R1,`?<Constant "GPS-Y %03d.%06d">`
   \   000004A0   DFF83408           LDR.W    R0,??Display_0+0x28
   \   000004A4   ........           BL       sprintf
    443          			GLcd_PutString(0,16,Display_Buff,1);                
   \   000004A8   0123               MOVS     R3,#+1
   \   000004AA   DFF82C28           LDR.W    R2,??Display_0+0x28
   \   000004AE   1021               MOVS     R1,#+16
   \   000004B0   0020               MOVS     R0,#+0
   \   000004B2   ........           BL       GLcd_PutString
    444                    }break;               
   \   000004B6   00F0EDBF           B.W      ??Display_55
    445               case DISP_VERSION1:         // 펌웨어 버젼
    446                    {
    447          			sprintf( (char *)Display_Buff,"  < 펌웨어버젼 >  " );
   \                     ??Display_17:
   \   000004BA   ........           ADR.W    R1,`?<Constant "  < \\306\\337\\277\\376\\276\\356\\271\\3`
   \   000004BE   DFF81808           LDR.W    R0,??Display_0+0x28
   \   000004C2   ........           BL       sprintf
    448          			GLcd_PutString(0,0,Display_Buff,1);
   \   000004C6   0123               MOVS     R3,#+1
   \   000004C8   DFF80C28           LDR.W    R2,??Display_0+0x28
   \   000004CC   0021               MOVS     R1,#+0
   \   000004CE   0020               MOVS     R0,#+0
   \   000004D0   ........           BL       GLcd_PutString
    449          			sprintf( (char *)Display_Buff,"   [ %09s ]   ",FirmVersion);	        
   \   000004D4   ........           ADR.W    R2,`?<Constant "111219-01">`
   \   000004D8   ........           ADR.W    R1,`?<Constant "   [ %09s ]   ">`
   \   000004DC   DFF8F807           LDR.W    R0,??Display_0+0x28
   \   000004E0   ........           BL       sprintf
    450          			GLcd_PutString(0,16,Display_Buff,1);                
   \   000004E4   0123               MOVS     R3,#+1
   \   000004E6   DFF8F027           LDR.W    R2,??Display_0+0x28
   \   000004EA   1021               MOVS     R1,#+16
   \   000004EC   0020               MOVS     R0,#+0
   \   000004EE   ........           BL       GLcd_PutString
    451                    }break;
   \   000004F2   00F0CFBF           B.W      ??Display_55
    452               case DISP_VERSION2:         // 형식승인번호
    453                    {
    454          			sprintf( (char *)Display_Buff,"  < 형식승인번호 >  " );
   \                     ??Display_18:
   \   000004F6   ........           ADR.W    R1,`?<Constant "  < \\307\\374\\275\\304\\275\\302\\300\\3`
   \   000004FA   DFF8DC07           LDR.W    R0,??Display_0+0x28
   \   000004FE   ........           BL       sprintf
    455          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000502   0123               MOVS     R3,#+1
   \   00000504   DFF8D027           LDR.W    R2,??Display_0+0x28
   \   00000508   0021               MOVS     R1,#+0
   \   0000050A   0020               MOVS     R0,#+0
   \   0000050C   ........           BL       GLcd_PutString
    456          			sprintf( (char *)Display_Buff,"   [ %010s ]   ",SFLASH_CarInfo.Recognition);	        
   \   00000510   DFF8502B           LDR.W    R2,??Display_58+0x14
   \   00000514   ........           ADR.W    R1,`?<Constant "   [ %010s ]   ">`
   \   00000518   DFF8BC07           LDR.W    R0,??Display_0+0x28
   \   0000051C   ........           BL       sprintf
    457          			GLcd_PutString(0,16,Display_Buff,1);                
   \   00000520   0123               MOVS     R3,#+1
   \   00000522   DFF8B427           LDR.W    R2,??Display_0+0x28
   \   00000526   1021               MOVS     R1,#+16
   \   00000528   0020               MOVS     R0,#+0
   \   0000052A   ........           BL       GLcd_PutString
    458                    }break;
   \   0000052E   00F0B1BF           B.W      ??Display_55
    459               case DISP_VERSION3:         // 제품일련번호
    460                    {
    461          			sprintf( (char *)Display_Buff,"  < 제품일련번호 >  " );
   \                     ??Display_19:
   \   00000532   ........           ADR.W    R1,`?<Constant "  < \\301\\246\\307\\260\\300\\317\\267\\3`
   \   00000536   DFF8A007           LDR.W    R0,??Display_0+0x28
   \   0000053A   ........           BL       sprintf
    462          			GLcd_PutString(0,0,Display_Buff,1);
   \   0000053E   0123               MOVS     R3,#+1
   \   00000540   DFF89427           LDR.W    R2,??Display_0+0x28
   \   00000544   0021               MOVS     R1,#+0
   \   00000546   0020               MOVS     R0,#+0
   \   00000548   ........           BL       GLcd_PutString
    463          			sprintf( (char *)Display_Buff," [ %014s ]   ",SFLASH_CarInfo.SerialNumber);	        
   \   0000054C   DFF8182B           LDR.W    R2,??Display_58+0x18
   \   00000550   02E0               B.N      ??Display_61
   \   00000552   00BF               Nop      
   \                     ??Display_56:
   \   00000554   25730000           DC8      0x25, 0x73, 0x00, 0x00
   \                     ??Display_61:
   \   00000558   ........           ADR.W    R1,`?<Constant " [ %014s ]   ">`
   \   0000055C   DFF87807           LDR.W    R0,??Display_0+0x28
   \   00000560   ........           BL       sprintf
    464          			GLcd_PutString(0,16,Display_Buff,1);                
   \   00000564   0123               MOVS     R3,#+1
   \   00000566   DFF87027           LDR.W    R2,??Display_0+0x28
   \   0000056A   1021               MOVS     R1,#+16
   \   0000056C   0020               MOVS     R0,#+0
   \   0000056E   ........           BL       GLcd_PutString
    465                    }break;          
   \   00000572   00F08FBF           B.W      ??Display_55
    466                    
    467               // ------------------------------------------------------------------------------------------          
    468          	case DISP_MENU1:
    469          		{
    470          			
    471          			sprintf( (char *)Display_Buff,"  < 사용자메뉴 >   ");
   \                     ??Display_21:
   \   00000576   ........           ADR.W    R1,`?<Constant "  < \\273\\347\\277\\353\\300\\332\\270\\3`
   \   0000057A   DFF85C07           LDR.W    R0,??Display_0+0x28
   \   0000057E   ........           BL       sprintf
    472          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000582   0123               MOVS     R3,#+1
   \   00000584   DFF85027           LDR.W    R2,??Display_0+0x28
   \   00000588   0021               MOVS     R1,#+0
   \   0000058A   0020               MOVS     R0,#+0
   \   0000058C   ........           BL       GLcd_PutString
    473          			sprintf( (char *)Display_Buff," 1. 자료저장       ");
   \   00000590   ........           ADR.W    R1,`?<Constant " 1. \\300\\332\\267\\341\\300\\372\\300\\3`
   \   00000594   DFF84007           LDR.W    R0,??Display_0+0x28
   \   00000598   ........           BL       sprintf
    474          			GLcd_PutString(0,16,Display_Buff,1);	
   \   0000059C   0123               MOVS     R3,#+1
   \   0000059E   DFF83827           LDR.W    R2,??Display_0+0x28
   \   000005A2   1021               MOVS     R1,#+16
   \   000005A4   0020               MOVS     R0,#+0
   \   000005A6   ........           BL       GLcd_PutString
    475          			DisplayInfo.Mode = DISPMODE_MENU;		
   \   000005AA   DFF82407           LDR.W    R0,??Display_0+0x20
   \   000005AE   0221               MOVS     R1,#+2
   \   000005B0   8171               STRB     R1,[R0, #+6]
    476          		}  // end of DISP_MENU1
    477          		break;
   \   000005B2   00F06FBF           B.W      ??Display_55
    478          	case DISP_MENU2:
    479          		{
    480          			sprintf( (char *)Display_Buff,"  < 사용자메뉴 >   ");
   \                     ??Display_22:
   \   000005B6   ........           ADR.W    R1,`?<Constant "  < \\273\\347\\277\\353\\300\\332\\270\\3`
   \   000005BA   DFF81C07           LDR.W    R0,??Display_0+0x28
   \   000005BE   ........           BL       sprintf
    481          			GLcd_PutString(0,0,Display_Buff,1);
   \   000005C2   0123               MOVS     R3,#+1
   \   000005C4   DFF81027           LDR.W    R2,??Display_0+0x28
   \   000005C8   0021               MOVS     R1,#+0
   \   000005CA   0020               MOVS     R0,#+0
   \   000005CC   ........           BL       GLcd_PutString
    482          			sprintf( (char *)Display_Buff," 2. 운전자선택     ");
   \   000005D0   DFF8941D           LDR.W    R1,??Display_62
   \   000005D4   DFF80007           LDR.W    R0,??Display_0+0x28
   \   000005D8   ........           BL       sprintf
    483          			GLcd_PutString(0,16,Display_Buff,1);	
   \   000005DC   0123               MOVS     R3,#+1
   \   000005DE   DFF8F826           LDR.W    R2,??Display_0+0x28
   \   000005E2   1021               MOVS     R1,#+16
   \   000005E4   0020               MOVS     R0,#+0
   \   000005E6   ........           BL       GLcd_PutString
    484          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   000005EA   DFF8E406           LDR.W    R0,??Display_0+0x20
   \   000005EE   0221               MOVS     R1,#+2
   \   000005F0   8171               STRB     R1,[R0, #+6]
    485          			
    486          		}  // end of DISP_MENU2
    487          		break;
   \   000005F2   00F04FBF           B.W      ??Display_55
    488          	case DISP_MENU3:
    489          		{
    490          			
    491          			sprintf( (char *)Display_Buff,"  < 사용자메뉴 >   ");
   \                     ??Display_23:
   \   000005F6   DFF8741D           LDR.W    R1,??Display_62+0x4
   \   000005FA   DFF8DC06           LDR.W    R0,??Display_0+0x28
   \   000005FE   ........           BL       sprintf
    492          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000602   0123               MOVS     R3,#+1
   \   00000604   DFF8D026           LDR.W    R2,??Display_0+0x28
   \   00000608   0021               MOVS     R1,#+0
   \   0000060A   0020               MOVS     R0,#+0
   \   0000060C   ........           BL       GLcd_PutString
    493          			sprintf( (char *)Display_Buff," 3. 차량번호       ");
   \   00000610   DFF85C1D           LDR.W    R1,??Display_62+0x8
   \   00000614   DFF8C006           LDR.W    R0,??Display_0+0x28
   \   00000618   ........           BL       sprintf
    494          			GLcd_PutString(0,16,Display_Buff,1);	
   \   0000061C   0123               MOVS     R3,#+1
   \   0000061E   DFF8B826           LDR.W    R2,??Display_0+0x28
   \   00000622   1021               MOVS     R1,#+16
   \   00000624   0020               MOVS     R0,#+0
   \   00000626   ........           BL       GLcd_PutString
    495          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   0000062A   DFF8A406           LDR.W    R0,??Display_0+0x20
   \   0000062E   0221               MOVS     R1,#+2
   \   00000630   8171               STRB     R1,[R0, #+6]
    496          			
    497          		}  // end of DISP_MENU3
    498          		break;
   \   00000632   00F02FBF           B.W      ??Display_55
    499          	case DISP_MENU4:
    500          		{
    501          			
    502          			sprintf( (char *)Display_Buff,"  < 사용자메뉴 >    ");
   \                     ??Display_24:
   \   00000636   DFF83C1D           LDR.W    R1,??Display_62+0xC
   \   0000063A   DFF89C06           LDR.W    R0,??Display_0+0x28
   \   0000063E   ........           BL       sprintf
    503          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000642   0123               MOVS     R3,#+1
   \   00000644   DFF89026           LDR.W    R2,??Display_0+0x28
   \   00000648   0021               MOVS     R1,#+0
   \   0000064A   0020               MOVS     R0,#+0
   \   0000064C   ........           BL       GLcd_PutString
    504          			sprintf( (char *)Display_Buff," 4. 환경설정        ");
   \   00000650   DFF8241D           LDR.W    R1,??Display_62+0x10
   \   00000654   DFF88006           LDR.W    R0,??Display_0+0x28
   \   00000658   ........           BL       sprintf
    505          			GLcd_PutString(0,16,Display_Buff,1);	
   \   0000065C   0123               MOVS     R3,#+1
   \   0000065E   DFF87826           LDR.W    R2,??Display_0+0x28
   \   00000662   1021               MOVS     R1,#+16
   \   00000664   0020               MOVS     R0,#+0
   \   00000666   ........           BL       GLcd_PutString
    506          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   0000066A   DFF86406           LDR.W    R0,??Display_0+0x20
   \   0000066E   0221               MOVS     R1,#+2
   \   00000670   8171               STRB     R1,[R0, #+6]
    507          			
    508          		}  // end of DISP_MENU4
    509          		break; 
   \   00000672   00F00FBF           B.W      ??Display_55
    510          	case DISP_MENU5:
    511          		{
    512          			//               GLcd_Clear();
    513          			sprintf( (char *)Display_Buff,"  < 사용자메뉴 >   ");
   \                     ??Display_25:
   \   00000676   DFF8F41C           LDR.W    R1,??Display_62+0x4
   \   0000067A   DFF85C06           LDR.W    R0,??Display_0+0x28
   \   0000067E   ........           BL       sprintf
    514          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000682   0123               MOVS     R3,#+1
   \   00000684   DFF85026           LDR.W    R2,??Display_0+0x28
   \   00000688   0021               MOVS     R1,#+0
   \   0000068A   0020               MOVS     R0,#+0
   \   0000068C   ........           BL       GLcd_PutString
    515          
    516          			if( Input_Mode == 0 )
   \   00000690   DFF8E80C           LDR.W    R0,??Display_62+0x14
   \   00000694   0078               LDRB     R0,[R0, #+0]
   \   00000696   0028               CMP      R0,#+0
   \   00000698   06D1               BNE.N    ??Display_63
    517          			{
    518               			sprintf( (char *)Display_Buff," 5. 펌웨어업데이트  ");
   \   0000069A   DFF8E41C           LDR.W    R1,??Display_62+0x18
   \   0000069E   DFF83806           LDR.W    R0,??Display_0+0x28
   \   000006A2   ........           BL       sprintf
   \   000006A6   30E0               B.N      ??Display_64
    519          			}
    520          			else if( Input_Mode == 1)
   \                     ??Display_63:
   \   000006A8   DFF8D00C           LDR.W    R0,??Display_62+0x14
   \   000006AC   0078               LDRB     R0,[R0, #+0]
   \   000006AE   0128               CMP      R0,#+1
   \   000006B0   06D1               BNE.N    ??Display_65
    521          			{
    522          				sprintf( (char *)Display_Buff, "[OK]버튼을누르면시작"	);
   \   000006B2   DFF8D01C           LDR.W    R1,??Display_62+0x1C
   \   000006B6   DFF82006           LDR.W    R0,??Display_0+0x28
   \   000006BA   ........           BL       sprintf
   \   000006BE   24E0               B.N      ??Display_64
    523          			}
    524                         else if( Input_Mode == 2 )
   \                     ??Display_65:
   \   000006C0   DFF8B80C           LDR.W    R0,??Display_62+0x14
   \   000006C4   0078               LDRB     R0,[R0, #+0]
   \   000006C6   0228               CMP      R0,#+2
   \   000006C8   1FD1               BNE.N    ??Display_64
    525                         {
    526                              sprintf( (char *)Display_Buff, "업데이트실패"	);
   \   000006CA   DFF8BC1C           LDR.W    R1,??Display_62+0x20
   \   000006CE   DFF80806           LDR.W    R0,??Display_0+0x28
   \   000006D2   ........           BL       sprintf
    527                              DisplayInfo.TimeOut = MS_TIMER;
   \   000006D6   DFF89407           LDR.W    R0,??Display_3   ;; 0x40000c00
   \   000006DA   ........           BL       TIM_GetCounter
   \   000006DE   DFF8F015           LDR.W    R1,??Display_0+0x20
   \   000006E2   4880               STRH     R0,[R1, #+2]
    528                              DisplayInfo.HoldingTime = 2000;
   \   000006E4   DFF8E805           LDR.W    R0,??Display_0+0x20
   \   000006E8   4FF4FA61           MOV      R1,#+2000
   \   000006EC   0180               STRH     R1,[R0, #+0]
    529                              DisplayInfo.Next_View = DisplayInfo.Now_View;
   \   000006EE   DFF8E005           LDR.W    R0,??Display_0+0x20
   \   000006F2   DFF8DC15           LDR.W    R1,??Display_0+0x20
   \   000006F6   4979               LDRB     R1,[R1, #+5]
   \   000006F8   0171               STRB     R1,[R0, #+4]
    530                              DisplayInfo.Now_View = DISP_WAIT;            
   \   000006FA   DFF8D405           LDR.W    R0,??Display_0+0x20
   \   000006FE   0121               MOVS     R1,#+1
   \   00000700   4171               STRB     R1,[R0, #+5]
    531                              Input_Mode = 0;           
   \   00000702   DFF8780C           LDR.W    R0,??Display_62+0x14
   \   00000706   0021               MOVS     R1,#+0
   \   00000708   0170               STRB     R1,[R0, #+0]
    532                         }    
    533          			GLcd_PutString(0,16,Display_Buff,1);	
   \                     ??Display_64:
   \   0000070A   0123               MOVS     R3,#+1
   \   0000070C   DFF8C825           LDR.W    R2,??Display_0+0x28
   \   00000710   1021               MOVS     R1,#+16
   \   00000712   0020               MOVS     R0,#+0
   \   00000714   ........           BL       GLcd_PutString
    534          			DisplayInfo.Mode = DISPMODE_MENU;	               
   \   00000718   DFF8B405           LDR.W    R0,??Display_0+0x20
   \   0000071C   0221               MOVS     R1,#+2
   \   0000071E   8171               STRB     R1,[R0, #+6]
    535          			
    536          		}  // end of DISP_MENU2
    537          		break;
   \   00000720   00F0B8BE           B.W      ??Display_55
    538          	case DISP_MENU6:
    539          		{
    540          			//               GLcd_Clear();
    541          			sprintf( (char *)Display_Buff,"  < 사용자메뉴 >   ");
   \                     ??Display_26:
   \   00000724   DFF8441C           LDR.W    R1,??Display_62+0x4
   \   00000728   DFF8AC05           LDR.W    R0,??Display_0+0x28
   \   0000072C   ........           BL       sprintf
    542          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000730   0123               MOVS     R3,#+1
   \   00000732   DFF8A425           LDR.W    R2,??Display_0+0x28
   \   00000736   0021               MOVS     R1,#+0
   \   00000738   0020               MOVS     R0,#+0
   \   0000073A   ........           BL       GLcd_PutString
    543          
    544          			if( Input_Mode == 0 )
   \   0000073E   DFF83C0C           LDR.W    R0,??Display_62+0x14
   \   00000742   0078               LDRB     R0,[R0, #+0]
   \   00000744   0028               CMP      R0,#+0
   \   00000746   06D1               BNE.N    ??Display_66
    545          			{
    546               			sprintf( (char *)Display_Buff," 6. 사운드업데이트   ");
   \   00000748   DFF84C1D           LDR.W    R1,??Display_67
   \   0000074C   DFF88805           LDR.W    R0,??Display_0+0x28
   \   00000750   ........           BL       sprintf
   \   00000754   56E0               B.N      ??Display_68
    547          			}
    548          			else if( Input_Mode == 1)
   \                     ??Display_66:
   \   00000756   DFF8240C           LDR.W    R0,??Display_62+0x14
   \   0000075A   0078               LDRB     R0,[R0, #+0]
   \   0000075C   0128               CMP      R0,#+1
   \   0000075E   06D1               BNE.N    ??Display_69
    549          			{
    550          				sprintf( (char *)Display_Buff, "[OK]버튼을누르면시작"	);
   \   00000760   DFF8201C           LDR.W    R1,??Display_62+0x1C
   \   00000764   DFF87005           LDR.W    R0,??Display_0+0x28
   \   00000768   ........           BL       sprintf
   \   0000076C   4AE0               B.N      ??Display_68
    551          			}
    552                         else if( Input_Mode == 2 )
   \                     ??Display_69:
   \   0000076E   DFF80C0C           LDR.W    R0,??Display_62+0x14
   \   00000772   0078               LDRB     R0,[R0, #+0]
   \   00000774   0228               CMP      R0,#+2
   \   00000776   20D1               BNE.N    ??Display_70
    553                         {
    554                              sprintf( (char *)Display_Buff,"- 저장완료했습니다.    ");                      
   \   00000778   DFF8201D           LDR.W    R1,??Display_67+0x4
   \   0000077C   DFF85805           LDR.W    R0,??Display_0+0x28
   \   00000780   ........           BL       sprintf
    555                              DisplayInfo.TimeOut = MS_TIMER;
   \   00000784   DFF8E406           LDR.W    R0,??Display_3   ;; 0x40000c00
   \   00000788   ........           BL       TIM_GetCounter
   \   0000078C   DFF84015           LDR.W    R1,??Display_0+0x20
   \   00000790   4880               STRH     R0,[R1, #+2]
    556                              DisplayInfo.HoldingTime = 2000;
   \   00000792   DFF83C05           LDR.W    R0,??Display_0+0x20
   \   00000796   4FF4FA61           MOV      R1,#+2000
   \   0000079A   0180               STRH     R1,[R0, #+0]
    557                              DisplayInfo.Next_View = DisplayInfo.Now_View;
   \   0000079C   DFF83005           LDR.W    R0,??Display_0+0x20
   \   000007A0   DFF82C15           LDR.W    R1,??Display_0+0x20
   \   000007A4   4979               LDRB     R1,[R1, #+5]
   \   000007A6   0171               STRB     R1,[R0, #+4]
    558                              DisplayInfo.Now_View = DISP_WAIT;            
   \   000007A8   DFF82405           LDR.W    R0,??Display_0+0x20
   \   000007AC   0121               MOVS     R1,#+1
   \   000007AE   4171               STRB     R1,[R0, #+5]
    559                              Input_Mode = 0;                    
   \   000007B0   DFF8C80B           LDR.W    R0,??Display_62+0x14
   \   000007B4   0021               MOVS     R1,#+0
   \   000007B6   0170               STRB     R1,[R0, #+0]
   \   000007B8   24E0               B.N      ??Display_68
    560                         }
    561                         else if( Input_Mode == 3 )
   \                     ??Display_70:
   \   000007BA   DFF8C00B           LDR.W    R0,??Display_62+0x14
   \   000007BE   0078               LDRB     R0,[R0, #+0]
   \   000007C0   0328               CMP      R0,#+3
   \   000007C2   1FD1               BNE.N    ??Display_68
    562                         {
    563                              sprintf( (char *)Display_Buff, "업데이트실패"	);
   \   000007C4   DFF8C01B           LDR.W    R1,??Display_62+0x20
   \   000007C8   DFF80C05           LDR.W    R0,??Display_0+0x28
   \   000007CC   ........           BL       sprintf
    564                              DisplayInfo.TimeOut = MS_TIMER;
   \   000007D0   DFF89806           LDR.W    R0,??Display_3   ;; 0x40000c00
   \   000007D4   ........           BL       TIM_GetCounter
   \   000007D8   DFF8F414           LDR.W    R1,??Display_0+0x20
   \   000007DC   4880               STRH     R0,[R1, #+2]
    565                              DisplayInfo.HoldingTime = 2000;
   \   000007DE   DFF8F004           LDR.W    R0,??Display_0+0x20
   \   000007E2   4FF4FA61           MOV      R1,#+2000
   \   000007E6   0180               STRH     R1,[R0, #+0]
    566                              DisplayInfo.Next_View = DisplayInfo.Now_View;
   \   000007E8   DFF8E404           LDR.W    R0,??Display_0+0x20
   \   000007EC   DFF8E014           LDR.W    R1,??Display_0+0x20
   \   000007F0   4979               LDRB     R1,[R1, #+5]
   \   000007F2   0171               STRB     R1,[R0, #+4]
    567                              DisplayInfo.Now_View = DISP_WAIT;            
   \   000007F4   DFF8D804           LDR.W    R0,??Display_0+0x20
   \   000007F8   0121               MOVS     R1,#+1
   \   000007FA   4171               STRB     R1,[R0, #+5]
    568                              Input_Mode = 0;                           
   \   000007FC   DFF87C0B           LDR.W    R0,??Display_62+0x14
   \   00000800   0021               MOVS     R1,#+0
   \   00000802   0170               STRB     R1,[R0, #+0]
    569                         }               
    570          			GLcd_PutString(0,16,Display_Buff,1);	
   \                     ??Display_68:
   \   00000804   0123               MOVS     R3,#+1
   \   00000806   DFF8D024           LDR.W    R2,??Display_0+0x28
   \   0000080A   1021               MOVS     R1,#+16
   \   0000080C   0020               MOVS     R0,#+0
   \   0000080E   ........           BL       GLcd_PutString
    571          			DisplayInfo.Mode = DISPMODE_MENU;	               
   \   00000812   DFF8BC04           LDR.W    R0,??Display_0+0x20
   \   00000816   0221               MOVS     R1,#+2
   \   00000818   8171               STRB     R1,[R0, #+6]
    572          			
    573          		}  // end of DISP_MENU2
    574          		break;
   \   0000081A   00F03BBE           B.W      ??Display_55
    575          	case DISP_MENU7:
    576          		{
    577          			//               GLcd_Clear();
    578          			sprintf( (char *)Display_Buff,"  < 사용자메뉴 >   ");
   \                     ??Display_27:
   \   0000081E   DFF84C1B           LDR.W    R1,??Display_62+0x4
   \   00000822   DFF8B404           LDR.W    R0,??Display_0+0x28
   \   00000826   ........           BL       sprintf
    579          			GLcd_PutString(0,0,Display_Buff,1);
   \   0000082A   0123               MOVS     R3,#+1
   \   0000082C   DFF8A824           LDR.W    R2,??Display_0+0x28
   \   00000830   0021               MOVS     R1,#+0
   \   00000832   0020               MOVS     R0,#+0
   \   00000834   ........           BL       GLcd_PutString
    580          
    581          			if( Input_Mode == 0 )
   \   00000838   DFF8400B           LDR.W    R0,??Display_62+0x14
   \   0000083C   0078               LDRB     R0,[R0, #+0]
   \   0000083E   0028               CMP      R0,#+0
   \   00000840   06D1               BNE.N    ??Display_71
    582          			{
    583               			sprintf( (char *)Display_Buff," 7. 파라미터업데이트");
   \   00000842   DFF85C1C           LDR.W    R1,??Display_67+0x8
   \   00000846   DFF89004           LDR.W    R0,??Display_0+0x28
   \   0000084A   ........           BL       sprintf
   \   0000084E   54E0               B.N      ??Display_72
    584          			}
    585          			else if( Input_Mode == 1)
   \                     ??Display_71:
   \   00000850   DFF8280B           LDR.W    R0,??Display_62+0x14
   \   00000854   0078               LDRB     R0,[R0, #+0]
   \   00000856   0128               CMP      R0,#+1
   \   00000858   06D1               BNE.N    ??Display_73
    586          			{
    587          				sprintf( (char *)Display_Buff, "[OK]누르면시작   "	);
   \   0000085A   ........           LDR.W    R1,??DataTable157
   \   0000085E   DFF87804           LDR.W    R0,??Display_0+0x28
   \   00000862   ........           BL       sprintf
   \   00000866   48E0               B.N      ??Display_72
    588          			}
    589                         else if( Input_Mode == 2 )
   \                     ??Display_73:
   \   00000868   DFF8100B           LDR.W    R0,??Display_62+0x14
   \   0000086C   0078               LDRB     R0,[R0, #+0]
   \   0000086E   0228               CMP      R0,#+2
   \   00000870   06D1               BNE.N    ??Display_74
    590                         {
    591                              sprintf( (char *)Display_Buff, "업데이트중입니다"	);
   \   00000872   ........           LDR.W    R1,??DataTable157_1
   \   00000876   DFF86004           LDR.W    R0,??Display_0+0x28
   \   0000087A   ........           BL       sprintf
   \   0000087E   3CE0               B.N      ??Display_72
    592                         }
    593                         else if( Input_Mode == 3 )
   \                     ??Display_74:
   \   00000880   DFF8F80A           LDR.W    R0,??Display_62+0x14
   \   00000884   0078               LDRB     R0,[R0, #+0]
   \   00000886   0328               CMP      R0,#+3
   \   00000888   20D1               BNE.N    ??Display_75
    594                         {
    595                              sprintf( (char *)Display_Buff,"- 저장완료했습니다.    ");                      
   \   0000088A   DFF8101C           LDR.W    R1,??Display_67+0x4
   \   0000088E   DFF84804           LDR.W    R0,??Display_0+0x28
   \   00000892   ........           BL       sprintf
    596                              DisplayInfo.TimeOut = MS_TIMER;
   \   00000896   DFF8D405           LDR.W    R0,??Display_3   ;; 0x40000c00
   \   0000089A   ........           BL       TIM_GetCounter
   \   0000089E   DFF83014           LDR.W    R1,??Display_0+0x20
   \   000008A2   4880               STRH     R0,[R1, #+2]
    597                              DisplayInfo.HoldingTime = 2000;
   \   000008A4   DFF82804           LDR.W    R0,??Display_0+0x20
   \   000008A8   4FF4FA61           MOV      R1,#+2000
   \   000008AC   0180               STRH     R1,[R0, #+0]
    598                              DisplayInfo.Next_View = DisplayInfo.Now_View;
   \   000008AE   DFF82004           LDR.W    R0,??Display_0+0x20
   \   000008B2   DFF81C14           LDR.W    R1,??Display_0+0x20
   \   000008B6   4979               LDRB     R1,[R1, #+5]
   \   000008B8   0171               STRB     R1,[R0, #+4]
    599                              DisplayInfo.Now_View = DISP_WAIT;            
   \   000008BA   DFF81404           LDR.W    R0,??Display_0+0x20
   \   000008BE   0121               MOVS     R1,#+1
   \   000008C0   4171               STRB     R1,[R0, #+5]
    600                              Input_Mode = 0;                    
   \   000008C2   DFF8B80A           LDR.W    R0,??Display_62+0x14
   \   000008C6   0021               MOVS     R1,#+0
   \   000008C8   0170               STRB     R1,[R0, #+0]
   \   000008CA   16E0               B.N      ??Display_72
    601                         }
    602                         else if( Input_Mode == 4 )
   \                     ??Display_75:
   \   000008CC   DFF8AC0A           LDR.W    R0,??Display_62+0x14
   \   000008D0   0078               LDRB     R0,[R0, #+0]
   \   000008D2   0428               CMP      R0,#+4
   \   000008D4   06D1               BNE.N    ??Display_76
    603                         {
    604                              sprintf( (char *)Display_Buff, "업데이트실패"	);                    
   \   000008D6   DFF8B01A           LDR.W    R1,??Display_62+0x20
   \   000008DA   DFF8FC03           LDR.W    R0,??Display_0+0x28
   \   000008DE   ........           BL       sprintf
   \   000008E2   0AE0               B.N      ??Display_72
    605                         }
    606                         else if( Input_Mode == 5 )                    
   \                     ??Display_76:
   \   000008E4   DFF8940A           LDR.W    R0,??Display_62+0x14
   \   000008E8   0078               LDRB     R0,[R0, #+0]
   \   000008EA   0528               CMP      R0,#+5
   \   000008EC   05D1               BNE.N    ??Display_72
    607                         {
    608                              sprintf( (char *)Display_Buff, "WIFI업데이트중입니다."	);     
   \   000008EE   ........           LDR.W    R1,??DataTable157_2
   \   000008F2   DFF8E403           LDR.W    R0,??Display_0+0x28
   \   000008F6   ........           BL       sprintf
    609                         }                     
    610          			GLcd_PutString(0,16,Display_Buff,1);	
   \                     ??Display_72:
   \   000008FA   0123               MOVS     R3,#+1
   \   000008FC   DFF8D823           LDR.W    R2,??Display_0+0x28
   \   00000900   1021               MOVS     R1,#+16
   \   00000902   0020               MOVS     R0,#+0
   \   00000904   ........           BL       GLcd_PutString
    611          			DisplayInfo.Mode = DISPMODE_MENU;	               
   \   00000908   DFF8C403           LDR.W    R0,??Display_0+0x20
   \   0000090C   0221               MOVS     R1,#+2
   \   0000090E   8171               STRB     R1,[R0, #+6]
    612          			
    613          		}  // end of DISP_MENU2
    614          		break;          
   \   00000910   00F0C0BD           B.W      ??Display_55
    615          	case DISP_MENU1_1:
    616          		{
    617          			
    618          			sprintf( (char *)Display_Buff,"  < 저장  메뉴 >  ");
   \                     ??Display_29:
   \   00000914   ........           LDR.W    R1,??DataTable157_3
   \   00000918   DFF8BC03           LDR.W    R0,??Display_0+0x28
   \   0000091C   ........           BL       sprintf
    619          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000920   0123               MOVS     R3,#+1
   \   00000922   DFF8B423           LDR.W    R2,??Display_0+0x28
   \   00000926   0021               MOVS     R1,#+0
   \   00000928   0020               MOVS     R0,#+0
   \   0000092A   ........           BL       GLcd_PutString
    620                         
    621          			if( Input_Mode == 0 )
   \   0000092E   DFF84C0A           LDR.W    R0,??Display_62+0x14
   \   00000932   0078               LDRB     R0,[R0, #+0]
   \   00000934   0028               CMP      R0,#+0
   \   00000936   06D1               BNE.N    ??Display_77
    622          			{
    623               			sprintf( (char *)Display_Buff,"- 선택백업          ");                    				
   \   00000938   ........           LDR.W    R1,??DataTable157_4
   \   0000093C   DFF89803           LDR.W    R0,??Display_0+0x28
   \   00000940   ........           BL       sprintf
   \   00000944   6CE0               B.N      ??Display_78
    624          			}
    625          			else if(Input_Mode == 1)
   \                     ??Display_77:
   \   00000946   DFF8340A           LDR.W    R0,??Display_62+0x14
   \   0000094A   0078               LDRB     R0,[R0, #+0]
   \   0000094C   0128               CMP      R0,#+1
   \   0000094E   14D1               BNE.N    ??Display_79
    626          			{
    627                              
    628          				sprintf( (char *)Display_Buff," [%03d]-%02d%02d%02d ",VIEW_Header.Start_Index,
    629                                      VIEW_Header.Header.Date[0],
    630                                      VIEW_Header.Header.Date[1],
    631                                      VIEW_Header.Header.Date[2]
    632                                     );
   \   00000950   ........           LDR.W    R0,??DataTable157_5
   \   00000954   807A               LDRB     R0,[R0, #+10]
   \   00000956   0190               STR      R0,[SP, #+4]
   \   00000958   ........           LDR.W    R0,??DataTable157_5
   \   0000095C   407A               LDRB     R0,[R0, #+9]
   \   0000095E   0090               STR      R0,[SP, #+0]
   \   00000960   ........           LDR.W    R0,??DataTable157_5
   \   00000964   037A               LDRB     R3,[R0, #+8]
   \   00000966   ........           LDR.W    R0,??DataTable157_5
   \   0000096A   0268               LDR      R2,[R0, #+0]
   \   0000096C   ........           LDR.W    R1,??DataTable157_6
   \   00000970   DFF86403           LDR.W    R0,??Display_0+0x28
   \   00000974   ........           BL       sprintf
   \   00000978   52E0               B.N      ??Display_78
    633          			}else if(Input_Mode == 2)
   \                     ??Display_79:
   \   0000097A   DFF8000A           LDR.W    R0,??Display_62+0x14
   \   0000097E   0078               LDRB     R0,[R0, #+0]
   \   00000980   0228               CMP      R0,#+2
   \   00000982   0DD1               BNE.N    ??Display_80
    634                         {
    635                              sprintf( (char *)Display_Buff,"- DataSave        "); 
   \   00000984   ........           LDR.W    R1,??DataTable157_7
   \   00000988   DFF84C03           LDR.W    R0,??Display_0+0x28
   \   0000098C   ........           BL       sprintf
    636                              GLcd_PutString2(0,16,Display_Buff,1);	
   \   00000990   0123               MOVS     R3,#+1
   \   00000992   DFF84423           LDR.W    R2,??Display_0+0x28
   \   00000996   1021               MOVS     R1,#+16
   \   00000998   0020               MOVS     R0,#+0
   \   0000099A   ........           BL       GLcd_PutString2
   \   0000099E   3FE0               B.N      ??Display_78
    637                         }else if(Input_Mode == 3)
   \                     ??Display_80:
   \   000009A0   DFF8D809           LDR.W    R0,??Display_62+0x14
   \   000009A4   0078               LDRB     R0,[R0, #+0]
   \   000009A6   0328               CMP      R0,#+3
   \   000009A8   1AD1               BNE.N    ??Display_81
    638                         {
    639                              sprintf( (char *)Display_Buff,"- 저장완료했습니다.    ");                      
   \   000009AA   DFF8F01A           LDR.W    R1,??Display_67+0x4
   \   000009AE   CA48               LDR.N    R0,??Display_0+0x28
   \   000009B0   ........           BL       sprintf
    640                              DisplayInfo.TimeOut = MS_TIMER;
   \   000009B4   DFF8B404           LDR.W    R0,??Display_3   ;; 0x40000c00
   \   000009B8   ........           BL       TIM_GetCounter
   \   000009BC   C449               LDR.N    R1,??Display_0+0x20
   \   000009BE   4880               STRH     R0,[R1, #+2]
    641                              DisplayInfo.HoldingTime = 2000;
   \   000009C0   C348               LDR.N    R0,??Display_0+0x20
   \   000009C2   4FF4FA61           MOV      R1,#+2000
   \   000009C6   0180               STRH     R1,[R0, #+0]
    642                              DisplayInfo.Next_View = DisplayInfo.Now_View;
   \   000009C8   C148               LDR.N    R0,??Display_0+0x20
   \   000009CA   C149               LDR.N    R1,??Display_0+0x20
   \   000009CC   4979               LDRB     R1,[R1, #+5]
   \   000009CE   0171               STRB     R1,[R0, #+4]
    643                              DisplayInfo.Now_View = DISP_WAIT;            
   \   000009D0   BF48               LDR.N    R0,??Display_0+0x20
   \   000009D2   0121               MOVS     R1,#+1
   \   000009D4   4171               STRB     R1,[R0, #+5]
    644                              Input_Mode = 0;
   \   000009D6   DFF8A409           LDR.W    R0,??Display_62+0x14
   \   000009DA   0021               MOVS     R1,#+0
   \   000009DC   0170               STRB     R1,[R0, #+0]
   \   000009DE   1FE0               B.N      ??Display_78
    645                         }else if(Input_Mode == 4)
   \                     ??Display_81:
   \   000009E0   DFF89809           LDR.W    R0,??Display_62+0x14
   \   000009E4   0078               LDRB     R0,[R0, #+0]
   \   000009E6   0428               CMP      R0,#+4
   \   000009E8   1AD1               BNE.N    ??Display_78
    646                         {
    647                              sprintf( (char *)Display_Buff,( char * )DISP_WORD[0]);           // USB 없음                        
   \   000009EA   ........           LDR.W    R0,??DataTable157_8
   \   000009EE   0168               LDR      R1,[R0, #+0]
   \   000009F0   B948               LDR.N    R0,??Display_0+0x28
   \   000009F2   ........           BL       sprintf
    648                              DisplayInfo.TimeOut = MS_TIMER;
   \   000009F6   DFF87404           LDR.W    R0,??Display_3   ;; 0x40000c00
   \   000009FA   ........           BL       TIM_GetCounter
   \   000009FE   B449               LDR.N    R1,??Display_0+0x20
   \   00000A00   4880               STRH     R0,[R1, #+2]
    649                              DisplayInfo.HoldingTime = 2000;
   \   00000A02   B348               LDR.N    R0,??Display_0+0x20
   \   00000A04   4FF4FA61           MOV      R1,#+2000
   \   00000A08   0180               STRH     R1,[R0, #+0]
    650                              DisplayInfo.Next_View = DisplayInfo.Now_View;
   \   00000A0A   B148               LDR.N    R0,??Display_0+0x20
   \   00000A0C   B049               LDR.N    R1,??Display_0+0x20
   \   00000A0E   4979               LDRB     R1,[R1, #+5]
   \   00000A10   0171               STRB     R1,[R0, #+4]
    651                              DisplayInfo.Now_View = DISP_WAIT;            
   \   00000A12   AF48               LDR.N    R0,??Display_0+0x20
   \   00000A14   0121               MOVS     R1,#+1
   \   00000A16   4171               STRB     R1,[R0, #+5]
    652                              Input_Mode = 0;
   \   00000A18   DFF86009           LDR.W    R0,??Display_62+0x14
   \   00000A1C   0021               MOVS     R1,#+0
   \   00000A1E   0170               STRB     R1,[R0, #+0]
    653                         }
    654                         GLcd_PutString(0,16,Display_Buff,1);	
   \                     ??Display_78:
   \   00000A20   0123               MOVS     R3,#+1
   \   00000A22   AD4A               LDR.N    R2,??Display_0+0x28
   \   00000A24   1021               MOVS     R1,#+16
   \   00000A26   0020               MOVS     R0,#+0
   \   00000A28   ........           BL       GLcd_PutString
    655          			DisplayInfo.Mode = DISPMODE_MENU;		
   \   00000A2C   A848               LDR.N    R0,??Display_0+0x20
   \   00000A2E   0221               MOVS     R1,#+2
   \   00000A30   8171               STRB     R1,[R0, #+6]
    656          		}  // end of DISP_MENU1_1
    657          		break;          
   \   00000A32   00F02FBD           B.W      ??Display_55
    658          	case DISP_MENU1_2:
    659          		{
    660          			
    661          			sprintf( (char *)Display_Buff,"  < 저장  메뉴 >");
   \                     ??Display_30:
   \   00000A36   ........           LDR.W    R1,??DataTable157_9
   \   00000A3A   A748               LDR.N    R0,??Display_0+0x28
   \   00000A3C   ........           BL       sprintf
    662          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000A40   0123               MOVS     R3,#+1
   \   00000A42   A54A               LDR.N    R2,??Display_0+0x28
   \   00000A44   0021               MOVS     R1,#+0
   \   00000A46   0020               MOVS     R0,#+0
   \   00000A48   ........           BL       GLcd_PutString
    663                         if(Input_Mode == 0)
   \   00000A4C   DFF82C09           LDR.W    R0,??Display_62+0x14
   \   00000A50   0078               LDRB     R0,[R0, #+0]
   \   00000A52   0028               CMP      R0,#+0
   \   00000A54   05D1               BNE.N    ??Display_82
    664                         {
    665                              sprintf( (char *)Display_Buff,"- 기간백업             ");
   \   00000A56   ........           LDR.W    R1,??DataTable157_10
   \   00000A5A   9F48               LDR.N    R0,??Display_0+0x28
   \   00000A5C   ........           BL       sprintf
   \   00000A60   5AE0               B.N      ??Display_83
    666                         }
    667          			else if(Input_Mode == 1)
   \                     ??Display_82:
   \   00000A62   DFF81809           LDR.W    R0,??Display_62+0x14
   \   00000A66   0078               LDRB     R0,[R0, #+0]
   \   00000A68   0128               CMP      R0,#+1
   \   00000A6A   0AD1               BNE.N    ??Display_84
    668          			{
    669                              sprintf( (char *)Display_Buff, (char *)BAKUP_WORD[Input_Index_1]);
   \   00000A6C   ........           LDR.W    R0,??DataTable157_11
   \   00000A70   0078               LDRB     R0,[R0, #+0]
   \   00000A72   ........           LDR.W    R1,??DataTable157_12
   \   00000A76   51F82010           LDR      R1,[R1, R0, LSL #+2]
   \   00000A7A   9748               LDR.N    R0,??Display_0+0x28
   \   00000A7C   ........           BL       sprintf
   \   00000A80   4AE0               B.N      ??Display_83
    670                         }
    671                         else if(Input_Mode == 2)
   \                     ??Display_84:
   \   00000A82   DFF8F808           LDR.W    R0,??Display_62+0x14
   \   00000A86   0078               LDRB     R0,[R0, #+0]
   \   00000A88   0228               CMP      R0,#+2
   \   00000A8A   05D1               BNE.N    ??Display_85
    672                         {
    673                              sprintf( (char *)Display_Buff,"- 저장중입니다.        ");  
   \   00000A8C   ........           LDR.W    R1,??DataTable157_13
   \   00000A90   9148               LDR.N    R0,??Display_0+0x28
   \   00000A92   ........           BL       sprintf
   \   00000A96   3FE0               B.N      ??Display_83
    674                         }else if(Input_Mode == 3)
   \                     ??Display_85:
   \   00000A98   DFF8E008           LDR.W    R0,??Display_62+0x14
   \   00000A9C   0078               LDRB     R0,[R0, #+0]
   \   00000A9E   0328               CMP      R0,#+3
   \   00000AA0   1AD1               BNE.N    ??Display_86
    675                         {
    676                              sprintf( (char *)Display_Buff,"- 저장완료했습니다.    ");                      
   \   00000AA2   DFF8F819           LDR.W    R1,??Display_67+0x4
   \   00000AA6   8C48               LDR.N    R0,??Display_0+0x28
   \   00000AA8   ........           BL       sprintf
    677                              DisplayInfo.TimeOut = MS_TIMER;
   \   00000AAC   DFF8BC03           LDR.W    R0,??Display_3   ;; 0x40000c00
   \   00000AB0   ........           BL       TIM_GetCounter
   \   00000AB4   8649               LDR.N    R1,??Display_0+0x20
   \   00000AB6   4880               STRH     R0,[R1, #+2]
    678                              DisplayInfo.HoldingTime = 2000;
   \   00000AB8   8548               LDR.N    R0,??Display_0+0x20
   \   00000ABA   4FF4FA61           MOV      R1,#+2000
   \   00000ABE   0180               STRH     R1,[R0, #+0]
    679                              DisplayInfo.Next_View = DisplayInfo.Now_View;
   \   00000AC0   8348               LDR.N    R0,??Display_0+0x20
   \   00000AC2   8349               LDR.N    R1,??Display_0+0x20
   \   00000AC4   4979               LDRB     R1,[R1, #+5]
   \   00000AC6   0171               STRB     R1,[R0, #+4]
    680                              DisplayInfo.Now_View = DISP_WAIT;            
   \   00000AC8   8148               LDR.N    R0,??Display_0+0x20
   \   00000ACA   0121               MOVS     R1,#+1
   \   00000ACC   4171               STRB     R1,[R0, #+5]
    681                              Input_Mode = 0;
   \   00000ACE   DFF8AC08           LDR.W    R0,??Display_62+0x14
   \   00000AD2   0021               MOVS     R1,#+0
   \   00000AD4   0170               STRB     R1,[R0, #+0]
   \   00000AD6   1FE0               B.N      ??Display_83
    682                         }else if(Input_Mode == 4)
   \                     ??Display_86:
   \   00000AD8   DFF8A008           LDR.W    R0,??Display_62+0x14
   \   00000ADC   0078               LDRB     R0,[R0, #+0]
   \   00000ADE   0428               CMP      R0,#+4
   \   00000AE0   1AD1               BNE.N    ??Display_83
    683                         {
    684                              sprintf( (char *)Display_Buff,( char * )DISP_WORD[0]);           // USB 없음                       
   \   00000AE2   ........           LDR.W    R0,??DataTable157_8
   \   00000AE6   0168               LDR      R1,[R0, #+0]
   \   00000AE8   7B48               LDR.N    R0,??Display_0+0x28
   \   00000AEA   ........           BL       sprintf
    685                              DisplayInfo.TimeOut = MS_TIMER;
   \   00000AEE   DFF87C03           LDR.W    R0,??Display_3   ;; 0x40000c00
   \   00000AF2   ........           BL       TIM_GetCounter
   \   00000AF6   7649               LDR.N    R1,??Display_0+0x20
   \   00000AF8   4880               STRH     R0,[R1, #+2]
    686                              DisplayInfo.HoldingTime = 2000;
   \   00000AFA   7548               LDR.N    R0,??Display_0+0x20
   \   00000AFC   4FF4FA61           MOV      R1,#+2000
   \   00000B00   0180               STRH     R1,[R0, #+0]
    687                              DisplayInfo.Next_View = DisplayInfo.Now_View;
   \   00000B02   7348               LDR.N    R0,??Display_0+0x20
   \   00000B04   7249               LDR.N    R1,??Display_0+0x20
   \   00000B06   4979               LDRB     R1,[R1, #+5]
   \   00000B08   0171               STRB     R1,[R0, #+4]
    688                              DisplayInfo.Now_View = DISP_WAIT;            
   \   00000B0A   7148               LDR.N    R0,??Display_0+0x20
   \   00000B0C   0121               MOVS     R1,#+1
   \   00000B0E   4171               STRB     R1,[R0, #+5]
    689                              Input_Mode = 0;
   \   00000B10   DFF86808           LDR.W    R0,??Display_62+0x14
   \   00000B14   0021               MOVS     R1,#+0
   \   00000B16   0170               STRB     R1,[R0, #+0]
    690                         }
    691                         
    692          			GLcd_PutString(0,16,Display_Buff,1);	
   \                     ??Display_83:
   \   00000B18   0123               MOVS     R3,#+1
   \   00000B1A   6F4A               LDR.N    R2,??Display_0+0x28
   \   00000B1C   1021               MOVS     R1,#+16
   \   00000B1E   0020               MOVS     R0,#+0
   \   00000B20   ........           BL       GLcd_PutString
    693          			DisplayInfo.Mode = DISPMODE_MENU;		
   \   00000B24   6A48               LDR.N    R0,??Display_0+0x20
   \   00000B26   0221               MOVS     R1,#+2
   \   00000B28   8171               STRB     R1,[R0, #+6]
    694          		}  // end of DISP_MENU1_2
    695          		break;       
   \   00000B2A   00F0B3BC           B.W      ??Display_55
    696          	case DISP_MENU1_3:
    697          		{
    698          			
    699          			sprintf( (char *)Display_Buff,"  < 저장  메뉴 >");
   \                     ??Display_31:
   \   00000B2E   ........           LDR.W    R1,??DataTable157_9
   \   00000B32   6948               LDR.N    R0,??Display_0+0x28
   \   00000B34   ........           BL       sprintf
    700          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000B38   0123               MOVS     R3,#+1
   \   00000B3A   674A               LDR.N    R2,??Display_0+0x28
   \   00000B3C   0021               MOVS     R1,#+0
   \   00000B3E   0020               MOVS     R0,#+0
   \   00000B40   ........           BL       GLcd_PutString
    701                         if(Input_Mode == 0)
   \   00000B44   DFF83408           LDR.W    R0,??Display_62+0x14
   \   00000B48   0078               LDRB     R0,[R0, #+0]
   \   00000B4A   0028               CMP      R0,#+0
   \   00000B4C   05D1               BNE.N    ??Display_87
    702                         {
    703                              sprintf( (char *)Display_Buff,"- 전체백업          ");
   \   00000B4E   ........           LDR.W    R1,??DataTable157_14
   \   00000B52   6148               LDR.N    R0,??Display_0+0x28
   \   00000B54   ........           BL       sprintf
   \   00000B58   53E0               B.N      ??Display_88
    704                         }else if(Input_Mode == 1)
   \                     ??Display_87:
   \   00000B5A   DFF82008           LDR.W    R0,??Display_62+0x14
   \   00000B5E   0078               LDRB     R0,[R0, #+0]
   \   00000B60   0128               CMP      R0,#+1
   \   00000B62   05D1               BNE.N    ??Display_89
    705          			{
    706                              sprintf( (char *)Display_Buff,"- 전체백업을할까요? ");
   \   00000B64   ........           LDR.W    R1,??DataTable157_15
   \   00000B68   5B48               LDR.N    R0,??Display_0+0x28
   \   00000B6A   ........           BL       sprintf
   \   00000B6E   48E0               B.N      ??Display_88
    707                         }else if(Input_Mode == 2)
   \                     ??Display_89:
   \   00000B70   DFF80808           LDR.W    R0,??Display_62+0x14
   \   00000B74   0078               LDRB     R0,[R0, #+0]
   \   00000B76   0228               CMP      R0,#+2
   \   00000B78   05D1               BNE.N    ??Display_90
    708          			{
    709                              sprintf( (char *)Display_Buff,"- 저장중입니다.    ");
   \   00000B7A   ........           LDR.W    R1,??DataTable157_16
   \   00000B7E   5648               LDR.N    R0,??Display_0+0x28
   \   00000B80   ........           BL       sprintf
   \   00000B84   3DE0               B.N      ??Display_88
    710                              
    711                         }else if(Input_Mode == 3)
   \                     ??Display_90:
   \   00000B86   DFF8F407           LDR.W    R0,??Display_62+0x14
   \   00000B8A   0078               LDRB     R0,[R0, #+0]
   \   00000B8C   0328               CMP      R0,#+3
   \   00000B8E   19D1               BNE.N    ??Display_91
    712                         {
    713                              sprintf( (char *)Display_Buff,"- 저장완료했습니다.    ");                      
   \   00000B90   DFF80819           LDR.W    R1,??Display_67+0x4
   \   00000B94   5048               LDR.N    R0,??Display_0+0x28
   \   00000B96   ........           BL       sprintf
    714                              DisplayInfo.TimeOut = MS_TIMER;
   \   00000B9A   B448               LDR.N    R0,??Display_3   ;; 0x40000c00
   \   00000B9C   ........           BL       TIM_GetCounter
   \   00000BA0   4B49               LDR.N    R1,??Display_0+0x20
   \   00000BA2   4880               STRH     R0,[R1, #+2]
    715                              DisplayInfo.HoldingTime = 2000;
   \   00000BA4   4A48               LDR.N    R0,??Display_0+0x20
   \   00000BA6   4FF4FA61           MOV      R1,#+2000
   \   00000BAA   0180               STRH     R1,[R0, #+0]
    716                              DisplayInfo.Next_View = DisplayInfo.Now_View;
   \   00000BAC   4848               LDR.N    R0,??Display_0+0x20
   \   00000BAE   4849               LDR.N    R1,??Display_0+0x20
   \   00000BB0   4979               LDRB     R1,[R1, #+5]
   \   00000BB2   0171               STRB     R1,[R0, #+4]
    717                              DisplayInfo.Now_View = DISP_WAIT;            
   \   00000BB4   4648               LDR.N    R0,??Display_0+0x20
   \   00000BB6   0121               MOVS     R1,#+1
   \   00000BB8   4171               STRB     R1,[R0, #+5]
    718                              Input_Mode = 0;
   \   00000BBA   DFF8C007           LDR.W    R0,??Display_62+0x14
   \   00000BBE   0021               MOVS     R1,#+0
   \   00000BC0   0170               STRB     R1,[R0, #+0]
   \   00000BC2   1EE0               B.N      ??Display_88
    719                         }else if(Input_Mode == 4)
   \                     ??Display_91:
   \   00000BC4   DFF8B407           LDR.W    R0,??Display_62+0x14
   \   00000BC8   0078               LDRB     R0,[R0, #+0]
   \   00000BCA   0428               CMP      R0,#+4
   \   00000BCC   19D1               BNE.N    ??Display_88
    720                         {
    721                              sprintf( (char *)Display_Buff,( char * )DISP_WORD[0]);           // USB 없음                    
   \   00000BCE   ........           LDR.W    R0,??DataTable157_8
   \   00000BD2   0168               LDR      R1,[R0, #+0]
   \   00000BD4   4048               LDR.N    R0,??Display_0+0x28
   \   00000BD6   ........           BL       sprintf
    722                              DisplayInfo.TimeOut = MS_TIMER;
   \   00000BDA   A448               LDR.N    R0,??Display_3   ;; 0x40000c00
   \   00000BDC   ........           BL       TIM_GetCounter
   \   00000BE0   3B49               LDR.N    R1,??Display_0+0x20
   \   00000BE2   4880               STRH     R0,[R1, #+2]
    723                              DisplayInfo.HoldingTime = 2000;
   \   00000BE4   3A48               LDR.N    R0,??Display_0+0x20
   \   00000BE6   4FF4FA61           MOV      R1,#+2000
   \   00000BEA   0180               STRH     R1,[R0, #+0]
    724                              DisplayInfo.Next_View = DisplayInfo.Now_View;
   \   00000BEC   3848               LDR.N    R0,??Display_0+0x20
   \   00000BEE   3849               LDR.N    R1,??Display_0+0x20
   \   00000BF0   4979               LDRB     R1,[R1, #+5]
   \   00000BF2   0171               STRB     R1,[R0, #+4]
    725                              DisplayInfo.Now_View = DISP_WAIT;            
   \   00000BF4   3648               LDR.N    R0,??Display_0+0x20
   \   00000BF6   0121               MOVS     R1,#+1
   \   00000BF8   4171               STRB     R1,[R0, #+5]
    726                              Input_Mode = 0;
   \   00000BFA   DFF88007           LDR.W    R0,??Display_62+0x14
   \   00000BFE   0021               MOVS     R1,#+0
   \   00000C00   0170               STRB     R1,[R0, #+0]
    727                         }
    728                         
    729          			GLcd_PutString(0,16,Display_Buff,1);	
   \                     ??Display_88:
   \   00000C02   0123               MOVS     R3,#+1
   \   00000C04   344A               LDR.N    R2,??Display_0+0x28
   \   00000C06   1021               MOVS     R1,#+16
   \   00000C08   0020               MOVS     R0,#+0
   \   00000C0A   ........           BL       GLcd_PutString
    730          			DisplayInfo.Mode = DISPMODE_MENU;		
   \   00000C0E   3048               LDR.N    R0,??Display_0+0x20
   \   00000C10   0221               MOVS     R1,#+2
   \   00000C12   8171               STRB     R1,[R0, #+6]
    731          		}  // end of DISP_MENU1_2
    732          		break;              
   \   00000C14   00F03EBC           B.W      ??Display_55
    733          	case DISP_MENU1_4:
    734          		{
    735          			
    736          			sprintf( (char *)Display_Buff,"  < 저장  메뉴 >");
   \                     ??Display_32:
   \   00000C18   ........           LDR.W    R1,??DataTable157_9
   \   00000C1C   2E48               LDR.N    R0,??Display_0+0x28
   \   00000C1E   ........           BL       sprintf
    737          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000C22   0123               MOVS     R3,#+1
   \   00000C24   2C4A               LDR.N    R2,??Display_0+0x28
   \   00000C26   0021               MOVS     R1,#+0
   \   00000C28   0020               MOVS     R0,#+0
   \   00000C2A   ........           BL       GLcd_PutString
    738                         if(Input_Mode == 0)
   \   00000C2E   DFF84C07           LDR.W    R0,??Display_62+0x14
   \   00000C32   0078               LDRB     R0,[R0, #+0]
   \   00000C34   0028               CMP      R0,#+0
   \   00000C36   05D1               BNE.N    ??Display_92
    739                         {
    740                              sprintf( (char *)Display_Buff,"- 충돌데이터저장          ");
   \   00000C38   ........           LDR.W    R1,??DataTable157_17
   \   00000C3C   2648               LDR.N    R0,??Display_0+0x28
   \   00000C3E   ........           BL       sprintf
   \   00000C42   74E0               B.N      ??Display_93
    741                         }else if(Input_Mode == 1)
   \                     ??Display_92:
   \   00000C44   DFF83407           LDR.W    R0,??Display_62+0x14
   \   00000C48   0078               LDRB     R0,[R0, #+0]
   \   00000C4A   0128               CMP      R0,#+1
   \   00000C4C   05D1               BNE.N    ??Display_94
    742          			{
    743                              sprintf( (char *)Display_Buff,"- 전체저장을할까요? ");
   \   00000C4E   ........           LDR.W    R1,??DataTable157_18
   \   00000C52   2148               LDR.N    R0,??Display_0+0x28
   \   00000C54   ........           BL       sprintf
   \   00000C58   69E0               B.N      ??Display_93
    744                         }else if(Input_Mode == 2)
   \                     ??Display_94:
   \   00000C5A   DFF82007           LDR.W    R0,??Display_62+0x14
   \   00000C5E   0078               LDRB     R0,[R0, #+0]
   \   00000C60   0228               CMP      R0,#+2
   \   00000C62   05D1               BNE.N    ??Display_95
    745          			{
    746                              sprintf( (char *)Display_Buff,"- 저장중입니다.    ");
   \   00000C64   ........           LDR.W    R1,??DataTable157_16
   \   00000C68   1B48               LDR.N    R0,??Display_0+0x28
   \   00000C6A   ........           BL       sprintf
   \   00000C6E   5EE0               B.N      ??Display_93
    747                              
    748                         }else if(Input_Mode == 3)
   \                     ??Display_95:
   \   00000C70   DFF80807           LDR.W    R0,??Display_62+0x14
   \   00000C74   0078               LDRB     R0,[R0, #+0]
   \   00000C76   0328               CMP      R0,#+3
   \   00000C78   34D1               BNE.N    ??Display_96
    749                         {
    750                              sprintf( (char *)Display_Buff,"- 저장완료했습니다.    ");                      
   \   00000C7A   DFF82018           LDR.W    R1,??Display_67+0x4
   \   00000C7E   1648               LDR.N    R0,??Display_0+0x28
   \   00000C80   ........           BL       sprintf
    751                              DisplayInfo.TimeOut = MS_TIMER;
   \   00000C84   7948               LDR.N    R0,??Display_3   ;; 0x40000c00
   \   00000C86   ........           BL       TIM_GetCounter
   \   00000C8A   1149               LDR.N    R1,??Display_0+0x20
   \   00000C8C   4880               STRH     R0,[R1, #+2]
    752                              DisplayInfo.HoldingTime = 2000;
   \   00000C8E   1048               LDR.N    R0,??Display_0+0x20
   \   00000C90   4FF4FA61           MOV      R1,#+2000
   \   00000C94   0180               STRH     R1,[R0, #+0]
    753                              DisplayInfo.Next_View = DisplayInfo.Now_View;
   \   00000C96   0E48               LDR.N    R0,??Display_0+0x20
   \   00000C98   0D49               LDR.N    R1,??Display_0+0x20
   \   00000C9A   4979               LDRB     R1,[R1, #+5]
   \   00000C9C   0171               STRB     R1,[R0, #+4]
    754                              DisplayInfo.Now_View = DISP_WAIT;            
   \   00000C9E   0C48               LDR.N    R0,??Display_0+0x20
   \   00000CA0   0121               MOVS     R1,#+1
   \   00000CA2   4171               STRB     R1,[R0, #+5]
    755                              Input_Mode = 0;
   \   00000CA4   DFF8D406           LDR.W    R0,??Display_62+0x14
   \   00000CA8   0021               MOVS     R1,#+0
   \   00000CAA   0170               STRB     R1,[R0, #+0]
   \   00000CAC   3FE0               B.N      ??Display_93
   \   00000CAE   00BF               Nop      
   \                     ??Display_0:
   \   00000CB0   ........           DC32     GLCD_Refresh_Flag
   \   00000CB4   ........           DC32     ??Display_Time
   \   00000CB8   ........           DC32     GLCD_Data
   \   00000CBC   ........           DC32     GLCD_Buffer
   \   00000CC0   ........           DC32     ??Led_Flag
   \   00000CC4   ........           DC32     Toogle_Cursor
   \   00000CC8   ........           DC32     GLCD_OUT_Flag
   \   00000CCC   ........           DC32     GLCD_Buffer_Cnt
   \   00000CD0   ........           DC32     DisplayInfo
   \   00000CD4   ........           DC32     LCD_WaitString
   \   00000CD8   ........           DC32     Display_Buff
   \   00000CDC   ........           DC32     Wait_y
   \   00000CE0   ........           DC32     Wait_x
    756                         }else if(Input_Mode == 4)
   \                     ??Display_96:
   \   00000CE4   DFF89406           LDR.W    R0,??Display_62+0x14
   \   00000CE8   0078               LDRB     R0,[R0, #+0]
   \   00000CEA   0428               CMP      R0,#+4
   \   00000CEC   1FD1               BNE.N    ??Display_93
    757                         {
    758                              sprintf( (char *)Display_Buff,( char * )DISP_WORD[0]);           // USB 없음                     
   \   00000CEE   ........           LDR.W    R0,??DataTable157_8
   \   00000CF2   0168               LDR      R1,[R0, #+0]
   \   00000CF4   ........           LDR.W    R0,??DataTable157_19
   \   00000CF8   ........           BL       sprintf
    759                              DisplayInfo.TimeOut = MS_TIMER;
   \   00000CFC   5B48               LDR.N    R0,??Display_3   ;; 0x40000c00
   \   00000CFE   ........           BL       TIM_GetCounter
   \   00000D02   ........           LDR.W    R1,??DataTable157_20
   \   00000D06   4880               STRH     R0,[R1, #+2]
    760                              DisplayInfo.HoldingTime = 2000;
   \   00000D08   ........           LDR.W    R0,??DataTable157_20
   \   00000D0C   4FF4FA61           MOV      R1,#+2000
   \   00000D10   0180               STRH     R1,[R0, #+0]
    761                              DisplayInfo.Next_View = DisplayInfo.Now_View;
   \   00000D12   ........           LDR.W    R0,??DataTable157_20
   \   00000D16   ........           LDR.W    R1,??DataTable157_20
   \   00000D1A   4979               LDRB     R1,[R1, #+5]
   \   00000D1C   0171               STRB     R1,[R0, #+4]
    762                              DisplayInfo.Now_View = DISP_WAIT;            
   \   00000D1E   ........           LDR.W    R0,??DataTable157_20
   \   00000D22   0121               MOVS     R1,#+1
   \   00000D24   4171               STRB     R1,[R0, #+5]
    763                              Input_Mode = 0;
   \   00000D26   DFF85406           LDR.W    R0,??Display_62+0x14
   \   00000D2A   0021               MOVS     R1,#+0
   \   00000D2C   0170               STRB     R1,[R0, #+0]
    764                         }
    765                         
    766          			GLcd_PutString(0,16,Display_Buff,1);	
   \                     ??Display_93:
   \   00000D2E   0123               MOVS     R3,#+1
   \   00000D30   ........           LDR.W    R2,??DataTable157_19
   \   00000D34   1021               MOVS     R1,#+16
   \   00000D36   0020               MOVS     R0,#+0
   \   00000D38   ........           BL       GLcd_PutString
    767          			DisplayInfo.Mode = DISPMODE_MENU;		
   \   00000D3C   ........           LDR.W    R0,??DataTable157_20
   \   00000D40   0221               MOVS     R1,#+2
   \   00000D42   8171               STRB     R1,[R0, #+6]
    768          		}  // end of DISP_MENU1_2
    769          		break;            
   \   00000D44   A6E3               B.N      ??Display_55
    770          	case DISP_MENU2_1:
    771          		{
    772          			sprintf( (char *)Display_Buff,"  < 운전자선택 >      ");
   \                     ??Display_33:
   \   00000D46   ........           LDR.W    R1,??DataTable157_21
   \   00000D4A   ........           LDR.W    R0,??DataTable157_19
   \   00000D4E   ........           BL       sprintf
    773          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000D52   0123               MOVS     R3,#+1
   \   00000D54   ........           LDR.W    R2,??DataTable157_19
   \   00000D58   0021               MOVS     R1,#+0
   \   00000D5A   0020               MOVS     R0,#+0
   \   00000D5C   ........           BL       GLcd_PutString
    774                         sprintf( (char *)Display_Buff,"  %s",SFLASH_Memory.Driver[Info.Driver_Index]);
   \   00000D60   BC48               LDR.N    R0,??Display_58+0x4
   \   00000D62   0078               LDRB     R0,[R0, #+0]
   \   00000D64   1321               MOVS     R1,#+19
   \   00000D66   ........           LDR.W    R2,??DataTable157_22
   \   00000D6A   01FB0020           MLA      R0,R1,R0,R2
   \   00000D6E   421C               ADDS     R2,R0,#+1
   \   00000D70   ........           LDR.W    R1,??DataTable157_23
   \   00000D74   ........           LDR.W    R0,??DataTable157_19
   \   00000D78   ........           BL       sprintf
    775          //			sprintf( (char *)Display_Buff," [%02d] %07ld ",SFLASH_Memory.Driver_Index +1, SFLASH_Memory.Driver[SFLASH_Memory.Driver_Index]);
    776          			GLcd_PutString(0,16,Display_Buff,1);	
   \   00000D7C   0123               MOVS     R3,#+1
   \   00000D7E   ........           LDR.W    R2,??DataTable157_19
   \   00000D82   1021               MOVS     R1,#+16
   \   00000D84   0020               MOVS     R0,#+0
   \   00000D86   ........           BL       GLcd_PutString
    777          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   00000D8A   ........           LDR.W    R0,??DataTable157_20
   \   00000D8E   0221               MOVS     R1,#+2
   \   00000D90   8171               STRB     R1,[R0, #+6]
    778          			
    779          		}  // end of DISP_MENU2_1
    780          		break;  
   \   00000D92   7FE3               B.N      ??Display_55
    781                    
    782          
    783          	case DISP_MENU3_1:
    784          		{
    785          			sprintf( (char *)Display_Buff, "  < 차량  번호 >   ");
   \                     ??Display_34:
   \   00000D94   ........           LDR.W    R1,??DataTable157_24
   \   00000D98   ........           LDR.W    R0,??DataTable157_19
   \   00000D9C   ........           BL       sprintf
    786          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000DA0   0123               MOVS     R3,#+1
   \   00000DA2   ........           LDR.W    R2,??DataTable157_19
   \   00000DA6   0021               MOVS     R1,#+0
   \   00000DA8   0020               MOVS     R0,#+0
   \   00000DAA   ........           BL       GLcd_PutString
    787          			sprintf( (char *)Display_Buff,"  %s",SFLASH_CarInfo.CarNum);
   \   00000DAE   ........           LDR.W    R2,??DataTable157_25
   \   00000DB2   ........           LDR.W    R1,??DataTable157_23
   \   00000DB6   ........           LDR.W    R0,??DataTable157_19
   \   00000DBA   ........           BL       sprintf
    788          			GLcd_PutString(0,16,Display_Buff,1);	
   \   00000DBE   0123               MOVS     R3,#+1
   \   00000DC0   ........           LDR.W    R2,??DataTable157_19
   \   00000DC4   1021               MOVS     R1,#+16
   \   00000DC6   0020               MOVS     R0,#+0
   \   00000DC8   ........           BL       GLcd_PutString
    789          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   00000DCC   ........           LDR.W    R0,??DataTable157_20
   \   00000DD0   0221               MOVS     R1,#+2
   \   00000DD2   8171               STRB     R1,[R0, #+6]
    790          			
    791          		}  // end of DISP_MENU3_1
    792          		break;            
   \   00000DD4   5EE3               B.N      ??Display_55
    793           
    794          	case DISP_MENU4_0:
    795          		{
    796          			sprintf( (char *)Display_Buff,"  < 암호코드입력 > ");
   \                     ??Display_35:
   \   00000DD6   ........           LDR.W    R1,??DataTable157_26
   \   00000DDA   ........           LDR.W    R0,??DataTable157_19
   \   00000DDE   ........           BL       sprintf
    797          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000DE2   0123               MOVS     R3,#+1
   \   00000DE4   ........           LDR.W    R2,??DataTable157_19
   \   00000DE8   0021               MOVS     R1,#+0
   \   00000DEA   0020               MOVS     R0,#+0
   \   00000DEC   ........           BL       GLcd_PutString
    798                         memset(PasswordBuffer,0x20,sizeof(PasswordBuffer));
   \   00000DF0   0622               MOVS     R2,#+6
   \   00000DF2   2021               MOVS     R1,#+32
   \   00000DF4   02A8               ADD      R0,SP,#+8
   \   00000DF6   ........           BL       memset
    799                         for( i =0  ; i < Pass_Index ; i++)
   \   00000DFA   0020               MOVS     R0,#+0
   \   00000DFC   04E0               B.N      ??Display_97
    800                             PasswordBuffer[i] = '*';
   \                     ??Display_98:
   \   00000DFE   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000E00   02A9               ADD      R1,SP,#+8
   \   00000E02   2A22               MOVS     R2,#+42
   \   00000E04   4254               STRB     R2,[R0, R1]
   \   00000E06   401C               ADDS     R0,R0,#+1
   \                     ??Display_97:
   \   00000E08   ........           LDR.W    R1,??DataTable157_27
   \   00000E0C   0978               LDRB     R1,[R1, #+0]
   \   00000E0E   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000E10   8842               CMP      R0,R1
   \   00000E12   F4D3               BCC.N    ??Display_98
    801          			sprintf( (char *)Display_Buff,"     [ %6s ]  ",PasswordBuffer);
   \   00000E14   02AA               ADD      R2,SP,#+8
   \   00000E16   ........           LDR.W    R1,??DataTable157_28
   \   00000E1A   ........           LDR.W    R0,??DataTable157_19
   \   00000E1E   ........           BL       sprintf
    802          			GLcd_PutString(0,16,Display_Buff,1);	
   \   00000E22   0123               MOVS     R3,#+1
   \   00000E24   ........           LDR.W    R2,??DataTable157_19
   \   00000E28   1021               MOVS     R1,#+16
   \   00000E2A   0020               MOVS     R0,#+0
   \   00000E2C   ........           BL       GLcd_PutString
    803          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   00000E30   ........           LDR.W    R0,??DataTable157_20
   \   00000E34   0221               MOVS     R1,#+2
   \   00000E36   8171               STRB     R1,[R0, #+6]
    804          			
    805          		}  // end of DISP_MENU4_1
    806          		break;
   \   00000E38   2CE3               B.N      ??Display_55
    807          	case DISP_MENU4_1:
    808          		{
    809                         
    810          			sprintf( (char *)Display_Buff,"  < 운전자  변경 >    ");
   \                     ??Display_36:
   \   00000E3A   ........           LDR.W    R1,??DataTable157_29
   \   00000E3E   ........           LDR.W    R0,??DataTable157_19
   \   00000E42   ........           BL       sprintf
    811          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000E46   0123               MOVS     R3,#+1
   \   00000E48   ........           LDR.W    R2,??DataTable157_19
   \   00000E4C   0021               MOVS     R1,#+0
   \   00000E4E   0020               MOVS     R0,#+0
   \   00000E50   ........           BL       GLcd_PutString
    812                         if( Input_Mode == 0 )                    
   \   00000E54   DFF82405           LDR.W    R0,??Display_62+0x14
   \   00000E58   0078               LDRB     R0,[R0, #+0]
   \   00000E5A   0028               CMP      R0,#+0
   \   00000E5C   1ED1               BNE.N    ??Display_99
    813                         {
    814                              if( Info.Driver_Index == NO_DRIVER)
   \   00000E5E   7D48               LDR.N    R0,??Display_58+0x4
   \   00000E60   0078               LDRB     R0,[R0, #+0]
   \   00000E62   FF28               CMP      R0,#+255
   \   00000E64   09D1               BNE.N    ??Display_100
    815                                   sprintf( (char *)Display_Buff,"- 운전자가선택안됨 ");
   \   00000E66   ........           LDR.W    R1,??DataTable157_30
   \   00000E6A   01E0               B.N      ??Display_101
   \                     ??Display_3:
   \   00000E6C   000C0040           DC32     0x40000c00
   \                     ??Display_101:
   \   00000E70   ........           LDR.W    R0,??DataTable157_19
   \   00000E74   ........           BL       sprintf
   \   00000E78   38E0               B.N      ??Display_102
    816                              else
    817                                   sprintf( (char *)Display_Buff,"%d-%018s",Info.Driver_Index,SFLASH_Memory.Driver[Info.Driver_Index]);                    
   \                     ??Display_100:
   \   00000E7A   7648               LDR.N    R0,??Display_58+0x4
   \   00000E7C   0078               LDRB     R0,[R0, #+0]
   \   00000E7E   1321               MOVS     R1,#+19
   \   00000E80   ........           LDR.W    R2,??DataTable157_22
   \   00000E84   01FB0020           MLA      R0,R1,R0,R2
   \   00000E88   431C               ADDS     R3,R0,#+1
   \   00000E8A   7248               LDR.N    R0,??Display_58+0x4
   \   00000E8C   0278               LDRB     R2,[R0, #+0]
   \   00000E8E   ........           LDR.W    R1,??DataTable157_31
   \   00000E92   ........           LDR.W    R0,??DataTable157_19
   \   00000E96   ........           BL       sprintf
   \   00000E9A   27E0               B.N      ??Display_102
    818                              
    819                         }else if( Input_Mode == 1 )
   \                     ??Display_99:
   \   00000E9C   DFF8DC04           LDR.W    R0,??Display_62+0x14
   \   00000EA0   0078               LDRB     R0,[R0, #+0]
   \   00000EA2   0128               CMP      R0,#+1
   \   00000EA4   12D1               BNE.N    ??Display_103
    820          			{
    821                              sprintf( (char *)Display_Buff,"%d-%018s",Input_Index_1,SFLASH_Memory.Driver[Input_Index_1]);                    
   \   00000EA6   ........           LDR.W    R0,??DataTable157_11
   \   00000EAA   0078               LDRB     R0,[R0, #+0]
   \   00000EAC   1321               MOVS     R1,#+19
   \   00000EAE   ........           LDR.W    R2,??DataTable157_22
   \   00000EB2   01FB0020           MLA      R0,R1,R0,R2
   \   00000EB6   431C               ADDS     R3,R0,#+1
   \   00000EB8   ........           LDR.W    R0,??DataTable157_11
   \   00000EBC   0278               LDRB     R2,[R0, #+0]
   \   00000EBE   ........           LDR.W    R1,??DataTable157_31
   \   00000EC2   ........           LDR.W    R0,??DataTable157_19
   \   00000EC6   ........           BL       sprintf
   \   00000ECA   0FE0               B.N      ??Display_102
    822          			}
    823          			else if(Input_Mode == 2)
   \                     ??Display_103:
   \   00000ECC   DFF8AC04           LDR.W    R0,??Display_62+0x14
   \   00000ED0   0078               LDRB     R0,[R0, #+0]
   \   00000ED2   0228               CMP      R0,#+2
   \   00000ED4   0AD1               BNE.N    ??Display_102
    824          			{ 
    825                              sprintf( (char *)Display_Buff,"%d-%018s",Input_Index_1,Input_Word);                      
   \   00000ED6   ........           LDR.W    R3,??DataTable157_32
   \   00000EDA   ........           LDR.W    R0,??DataTable157_11
   \   00000EDE   0278               LDRB     R2,[R0, #+0]
   \   00000EE0   ........           LDR.W    R1,??DataTable157_31
   \   00000EE4   ........           LDR.W    R0,??DataTable157_19
   \   00000EE8   ........           BL       sprintf
    826          			}
    827          			GLcd_PutString(0,16,Display_Buff,1);
   \                     ??Display_102:
   \   00000EEC   0123               MOVS     R3,#+1
   \   00000EEE   ........           LDR.W    R2,??DataTable157_19
   \   00000EF2   1021               MOVS     R1,#+16
   \   00000EF4   0020               MOVS     R0,#+0
   \   00000EF6   ........           BL       GLcd_PutString
    828          			DisplayInfo.Mode = DISPMODE_MENU;
   \   00000EFA   ........           LDR.W    R0,??DataTable157_20
   \   00000EFE   0221               MOVS     R1,#+2
   \   00000F00   8171               STRB     R1,[R0, #+6]
    829          		}  // end of DISP_MENU4_2
    830          		break;
   \   00000F02   C7E2               B.N      ??Display_55
    831          	case DISP_MENU4_2:
    832          		{
    833          			sprintf( (char *)Display_Buff,"  < 버스차량변경 > ");
   \                     ??Display_37:
   \   00000F04   ........           LDR.W    R1,??DataTable157_33
   \   00000F08   ........           LDR.W    R0,??DataTable157_19
   \   00000F0C   ........           BL       sprintf
    834          			GLcd_PutString(0,0,Display_Buff,1);             
   \   00000F10   0123               MOVS     R3,#+1
   \   00000F12   ........           LDR.W    R2,??DataTable157_19
   \   00000F16   0021               MOVS     R1,#+0
   \   00000F18   0020               MOVS     R0,#+0
   \   00000F1A   ........           BL       GLcd_PutString
    835          
    836                         if( SFLASH_Memory.Car_Maker == 1 )
   \   00000F1E   ........           LDR.W    R0,??DataTable157_22
   \   00000F22   0078               LDRB     R0,[R0, #+0]
   \   00000F24   0128               CMP      R0,#+1
   \   00000F26   05D1               BNE.N    ??Display_104
    837                              sprintf( (char *)Display_Buff,"    < 현대버스 >      ");
   \   00000F28   ........           LDR.W    R1,??DataTable157_34
   \   00000F2C   ........           LDR.W    R0,??DataTable157_19
   \   00000F30   ........           BL       sprintf
    838                         if( SFLASH_Memory.Car_Maker == 2 )
   \                     ??Display_104:
   \   00000F34   ........           LDR.W    R0,??DataTable157_22
   \   00000F38   0078               LDRB     R0,[R0, #+0]
   \   00000F3A   0228               CMP      R0,#+2
   \   00000F3C   05D1               BNE.N    ??Display_105
    839                              sprintf( (char *)Display_Buff,"  < 대우신형버스 >    ");
   \   00000F3E   ........           LDR.W    R1,??DataTable157_35
   \   00000F42   ........           LDR.W    R0,??DataTable157_19
   \   00000F46   ........           BL       sprintf
    840                         if( SFLASH_Memory.Car_Maker == 3 )
   \                     ??Display_105:
   \   00000F4A   ........           LDR.W    R0,??DataTable157_22
   \   00000F4E   0078               LDRB     R0,[R0, #+0]
   \   00000F50   0328               CMP      R0,#+3
   \   00000F52   05D1               BNE.N    ??Display_106
    841                              sprintf( (char *)Display_Buff,"  < 대우구형버스 >    ");
   \   00000F54   ........           LDR.W    R1,??DataTable157_36
   \   00000F58   ........           LDR.W    R0,??DataTable157_19
   \   00000F5C   ........           BL       sprintf
    842                         if( SFLASH_Memory.Car_Maker == 4 )
   \                     ??Display_106:
   \   00000F60   ........           LDR.W    R0,??DataTable157_22
   \   00000F64   0078               LDRB     R0,[R0, #+0]
   \   00000F66   0428               CMP      R0,#+4
   \   00000F68   05D1               BNE.N    ??Display_107
    843                              sprintf( (char *)Display_Buff,"  < 예외설정값적용 >  ");
   \   00000F6A   ........           LDR.W    R1,??DataTable157_37
   \   00000F6E   ........           LDR.W    R0,??DataTable157_19
   \   00000F72   ........           BL       sprintf
    844          
    845          			GLcd_PutString(0,16,Display_Buff,1);	
   \                     ??Display_107:
   \   00000F76   0123               MOVS     R3,#+1
   \   00000F78   ........           LDR.W    R2,??DataTable157_19
   \   00000F7C   1021               MOVS     R1,#+16
   \   00000F7E   0020               MOVS     R0,#+0
   \   00000F80   ........           BL       GLcd_PutString
    846          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   00000F84   ........           LDR.W    R0,??DataTable157_20
   \   00000F88   0221               MOVS     R1,#+2
   \   00000F8A   8171               STRB     R1,[R0, #+6]
    847          			
    848          		}  // end of DISP_MENU4_3
    849          		break;          
   \   00000F8C   82E2               B.N      ??Display_55
    850          	case DISP_MENU4_3:
    851          		{
    852          			sprintf( (char *)Display_Buff,"  < 속도상수변경 > ");
   \                     ??Display_38:
   \   00000F8E   ........           LDR.W    R1,??DataTable157_38
   \   00000F92   ........           LDR.W    R0,??DataTable157_19
   \   00000F96   ........           BL       sprintf
    853          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000F9A   0123               MOVS     R3,#+1
   \   00000F9C   ........           LDR.W    R2,??DataTable157_19
   \   00000FA0   0021               MOVS     R1,#+0
   \   00000FA2   0020               MOVS     R0,#+0
   \   00000FA4   ........           BL       GLcd_PutString
    854          			if( Input_Mode == 0 )
   \   00000FA8   DFF8D003           LDR.W    R0,??Display_62+0x14
   \   00000FAC   0078               LDRB     R0,[R0, #+0]
   \   00000FAE   0028               CMP      R0,#+0
   \   00000FB0   09D1               BNE.N    ??Display_108
    855          			{
    856          				sprintf( (char *)Display_Buff, "      [%06d]     ", SFLASH_Memory.SPEED_Adjust);
   \   00000FB2   ........           LDR.W    R0,??DataTable157_22
   \   00000FB6   426E               LDR      R2,[R0, #+100]
   \   00000FB8   ........           LDR.W    R1,??DataTable157_39
   \   00000FBC   ........           LDR.W    R0,??DataTable157_19
   \   00000FC0   ........           BL       sprintf
   \   00000FC4   07E0               B.N      ??Display_109
    857          			}
    858          			else
    859          			{
    860          				sprintf( (char *)Display_Buff, "      [%06s]    ", Input_Word);	
   \                     ??Display_108:
   \   00000FC6   ........           LDR.W    R2,??DataTable157_32
   \   00000FCA   ........           LDR.W    R1,??DataTable157_40
   \   00000FCE   ........           LDR.W    R0,??DataTable157_19
   \   00000FD2   ........           BL       sprintf
    861          			}
    862          			GLcd_PutString(0,16,Display_Buff,1);	
   \                     ??Display_109:
   \   00000FD6   0123               MOVS     R3,#+1
   \   00000FD8   ........           LDR.W    R2,??DataTable157_19
   \   00000FDC   1021               MOVS     R1,#+16
   \   00000FDE   0020               MOVS     R0,#+0
   \   00000FE0   ........           BL       GLcd_PutString
    863          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   00000FE4   ........           LDR.W    R0,??DataTable157_20
   \   00000FE8   0221               MOVS     R1,#+2
   \   00000FEA   8171               STRB     R1,[R0, #+6]
    864          			
    865          		}  // end of DISP_MENU4_3
    866          		break;
   \   00000FEC   52E2               B.N      ??Display_55
    867          	case DISP_MENU4_4:
    868          		{
    869          			sprintf( (char *)Display_Buff,"  < RPM 상수변경 > ");
   \                     ??Display_39:
   \   00000FEE   ........           LDR.W    R1,??DataTable157_41
   \   00000FF2   ........           LDR.W    R0,??DataTable157_19
   \   00000FF6   ........           BL       sprintf
    870          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000FFA   0123               MOVS     R3,#+1
   \   00000FFC   ........           LDR.W    R2,??DataTable157_19
   \   00001000   0021               MOVS     R1,#+0
   \   00001002   0020               MOVS     R0,#+0
   \   00001004   ........           BL       GLcd_PutString
    871          			if( Input_Mode == 0  )
   \   00001008   DFF87003           LDR.W    R0,??Display_62+0x14
   \   0000100C   0078               LDRB     R0,[R0, #+0]
   \   0000100E   0028               CMP      R0,#+0
   \   00001010   09D1               BNE.N    ??Display_110
    872          			{
    873          				sprintf( (char *)Display_Buff,  "      [%06d]     ",SFLASH_Memory.RPM_Adjust );
   \   00001012   ........           LDR.W    R0,??DataTable157_22
   \   00001016   026E               LDR      R2,[R0, #+96]
   \   00001018   ........           LDR.W    R1,??DataTable157_39
   \   0000101C   ........           LDR.W    R0,??DataTable157_19
   \   00001020   ........           BL       sprintf
   \   00001024   07E0               B.N      ??Display_111
    874                         }
    875          			else
    876          			{
    877          				sprintf( (char *)Display_Buff,  "      [%06s]     ",Input_Word);	
   \                     ??Display_110:
   \   00001026   ........           LDR.W    R2,??DataTable157_32
   \   0000102A   ........           LDR.W    R1,??DataTable157_42
   \   0000102E   ........           LDR.W    R0,??DataTable157_19
   \   00001032   ........           BL       sprintf
    878          			}                
    879          			GLcd_PutString(0,16,Display_Buff,1);	
   \                     ??Display_111:
   \   00001036   0123               MOVS     R3,#+1
   \   00001038   ........           LDR.W    R2,??DataTable157_19
   \   0000103C   1021               MOVS     R1,#+16
   \   0000103E   0020               MOVS     R0,#+0
   \   00001040   ........           BL       GLcd_PutString
    880          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   00001044   ........           LDR.W    R0,??DataTable157_20
   \   00001048   0221               MOVS     R1,#+2
   \   0000104A   8171               STRB     R1,[R0, #+6]
    881          			
    882          		}  // end of DISP_MENU4_4
    883          		break;
   \   0000104C   22E2               B.N      ??Display_55
   \   0000104E   00BF               Nop      
   \                     ??Display_58:
   \   00001050   ........           DC32     EMS_Drive_Value
   \   00001054   ........           DC32     Info
   \   00001058   ........           DC32     Info+0x1
   \   0000105C   ........           DC32     TiltInfo
   \   00001060   40420F00           DC32     0xf4240
   \   00001064   ........           DC32     SFLASH_CarInfo+0x3C
   \   00001068   ........           DC32     SFLASH_CarInfo+0x14
    884          	case DISP_MENU4_5:
    885          		{
    886          			sprintf( (char *)Display_Buff,"  < 속도기준전압 > ");       // 50 = 5.0V
   \                     ??Display_40:
   \   0000106C   ........           LDR.W    R1,??DataTable157_43
   \   00001070   ........           LDR.W    R0,??DataTable157_19
   \   00001074   ........           BL       sprintf
    887          			GLcd_PutString(0,0,Display_Buff,1);
   \   00001078   0123               MOVS     R3,#+1
   \   0000107A   ........           LDR.W    R2,??DataTable157_19
   \   0000107E   0021               MOVS     R1,#+0
   \   00001080   0020               MOVS     R0,#+0
   \   00001082   ........           BL       GLcd_PutString
    888          			sprintf( (char *)Display_Buff,"    [ %4.1f V ]     ",(float)SFLASH_Memory.SPEED_Reference/10.0);
   \   00001086   ........           LDR.W    R0,??DataTable157_22
   \   0000108A   B0F86C00           LDRH     R0,[R0, #+108]
   \   0000108E   ........           BL       __aeabi_ui2f
   \   00001092   ........           BL       __aeabi_f2d
   \   00001096   0022               MOVS     R2,#+0
   \   00001098   ........           LDR.W    R3,??DataTable157_44  ;; 0x40240000
   \   0000109C   ........           BL       __aeabi_ddiv
   \   000010A0   0200               MOVS     R2,R0
   \   000010A2   0B00               MOVS     R3,R1
   \   000010A4   ........           LDR.W    R1,??DataTable157_45
   \   000010A8   ........           LDR.W    R0,??DataTable157_19
   \   000010AC   ........           BL       sprintf
    889          			GLcd_PutString(0,16,Display_Buff,1);	
   \   000010B0   0123               MOVS     R3,#+1
   \   000010B2   ........           LDR.W    R2,??DataTable157_19
   \   000010B6   1021               MOVS     R1,#+16
   \   000010B8   0020               MOVS     R0,#+0
   \   000010BA   ........           BL       GLcd_PutString
    890          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   000010BE   ........           LDR.W    R0,??DataTable157_20
   \   000010C2   0221               MOVS     R1,#+2
   \   000010C4   8171               STRB     R1,[R0, #+6]
    891          			
    892          		}  // end of DISP_MENU4_5
    893          		break;
   \   000010C6   E5E1               B.N      ??Display_55
    894          	case DISP_MENU4_6:
    895          		{
    896          			sprintf( (char *)Display_Buff,"  < RPM 기준전압 >    ");       // 
   \                     ??Display_41:
   \   000010C8   ........           LDR.W    R1,??DataTable157_46
   \   000010CC   ........           LDR.W    R0,??DataTable157_19
   \   000010D0   ........           BL       sprintf
    897          			GLcd_PutString(0,0,Display_Buff,1);
   \   000010D4   0123               MOVS     R3,#+1
   \   000010D6   ........           LDR.W    R2,??DataTable157_19
   \   000010DA   0021               MOVS     R1,#+0
   \   000010DC   0020               MOVS     R0,#+0
   \   000010DE   ........           BL       GLcd_PutString
    898          			sprintf( (char *)Display_Buff,"    [ %4.1f V ]     ",(float)SFLASH_Memory.RPM_Reference/10.0);
   \   000010E2   ........           LDR.W    R0,??DataTable157_22
   \   000010E6   B0F86E00           LDRH     R0,[R0, #+110]
   \   000010EA   ........           BL       __aeabi_ui2f
   \   000010EE   ........           BL       __aeabi_f2d
   \   000010F2   0022               MOVS     R2,#+0
   \   000010F4   ........           LDR.W    R3,??DataTable157_44  ;; 0x40240000
   \   000010F8   ........           BL       __aeabi_ddiv
   \   000010FC   0200               MOVS     R2,R0
   \   000010FE   0B00               MOVS     R3,R1
   \   00001100   ........           LDR.W    R1,??DataTable157_45
   \   00001104   ........           LDR.W    R0,??DataTable157_19
   \   00001108   ........           BL       sprintf
    899          			GLcd_PutString(0,16,Display_Buff,1);	
   \   0000110C   0123               MOVS     R3,#+1
   \   0000110E   ........           LDR.W    R2,??DataTable157_19
   \   00001112   1021               MOVS     R1,#+16
   \   00001114   0020               MOVS     R0,#+0
   \   00001116   ........           BL       GLcd_PutString
    900          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   0000111A   ........           LDR.W    R0,??DataTable157_20
   \   0000111E   0221               MOVS     R1,#+2
   \   00001120   8171               STRB     R1,[R0, #+6]
    901          			
    902          		}  // end of DISP_MENU4_6
    903          		break;
   \   00001122   B7E1               B.N      ??Display_55
    904          	case DISP_MENU4_7:       // 에어압 전압
    905          		{              
    906          			sprintf( (char *)Display_Buff,"  < 에어압  전압 >   ");
   \                     ??Display_42:
   \   00001124   ........           LDR.W    R1,??DataTable157_47
   \   00001128   ........           LDR.W    R0,??DataTable157_19
   \   0000112C   ........           BL       sprintf
    907          			GLcd_PutString(0,0,Display_Buff,1);
   \   00001130   0123               MOVS     R3,#+1
   \   00001132   ........           LDR.W    R2,??DataTable157_19
   \   00001136   0021               MOVS     R1,#+0
   \   00001138   0020               MOVS     R0,#+0
   \   0000113A   ........           BL       GLcd_PutString
    908          			sprintf( (char *)Display_Buff,"    [ %4.1f V ]     ", (float) SFLASH_Memory.EMS.Air_Volt / 1000.0);
   \   0000113E   ........           LDR.W    R0,??DataTable157_22
   \   00001142   B0F88F00           LDRH     R0,[R0, #+143]
   \   00001146   ........           BL       __aeabi_ui2f
   \   0000114A   ........           BL       __aeabi_f2d
   \   0000114E   0022               MOVS     R2,#+0
   \   00001150   ........           LDR.W    R3,??DataTable157_48  ;; 0x408f4000
   \   00001154   ........           BL       __aeabi_ddiv
   \   00001158   0200               MOVS     R2,R0
   \   0000115A   0B00               MOVS     R3,R1
   \   0000115C   ........           LDR.W    R1,??DataTable157_45
   \   00001160   ........           LDR.W    R0,??DataTable157_19
   \   00001164   ........           BL       sprintf
    909          			GLcd_PutString(0,16,Display_Buff,1);	
   \   00001168   0123               MOVS     R3,#+1
   \   0000116A   ........           LDR.W    R2,??DataTable157_19
   \   0000116E   1021               MOVS     R1,#+16
   \   00001170   0020               MOVS     R0,#+0
   \   00001172   ........           BL       GLcd_PutString
    910          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   00001176   ........           LDR.W    R0,??DataTable157_20
   \   0000117A   0221               MOVS     R1,#+2
   \   0000117C   8171               STRB     R1,[R0, #+6]
    911          			
    912          		}  // end of DISP_MENU4_7
    913          		break;
   \   0000117E   89E1               B.N      ??Display_55
    914          	case DISP_MENU4_8:
    915          		{
    916          			sprintf( (char *)Display_Buff,"  < 냉각수  온도 >     ");
   \                     ??Display_43:
   \   00001180   ........           LDR.W    R1,??DataTable157_49
   \   00001184   ........           LDR.W    R0,??DataTable157_19
   \   00001188   ........           BL       sprintf
    917          			GLcd_PutString(0,0,Display_Buff,1);
   \   0000118C   0123               MOVS     R3,#+1
   \   0000118E   ........           LDR.W    R2,??DataTable157_19
   \   00001192   0021               MOVS     R1,#+0
   \   00001194   0020               MOVS     R0,#+0
   \   00001196   ........           BL       GLcd_PutString
    918          			sprintf( (char *)Display_Buff,"    [ %4.1f V ]     ", (float) SFLASH_Memory.EMS.ColdWaterTemp_Volt / 1000.0);
   \   0000119A   ........           LDR.W    R0,??DataTable157_22
   \   0000119E   B0F88D00           LDRH     R0,[R0, #+141]
   \   000011A2   ........           BL       __aeabi_ui2f
   \   000011A6   ........           BL       __aeabi_f2d
   \   000011AA   0022               MOVS     R2,#+0
   \   000011AC   ........           LDR.W    R3,??DataTable157_48  ;; 0x408f4000
   \   000011B0   ........           BL       __aeabi_ddiv
   \   000011B4   0200               MOVS     R2,R0
   \   000011B6   0B00               MOVS     R3,R1
   \   000011B8   ........           LDR.W    R1,??DataTable157_45
   \   000011BC   ........           LDR.W    R0,??DataTable157_19
   \   000011C0   ........           BL       sprintf
    919          			GLcd_PutString(0,16,Display_Buff,1);	
   \   000011C4   0123               MOVS     R3,#+1
   \   000011C6   ........           LDR.W    R2,??DataTable157_19
   \   000011CA   1021               MOVS     R1,#+16
   \   000011CC   0020               MOVS     R0,#+0
   \   000011CE   ........           BL       GLcd_PutString
    920          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   000011D2   ........           LDR.W    R0,??DataTable157_20
   \   000011D6   0221               MOVS     R1,#+2
   \   000011D8   8171               STRB     R1,[R0, #+6]
    921          			
    922          		}  // end of DISP_MENU4_8
    923          		break;
   \   000011DA   5BE1               B.N      ??Display_55
    924          	case DISP_MENU4_9:
    925          		{
    926          			sprintf( (char *)Display_Buff,"  < 과속  기준 >      ");
   \                     ??Display_44:
   \   000011DC   ........           LDR.W    R1,??DataTable157_50
   \   000011E0   ........           LDR.W    R0,??DataTable157_19
   \   000011E4   ........           BL       sprintf
    927          			GLcd_PutString(0,0,Display_Buff,1);
   \   000011E8   0123               MOVS     R3,#+1
   \   000011EA   ....               LDR.N    R2,??DataTable157_19
   \   000011EC   0021               MOVS     R1,#+0
   \   000011EE   0020               MOVS     R0,#+0
   \   000011F0   ........           BL       GLcd_PutString
    928          			sprintf( (char *)Display_Buff,"     [ %03d km ]     ",SFLASH_Memory.FastOverSpeed);
   \   000011F4   ....               LDR.N    R0,??DataTable157_22
   \   000011F6   B0F89620           LDRH     R2,[R0, #+150]
   \   000011FA   ........           LDR.W    R1,??DataTable157_51
   \   000011FE   ....               LDR.N    R0,??DataTable157_19
   \   00001200   ........           BL       sprintf
    929          			GLcd_PutString(0,16,Display_Buff,1);	
   \   00001204   0123               MOVS     R3,#+1
   \   00001206   ....               LDR.N    R2,??DataTable157_19
   \   00001208   1021               MOVS     R1,#+16
   \   0000120A   0020               MOVS     R0,#+0
   \   0000120C   ........           BL       GLcd_PutString
    930          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   00001210   ....               LDR.N    R0,??DataTable157_20
   \   00001212   0221               MOVS     R1,#+2
   \   00001214   8171               STRB     R1,[R0, #+6]
    931          			
    932          		}  // end of DISP_MENU4_9
    933          		break;
   \   00001216   3DE1               B.N      ??Display_55
    934          	case DISP_MENU4_10:
    935          		{
    936          			sprintf( (char *)Display_Buff,"  < 급정지기준 >      ");
   \                     ??Display_45:
   \   00001218   ........           LDR.W    R1,??DataTable157_52
   \   0000121C   ....               LDR.N    R0,??DataTable157_19
   \   0000121E   ........           BL       sprintf
    937          			GLcd_PutString(0,0,Display_Buff,1);
   \   00001222   0123               MOVS     R3,#+1
   \   00001224   ....               LDR.N    R2,??DataTable157_19
   \   00001226   0021               MOVS     R1,#+0
   \   00001228   0020               MOVS     R0,#+0
   \   0000122A   ........           BL       GLcd_PutString
    938          			sprintf( (char *)Display_Buff,"     [ %03d km ]     ",SFLASH_Memory.QuickStop);
   \   0000122E   ....               LDR.N    R0,??DataTable157_22
   \   00001230   B0F89A20           LDRH     R2,[R0, #+154]
   \   00001234   ........           LDR.W    R1,??DataTable157_51
   \   00001238   ....               LDR.N    R0,??DataTable157_19
   \   0000123A   ........           BL       sprintf
    939          			GLcd_PutString(0,16,Display_Buff,1);	
   \   0000123E   0123               MOVS     R3,#+1
   \   00001240   ....               LDR.N    R2,??DataTable157_19
   \   00001242   1021               MOVS     R1,#+16
   \   00001244   0020               MOVS     R0,#+0
   \   00001246   ........           BL       GLcd_PutString
    940          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   0000124A   ....               LDR.N    R0,??DataTable157_20
   \   0000124C   0221               MOVS     R1,#+2
   \   0000124E   8171               STRB     R1,[R0, #+6]
    941          			
    942          		}  // end of DISP_MENU4_10
    943          		break;
   \   00001250   20E1               B.N      ??Display_55
    944          	case DISP_MENU4_11:
    945          		{
    946          			sprintf( (char *)Display_Buff, "  < 급가속기준 >      ");
   \                     ??Display_46:
   \   00001252   ....               LDR.N    R1,??DataTable157_53
   \   00001254   ....               LDR.N    R0,??DataTable157_19
   \   00001256   ........           BL       sprintf
    947          			GLcd_PutString(0,0,Display_Buff,1);
   \   0000125A   0123               MOVS     R3,#+1
   \   0000125C   ....               LDR.N    R2,??DataTable157_19
   \   0000125E   0021               MOVS     R1,#+0
   \   00001260   0020               MOVS     R0,#+0
   \   00001262   ........           BL       GLcd_PutString
    948          			sprintf( (char *)Display_Buff,"     [ %03d km ]     ",SFLASH_Memory.QuickStart);
   \   00001266   ....               LDR.N    R0,??DataTable157_22
   \   00001268   B0F89C20           LDRH     R2,[R0, #+156]
   \   0000126C   ....               LDR.N    R1,??DataTable157_51
   \   0000126E   ....               LDR.N    R0,??DataTable157_19
   \   00001270   ........           BL       sprintf
    949          			GLcd_PutString(0,16,Display_Buff,1);	
   \   00001274   0123               MOVS     R3,#+1
   \   00001276   ....               LDR.N    R2,??DataTable157_19
   \   00001278   1021               MOVS     R1,#+16
   \   0000127A   0020               MOVS     R0,#+0
   \   0000127C   ........           BL       GLcd_PutString
    950          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   00001280   ....               LDR.N    R0,??DataTable157_20
   \   00001282   0221               MOVS     R1,#+2
   \   00001284   8171               STRB     R1,[R0, #+6]
    951          			
    952          		}  // end of DISP_MENU4_11
    953          		break;
   \   00001286   05E1               B.N      ??Display_55
    954          	case DISP_MENU4_12:
    955          		{
    956                         
    957          			sprintf( (char *)Display_Buff,"  < 과부하기준 >     " );
   \                     ??Display_47:
   \   00001288   ....               LDR.N    R1,??DataTable157_54
   \   0000128A   ....               LDR.N    R0,??DataTable157_19
   \   0000128C   ........           BL       sprintf
    958          			GLcd_PutString(0,0,Display_Buff,1);
   \   00001290   0123               MOVS     R3,#+1
   \   00001292   ....               LDR.N    R2,??DataTable157_19
   \   00001294   0021               MOVS     R1,#+0
   \   00001296   0020               MOVS     R0,#+0
   \   00001298   ........           BL       GLcd_PutString
    959          			sprintf( (char *)Display_Buff,"    [ %04d rpm ]    ", SFLASH_Memory.OverloadRPM );	        
   \   0000129C   ....               LDR.N    R0,??DataTable157_22
   \   0000129E   B0F89E20           LDRH     R2,[R0, #+158]
   \   000012A2   ....               LDR.N    R1,??DataTable157_55
   \   000012A4   ....               LDR.N    R0,??DataTable157_19
   \   000012A6   ........           BL       sprintf
    960          			GLcd_PutString(0,16,Display_Buff,1);
   \   000012AA   0123               MOVS     R3,#+1
   \   000012AC   ....               LDR.N    R2,??DataTable157_19
   \   000012AE   1021               MOVS     R1,#+16
   \   000012B0   0020               MOVS     R0,#+0
   \   000012B2   ........           BL       GLcd_PutString
    961                         
    962          		}  	// end of DIS_MENU4_12
    963          		break;
   \   000012B6   EDE0               B.N      ??Display_55
    964          	case DISP_MENU4_13:
    965          		{			
    966          			sprintf( (char *)Display_Buff,"  < 기울기세팅 >     " );
   \                     ??Display_48:
   \   000012B8   ....               LDR.N    R1,??DataTable157_56
   \   000012BA   ....               LDR.N    R0,??DataTable157_19
   \   000012BC   ........           BL       sprintf
    967          			GLcd_PutString(0,0,Display_Buff,1);
   \   000012C0   0123               MOVS     R3,#+1
   \   000012C2   ....               LDR.N    R2,??DataTable157_19
   \   000012C4   0021               MOVS     R1,#+0
   \   000012C6   0020               MOVS     R0,#+0
   \   000012C8   ........           BL       GLcd_PutString
    968          			if( Input_Mode == 0 )
   \   000012CC   2B48               LDR.N    R0,??Display_62+0x14
   \   000012CE   0078               LDRB     R0,[R0, #+0]
   \   000012D0   0028               CMP      R0,#+0
   \   000012D2   0AD1               BNE.N    ??Display_112
    969          				sprintf( (char *)Display_Buff,"     X=%-2d  Y=%-2d   ",TiltInfo.DegX,TiltInfo.DegY );	        
   \   000012D4   ....               LDR.N    R0,??DataTable157_57
   \   000012D6   B0F91230           LDRSH    R3,[R0, #+18]
   \   000012DA   ....               LDR.N    R0,??DataTable157_57
   \   000012DC   B0F91020           LDRSH    R2,[R0, #+16]
   \   000012E0   ....               LDR.N    R1,??DataTable157_58
   \   000012E2   ....               LDR.N    R0,??DataTable157_19
   \   000012E4   ........           BL       sprintf
   \   000012E8   03E0               B.N      ??Display_113
    970          			else
    971          				sprintf( (char *)Display_Buff,"기울기세팅 OK/ESC");        
   \                     ??Display_112:
   \   000012EA   ....               LDR.N    R1,??DataTable157_59
   \   000012EC   ....               LDR.N    R0,??DataTable157_19
   \   000012EE   ........           BL       sprintf
    972          			GLcd_PutString(0,16,Display_Buff,1);          
   \                     ??Display_113:
   \   000012F2   0123               MOVS     R3,#+1
   \   000012F4   ....               LDR.N    R2,??DataTable157_19
   \   000012F6   1021               MOVS     R1,#+16
   \   000012F8   0020               MOVS     R0,#+0
   \   000012FA   ........           BL       GLcd_PutString
    973          			
    974          		}  	// end of DIS_MENU4_13
    975          		break;
   \   000012FE   C9E0               B.N      ??Display_55
    976          	case DISP_MENU4_14:
    977          		{			
    978          			sprintf( (char *)Display_Buff,"  < 스피커볼륨 >       " );
   \                     ??Display_49:
   \   00001300   ....               LDR.N    R1,??DataTable157_60
   \   00001302   ....               LDR.N    R0,??DataTable157_19
   \   00001304   ........           BL       sprintf
    979          			GLcd_PutString(0,0,Display_Buff,1);
   \   00001308   0123               MOVS     R3,#+1
   \   0000130A   ....               LDR.N    R2,??DataTable157_19
   \   0000130C   0021               MOVS     R1,#+0
   \   0000130E   0020               MOVS     R0,#+0
   \   00001310   ........           BL       GLcd_PutString
    980          			sprintf( (char *)Display_Buff,"    [ %03d %% ]      ",SFLASH_Memory.Voice_Volume );		  
   \   00001314   ....               LDR.N    R0,??DataTable157_22
   \   00001316   90F8A320           LDRB     R2,[R0, #+163]
   \   0000131A   ....               LDR.N    R1,??DataTable157_61
   \   0000131C   ....               LDR.N    R0,??DataTable157_19
   \   0000131E   ........           BL       sprintf
    981          			GLcd_PutString(0,16,Display_Buff,1);          
   \   00001322   0123               MOVS     R3,#+1
   \   00001324   ....               LDR.N    R2,??DataTable157_19
   \   00001326   1021               MOVS     R1,#+16
   \   00001328   0020               MOVS     R0,#+0
   \   0000132A   ........           BL       GLcd_PutString
    982          			
    983          		}  	// end of DIS_MENU4_14
    984          		break;	  
   \   0000132E   B1E0               B.N      ??Display_55
    985          	case DISP_MENU4_15:
    986          		{			
    987          			if( Input_Mode == 0 )
   \                     ??Display_50:
   \   00001330   1248               LDR.N    R0,??Display_62+0x14
   \   00001332   0078               LDRB     R0,[R0, #+0]
   \   00001334   0028               CMP      R0,#+0
   \   00001336   29D1               BNE.N    ??Display_114
    988          			{
    989          				sprintf( (char *)Display_Buff,"  < 키입력수정 >       " );
   \   00001338   ....               LDR.N    R1,??DataTable157_62
   \   0000133A   ....               LDR.N    R0,??DataTable157_19
   \   0000133C   ........           BL       sprintf
    990          				GLcd_PutString(0,0,Display_Buff,1);		  
   \   00001340   0123               MOVS     R3,#+1
   \   00001342   ....               LDR.N    R2,??DataTable157_19
   \   00001344   0021               MOVS     R1,#+0
   \   00001346   0020               MOVS     R0,#+0
   \   00001348   ........           BL       GLcd_PutString
    991          				sprintf( (char *)Display_Buff,"IO를변경하려면 OK" );		  
   \   0000134C   ....               LDR.N    R1,??DataTable157_63
   \   0000134E   ....               LDR.N    R0,??DataTable157_19
   \   00001350   ........           BL       sprintf
    992          				GLcd_PutString(0,16,Display_Buff,1);          
   \   00001354   0123               MOVS     R3,#+1
   \   00001356   ....               LDR.N    R2,??DataTable157_19
   \   00001358   1021               MOVS     R1,#+16
   \   0000135A   0020               MOVS     R0,#+0
   \   0000135C   ........           BL       GLcd_PutString
    993          				
    994          				IOReverse_Count = 0;			  
   \   00001360   ....               LDR.N    R0,??DataTable157_64
   \   00001362   0021               MOVS     R1,#+0
   \   00001364   0170               STRB     R1,[R0, #+0]
   \   00001366   13E0               B.N      ??Display_115
   \                     ??Display_62:
   \   00001368   ........           DC32     `?<Constant " 2. \\277\\356\\300\\374\\300\\332\\274\\2`
   \   0000136C   ........           DC32     `?<Constant "  < \\273\\347\\277\\353\\300\\332\\270\\3`
   \   00001370   ........           DC32     `?<Constant " 3. \\302\\367\\267\\256\\271\\370\\310\\2`
   \   00001374   ........           DC32     `?<Constant "  < \\273\\347\\277\\353\\300\\332\\270\\3_1`
   \   00001378   ........           DC32     `?<Constant " 4. \\310\\257\\260\\346\\274\\263\\301\\2`
   \   0000137C   ........           DC32     Input_Mode
   \   00001380   ........           DC32     `?<Constant " 5. \\306\\337\\277\\376\\276\\356\\276\\3`
   \   00001384   ........           DC32     `?<Constant "[OK]\\271\\366\\306\\260\\300\\273\\264\\2`
   \   00001388   ........           DC32     `?<Constant "\\276\\367\\265\\245\\300\\314\\306\\256\\2`
    995          			}
    996          			else
    997          				InputIO_Reverse_View();
   \                     ??Display_114:
   \   0000138C   ........           BL       InputIO_Reverse_View
    998          			
    999          		}  	// end of DIS_MENU4_15
   1000          		break;	 	  
   \                     ??Display_115:
   \   00001390   80E0               B.N      ??Display_55
   1001          	case DISP_MENU4_16:
   1002          		{			
   1003                         sprintf( (char *)Display_Buff,"< GPS 차고지설정 >    " );
   \                     ??Display_51:
   \   00001392   ....               LDR.N    R1,??DataTable157_65
   \   00001394   ....               LDR.N    R0,??DataTable157_19
   \   00001396   ........           BL       sprintf
   1004                         GLcd_PutString(0,0,Display_Buff,1);		  
   \   0000139A   0123               MOVS     R3,#+1
   \   0000139C   ....               LDR.N    R2,??DataTable157_19
   \   0000139E   0021               MOVS     R1,#+0
   \   000013A0   0020               MOVS     R0,#+0
   \   000013A2   ........           BL       GLcd_PutString
   1005                         sprintf( (char *)Display_Buff,"차고지를설정 - OK" );		  
   \   000013A6   ....               LDR.N    R1,??DataTable157_66
   \   000013A8   ....               LDR.N    R0,??DataTable157_19
   \   000013AA   ........           BL       sprintf
   1006                         GLcd_PutString(0,16,Display_Buff,1);           		
   \   000013AE   0123               MOVS     R3,#+1
   \   000013B0   ....               LDR.N    R2,??DataTable157_19
   \   000013B2   1021               MOVS     R1,#+16
   \   000013B4   0020               MOVS     R0,#+0
   \   000013B6   ........           BL       GLcd_PutString
   1007          		}  	// end of DIS_MENU4_16
   1008          		break;	 	  
   \   000013BA   6BE0               B.N      ??Display_55
   1009          	case DISP_MENU4_17:
   1010          		{			
   1011          			sprintf( (char *)Display_Buff,"< EMS 동작범위설정 > " );
   \                     ??Display_52:
   \   000013BC   ....               LDR.N    R1,??DataTable157_67
   \   000013BE   ....               LDR.N    R0,??DataTable157_19
   \   000013C0   ........           BL       sprintf
   1012          			GLcd_PutString(0,0,Display_Buff,1);		  
   \   000013C4   0123               MOVS     R3,#+1
   \   000013C6   ....               LDR.N    R2,??DataTable157_19
   \   000013C8   0021               MOVS     R1,#+0
   \   000013CA   0020               MOVS     R0,#+0
   \   000013CC   ........           BL       GLcd_PutString
   1013                              
   1014          			sprintf( (char *)Display_Buff,"%s    ",EMS_WORD[SFLASH_Memory.GPS_EMS_Use] );		  
   \   000013D0   ....               LDR.N    R0,??DataTable157_22
   \   000013D2   90F88900           LDRB     R0,[R0, #+137]
   \   000013D6   ....               LDR.N    R1,??DataTable157_68
   \   000013D8   51F82020           LDR      R2,[R1, R0, LSL #+2]
   \   000013DC   ....               LDR.N    R1,??DataTable157_69
   \   000013DE   ....               LDR.N    R0,??DataTable157_19
   \   000013E0   ........           BL       sprintf
   1015          			GLcd_PutString(0,16,Display_Buff,1);					
   \   000013E4   0123               MOVS     R3,#+1
   \   000013E6   ....               LDR.N    R2,??DataTable157_19
   \   000013E8   1021               MOVS     R1,#+16
   \   000013EA   0020               MOVS     R0,#+0
   \   000013EC   ........           BL       GLcd_PutString
   1016          		}  	// end of DIS_MENU4_16
   1017          		break;	 
   \   000013F0   50E0               B.N      ??Display_55
   1018          	case DISP_MENU4_18:
   1019          		{			
   1020          			sprintf( (char *)Display_Buff,"< 스타트모터수정 > " );
   \                     ??Display_53:
   \   000013F2   ....               LDR.N    R1,??DataTable157_70
   \   000013F4   ....               LDR.N    R0,??DataTable157_19
   \   000013F6   ........           BL       sprintf
   1021          			GLcd_PutString(0,0,Display_Buff,1);		  
   \   000013FA   0123               MOVS     R3,#+1
   \   000013FC   ....               LDR.N    R2,??DataTable157_19
   \   000013FE   0021               MOVS     R1,#+0
   \   00001400   0020               MOVS     R0,#+0
   \   00001402   ........           BL       GLcd_PutString
   1022                              
   1023          			if( Input_Mode == 0  )
   \   00001406   ....               LDR.N    R0,??DataTable157_71
   \   00001408   0078               LDRB     R0,[R0, #+0]
   \   0000140A   0028               CMP      R0,#+0
   \   0000140C   07D1               BNE.N    ??Display_116
   1024          			{
   1025          				sprintf( (char *)Display_Buff,  "     [%06d]     ",Info.Total_StartCount );
   \   0000140E   ....               LDR.N    R0,??DataTable157_72
   \   00001410   D0F82620           LDR      R2,[R0, #+38]
   \   00001414   ....               LDR.N    R1,??DataTable157_73
   \   00001416   ....               LDR.N    R0,??DataTable157_19
   \   00001418   ........           BL       sprintf
   \   0000141C   04E0               B.N      ??Display_117
   1026                                   }
   1027          			else
   1028          			{
   1029          				sprintf( (char *)Display_Buff,  "     [%06s]     ",Input_Word);	
   \                     ??Display_116:
   \   0000141E   ....               LDR.N    R2,??DataTable157_32
   \   00001420   ....               LDR.N    R1,??DataTable157_74
   \   00001422   ....               LDR.N    R0,??DataTable157_19
   \   00001424   ........           BL       sprintf
   1030          			}   		
   1031                         GLcd_PutString(0,16,Display_Buff,1);					
   \                     ??Display_117:
   \   00001428   0123               MOVS     R3,#+1
   \   0000142A   ....               LDR.N    R2,??DataTable157_19
   \   0000142C   1021               MOVS     R1,#+16
   \   0000142E   0020               MOVS     R0,#+0
   \   00001430   ........           BL       GLcd_PutString
   1032          		}  	// end of DIS_MENU4_16
   1033          		break;	 	
   \   00001434   2EE0               B.N      ??Display_55
   1034          	case DISP_MENU4_19:
   1035          		{			
   1036          			sprintf( (char *)Display_Buff,"< EMS 동작속도설정 > " );
   \                     ??Display_54:
   \   00001436   ....               LDR.N    R1,??DataTable157_75
   \   00001438   ....               LDR.N    R0,??DataTable157_19
   \   0000143A   ........           BL       sprintf
   1037          			GLcd_PutString(0,0,Display_Buff,1);		  
   \   0000143E   0123               MOVS     R3,#+1
   \   00001440   ....               LDR.N    R2,??DataTable157_19
   \   00001442   0021               MOVS     R1,#+0
   \   00001444   0020               MOVS     R0,#+0
   \   00001446   ........           BL       GLcd_PutString
   1038                              
   1039          			sprintf( (char *)Display_Buff,"    [ %04d km ]    ", SFLASH_Memory.EMS.LimitSpeed );	        
   \   0000144A   ....               LDR.N    R0,??DataTable157_22
   \   0000144C   90F89320           LDRB     R2,[R0, #+147]
   \   00001450   ....               LDR.N    R1,??DataTable157_76
   \   00001452   ....               LDR.N    R0,??DataTable157_19
   \   00001454   ........           BL       sprintf
   1040            
   1041          			GLcd_PutString(0,16,Display_Buff,1);					
   \   00001458   0123               MOVS     R3,#+1
   \   0000145A   ....               LDR.N    R2,??DataTable157_19
   \   0000145C   1021               MOVS     R1,#+16
   \   0000145E   0020               MOVS     R0,#+0
   \   00001460   ........           BL       GLcd_PutString
   1042          		}  	// end of DIS_MENU4_16
   1043          		break;	 	
   \   00001464   16E0               B.N      ??Display_55
   1044          	case DISP_MENU8:
   1045          		{
   1046          			
   1047          			sprintf( (char *)Display_Buff,"< 사용자메뉴 > ");
   \                     ??Display_28:
   \   00001466   ....               LDR.N    R1,??DataTable157_77
   \   00001468   ....               LDR.N    R0,??DataTable157_19
   \   0000146A   ........           BL       sprintf
   1048          			GLcd_PutString(0,0,Display_Buff,1);
   \   0000146E   0123               MOVS     R3,#+1
   \   00001470   ....               LDR.N    R2,??DataTable157_19
   \   00001472   0021               MOVS     R1,#+0
   \   00001474   0020               MOVS     R0,#+0
   \   00001476   ........           BL       GLcd_PutString
   1049          			sprintf( (char *)Display_Buff,"8 영상펌웨어   ");
   \   0000147A   ....               LDR.N    R1,??DataTable157_78
   \   0000147C   ....               LDR.N    R0,??DataTable157_19
   \   0000147E   ........           BL       sprintf
   1050          			GLcd_PutString(0,16,Display_Buff,1);	
   \   00001482   0123               MOVS     R3,#+1
   \   00001484   ....               LDR.N    R2,??DataTable157_19
   \   00001486   1021               MOVS     R1,#+16
   \   00001488   0020               MOVS     R0,#+0
   \   0000148A   ........           BL       GLcd_PutString
   1051          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   0000148E   ....               LDR.N    R0,??DataTable157_20
   \   00001490   0221               MOVS     R1,#+2
   \   00001492   8171               STRB     R1,[R0, #+6]
   1052          			
   1053          		}  // end of DISP_MENU2
   1054          		break;               	  
   1055          		
   1056          		/*          case DISP_NONE:
   1057          		{
   1058          		DisplayInfo.Mode = DISPMODE_VIEW;
   1059          		DisplayInfo.Next_View = DISP_IDLE;
   1060               }
   1061          		*/           
   1062          	}// end Switch
   1063               /*
   1064               if(LOGWRITE)
   1065               {
   1066               sprintf( (char *)Buffer,"Graphic Refresh\r\n");
   1067               Write_Log(Buffer, NORMAL_LOG);
   1068          }
   1069               */
   1070          }
   \                     ??Display_55:
   \                     ??Display_2:
   \   00001494   05B0               ADD      SP,SP,#+20
   \   00001496   00BD               POP      {PC}             ;; return
   \                     ??Display_67:
   \   00001498   ........           DC32     `?<Constant " 6. \\273\\347\\277\\356\\265\\345\\276\\3`
   \   0000149C   ........           DC32     `?<Constant "- \\300\\372\\300\\345\\277\\317\\267\\341`
   \   000014A0   ........           DC32     `?<Constant " 7. \\306\\304\\266\\363\\271\\314\\305\\3`

   \                                 In section .bss, align 2
   \                     ??Display_Time:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
   \                     ??Led_Flag:
   \   00000000                      DS8 1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable153:
   \   00000000   25732000           DC8      "%s "

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156:
   \   00000000   00180240           DC32     0x40021800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_1:
   \   00000000   ........           DC32     EMSOn_Check

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_2:
   \   00000000   ........           DC32     EMS_ON_WORD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_3:
   \   00000000   ........           DC32     Display_Buff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_4:
   \   00000000   ........           DC32     EMSOff_Check

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_5:
   \   00000000   ........           DC32     EMS_OFF_WORD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_6:
   \   00000000   ........           DC32     Info

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_7:
   \   00000000   ........           DC32     `?<Constant "BREAK ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_8:
   \   00000000   ........           DC32     `?<Constant "GEAR  ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_9:
   \   00000000   ........           DC32     `?<Constant "PARKING">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_10:
   \   00000000   ........           DC32     `?<Constant "RLIGHT">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_11:
   \   00000000   ........           DC32     `?<Constant "LLIGHT">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_12:
   \   00000000   ........           DC32     `?<Constant "F_DOOR">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_13:
   \   00000000   ........           DC32     `?<Constant "R_DOOR">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_14:
   \   00000000   ........           DC32     `?<Constant "KEY_ON">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_15:
   \   00000000   ........           DC32     INPUT_REVERSE_DATA

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_16:
   \   00000000   ........           DC32     IOReverse_Count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_17:
   \   00000000   ........           DC32     Toogle_Cursor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_18:
   \   00000000   00002041           DC32     0x41200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_19:
   \   00000000   ........           DC32     Buffer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_20:
   \   00000000   00007A44           DC32     0x447a0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_21:
   \   00000000   ........           DC32     Wait_x

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_22:
   \   00000000   ........           DC32     Wait_y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_23:
   \   00000000   ........           DC32     LCD_WaitString

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "BREAK ">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   425245414B20       DC8 66, 82, 69, 65, 75, 32, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "GEAR  ">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   474541522020       DC8 71, 69, 65, 82, 32, 32, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "PARKING">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   5041524B494E       DC8 80, 65, 82, 75, 73, 78, 71, 0
   \              4700        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "RLIGHT">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   524C49474854       DC8 82, 76, 73, 71, 72, 84, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "LLIGHT">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   4C4C49474854       DC8 76, 76, 73, 71, 72, 84, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "F_DOOR">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   465F444F4F52       DC8 70, 95, 68, 79, 79, 82, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "R_DOOR">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   525F444F4F52       DC8 82, 95, 68, 79, 79, 82, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "KEY_ON">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   4B45595F4F4E       DC8 75, 69, 89, 95, 79, 78, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "LPGP %04.1f">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   4C5047502025       DC8 76, 80, 71, 80, 32, 37, 48, 52, 46, 49
   \              30342E31    
   \   0000000A   6600               DC8 102, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "AirP %04.1f">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   416972502025       DC8 65, 105, 114, 80, 32, 37, 48, 52, 46, 49
   \              30342E31    
   \   0000000A   6600               DC8 102, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "WTmp %04.1f">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   57546D702025       DC8 87, 84, 109, 112, 32, 37, 48, 52, 46, 49
   \              30342E31    
   \   0000000A   6600               DC8 102, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Batt %04.1f">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   426174742025       DC8 66, 97, 116, 116, 32, 37, 48, 52, 46, 49
   \              30342E31    
   \   0000000A   6600               DC8 102, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Fuel %04.1f">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   4675656C2025       DC8 70, 117, 101, 108, 32, 37, 48, 52, 46, 49
   \              30342E31    
   \   0000000A   6600               DC8 102, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Accl %04.1f">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   4163636C2025       DC8 65, 99, 99, 108, 32, 37, 48, 52, 46, 49
   \              30342E31    
   \   0000000A   6600               DC8 102, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "   - TEAHO TECH -   ">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   2020202D2054       DC8 32, 32, 32, 45, 32, 84, 69, 65, 72, 79
   \              4541484F    
   \   0000000A   205445434820       DC8 32, 84, 69, 67, 72, 32, 45, 32, 32, 32
   \              2D202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " EMS_SYSTEM V000021 ">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20454D535F53       DC8 32, 69, 77, 83, 95, 83, 89, 83, 84, 69
   \              59535445    
   \   0000000A   4D2056303030       DC8 77, 32, 86, 48, 48, 48, 48, 50, 49, 32
   \              30323120    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  DEMO PROGRAM v1 ">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   202044454D4F       DC8 32, 32, 68, 69, 77, 79, 32, 80, 82, 79
   \              2050524F    
   \   0000000A   4752414D2076       DC8 71, 82, 65, 77, 32, 118, 49, 32, 0, 0
   \              31200000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  WIFI_RELAY TEST  ">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   202057494649       DC8 32, 32, 87, 73, 70, 73, 95, 82, 69, 76
   \              5F52454C    
   \   0000000A   415920544553       DC8 65, 89, 32, 84, 69, 83, 84, 32, 32, 0
   \              54202000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\300\\317\\300\\317\\277\\356\\307\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20C0CF       DC8 32, 32, 60, 32, 192, 207, 192, 207, 191, 238
   \              C0CFBFEE    
   \   0000000A   C7E0BDC3B0A3       DC8 199, 224, 189, 195, 176, 163, 32, 62, 32, 32
   \              203E2020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "      [ %02d:%02d ]  ...">`:
   \   00000000                      ; Initializer data, 28 bytes
   \   00000000   202020202020       DC8 32, 32, 32, 32, 32, 32, 91, 32, 37, 48
   \              5B202530    
   \   0000000A   32643A253032       DC8 50, 100, 58, 37, 48, 50, 100, 32, 93, 32
   \              64205D20    
   \   00000014   202020202000       DC8 32, 32, 32, 32, 32, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\300\\317\\301\\326\\307\\340      %05d`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   C0CFC1D6C7E0       DC8 192, 207, 193, 214, 199, 224, 32, 32, 32, 32
   \              20202020    
   \   0000000A   202025303564       DC8 32, 32, 37, 48, 53, 100, 32, 107, 109, 0
   \              206B6D00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\303\\321\\301\\326\\307\\340    %07d k`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   C3D1C1D6C7E0       DC8 195, 209, 193, 214, 199, 224, 32, 32, 32, 32
   \              20202020    
   \   0000000A   25303764206B       DC8 37, 48, 55, 100, 32, 107, 109, 0, 0, 0
   \              6D000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\277\\356\\300\\374\\300\\332\\304\\3`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20203C20BFEE       DC8 32, 32, 60, 32, 191, 238, 192, 252, 192, 218
   \              C0FCC0DA    
   \   0000000A   C4DAB5E5203E       DC8 196, 218, 181, 229, 32, 62, 32, 32, 0, 0
   \              20200000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  \\277\\356\\300\\374\\300\\332\\274\\261`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   2020BFEEC0FC       DC8 32, 32, 191, 238, 192, 252, 192, 218, 188, 177
   \              C0DABCB1    
   \   0000000A   C5C3BEC8B5CA       DC8 197, 195, 190, 200, 181, 202, 32, 32, 32, 32
   \              20202020    
   \   00000014   20000000           DC8 32, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "[%018s]">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   5B2530313873       DC8 91, 37, 48, 49, 56, 115, 93, 0
   \              5D00        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\261\\342\\277\\357\\261\\342\\274\\2`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20203C20B1E2       DC8 32, 32, 60, 32, 177, 226, 191, 239, 177, 226
   \              BFEFB1E2    
   \   0000000A   BCBCC6C3203E       DC8 188, 188, 198, 195, 32, 62, 32, 32, 0, 0
   \              20200000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "   [ X=%-2d  Y=%-2d ]  ">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   2020205B2058       DC8 32, 32, 32, 91, 32, 88, 61, 37, 45, 50
   \              3D252D32    
   \   0000000A   642020593D25       DC8 100, 32, 32, 89, 61, 37, 45, 50, 100, 32
   \              2D326420    
   \   00000014   5D202000           DC8 93, 32, 32, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "< \\275\\303\\265\\277\\270\\360\\305\\315`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   3C20BDC3B5BF       DC8 60, 32, 189, 195, 181, 191, 184, 240, 197, 205
   \              B8F0C5CD    
   \   0000000A   B4A9C0FBC8BD       DC8 180, 169, 192, 251, 200, 189, 188, 246, 32, 62
   \              BCF6203E    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "     [ %06d ]   ">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20202020205B       DC8 32, 32, 32, 32, 32, 91, 32, 37, 48, 54
   \              20253036    
   \   0000000A   64205D202020       DC8 100, 32, 93, 32, 32, 32, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "GPS-X %03d.%06d">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   4750532D5820       DC8 71, 80, 83, 45, 88, 32, 37, 48, 51, 100
   \              25303364    
   \   0000000A   2E2530366400       DC8 46, 37, 48, 54, 100, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "GPS-Y %03d.%06d">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   4750532D5920       DC8 71, 80, 83, 45, 89, 32, 37, 48, 51, 100
   \              25303364    
   \   0000000A   2E2530366400       DC8 46, 37, 48, 54, 100, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\306\\337\\277\\376\\276\\356\\271\\3`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20203C20C6DF       DC8 32, 32, 60, 32, 198, 223, 191, 254, 190, 238
   \              BFFEBEEE    
   \   0000000A   B9F6C1AF203E       DC8 185, 246, 193, 175, 32, 62, 32, 32, 0, 0
   \              20200000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "   [ %09s ]   ">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   2020205B2025       DC8 32, 32, 32, 91, 32, 37, 48, 57, 115, 32
   \              30397320    
   \   0000000A   5D2020200000       DC8 93, 32, 32, 32, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "111219-01">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   313131323139       DC8 49, 49, 49, 50, 49, 57, 45, 48, 49, 0
   \              2D303100    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\307\\374\\275\\304\\275\\302\\300\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20C7FC       DC8 32, 32, 60, 32, 199, 252, 189, 196, 189, 194
   \              BDC4BDC2    
   \   0000000A   C0CEB9F8C8A3       DC8 192, 206, 185, 248, 200, 163, 32, 62, 32, 32
   \              203E2020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "   [ %010s ]   ">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   2020205B2025       DC8 32, 32, 32, 91, 32, 37, 48, 49, 48, 115
   \              30313073    
   \   0000000A   205D20202000       DC8 32, 93, 32, 32, 32, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\301\\246\\307\\260\\300\\317\\267\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20C1A6       DC8 32, 32, 60, 32, 193, 166, 199, 176, 192, 207
   \              C7B0C0CF    
   \   0000000A   B7C3B9F8C8A3       DC8 183, 195, 185, 248, 200, 163, 32, 62, 32, 32
   \              203E2020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " [ %014s ]   ">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   205B20253031       DC8 32, 91, 32, 37, 48, 49, 52, 115, 32, 93
   \              3473205D    
   \   0000000A   202020000000       DC8 32, 32, 32, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\273\\347\\277\\353\\300\\332\\270\\3`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20203C20BBE7       DC8 32, 32, 60, 32, 187, 231, 191, 235, 192, 218
   \              BFEBC0DA    
   \   0000000A   B8DEB4BA203E       DC8 184, 222, 180, 186, 32, 62, 32, 32, 32, 0
   \              20202000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " 1. \\300\\332\\267\\341\\300\\372\\300\\3`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20312E20C0DA       DC8 32, 49, 46, 32, 192, 218, 183, 225, 192, 250
   \              B7E1C0FA    
   \   0000000A   C0E520202020       DC8 192, 229, 32, 32, 32, 32, 32, 32, 32, 0
   \              20202000    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157:
   \   00000000   ........           DC32     `?<Constant "[OK]\\264\\251\\270\\243\\270\\351\\275\\3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_1:
   \   00000000   ........           DC32     `?<Constant "\\276\\367\\265\\245\\300\\314\\306\\256\\3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_2:
   \   00000000   ........           DC32     `?<Constant "WIFI\\276\\367\\265\\245\\300\\314\\306\\2`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_3:
   \   00000000   ........           DC32     `?<Constant "  < \\300\\372\\300\\345  \\270\\336\\264`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_4:
   \   00000000   ........           DC32     `?<Constant "- \\274\\261\\305\\303\\271\\351\\276\\367`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_5:
   \   00000000   ........           DC32     VIEW_Header

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_6:
   \   00000000   ........           DC32     `?<Constant " [%03d]-%02d%02d%02d ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_7:
   \   00000000   ........           DC32     `?<Constant "- DataSave        ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_8:
   \   00000000   ........           DC32     DISP_WORD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_9:
   \   00000000   ........           DC32     `?<Constant "  < \\300\\372\\300\\345  \\270\\336\\264_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_10:
   \   00000000   ........           DC32     `?<Constant "- \\261\\342\\260\\243\\271\\351\\276\\367`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_11:
   \   00000000   ........           DC32     Input_Index_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_12:
   \   00000000   ........           DC32     BAKUP_WORD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_13:
   \   00000000   ........           DC32     `?<Constant "- \\300\\372\\300\\345\\301\\337\\300\\324`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_14:
   \   00000000   ........           DC32     `?<Constant "- \\300\\374\\303\\274\\271\\351\\276\\367`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_15:
   \   00000000   ........           DC32     `?<Constant "- \\300\\374\\303\\274\\271\\351\\276\\367_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_16:
   \   00000000   ........           DC32     `?<Constant "- \\300\\372\\300\\345\\301\\337\\300\\324_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_17:
   \   00000000   ........           DC32     `?<Constant "- \\303\\346\\265\\271\\265\\245\\300\\314`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_18:
   \   00000000   ........           DC32     `?<Constant "- \\300\\374\\303\\274\\300\\372\\300\\345`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_19:
   \   00000000   ........           DC32     Display_Buff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_20:
   \   00000000   ........           DC32     DisplayInfo

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_21:
   \   00000000   ........           DC32     `?<Constant "  < \\277\\356\\300\\374\\300\\332\\274\\2`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_22:
   \   00000000   ........           DC32     SFLASH_Memory

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_23:
   \   00000000   ........           DC32     `?<Constant "  %s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_24:
   \   00000000   ........           DC32     `?<Constant "  < \\302\\367\\267\\256  \\271\\370\\310`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_25:
   \   00000000   ........           DC32     SFLASH_CarInfo+0x50

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_26:
   \   00000000   ........           DC32     `?<Constant "  < \\276\\317\\310\\243\\304\\332\\265\\3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_27:
   \   00000000   ........           DC32     Pass_Index

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_28:
   \   00000000   ........           DC32     `?<Constant "     [ %6s ]  ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_29:
   \   00000000   ........           DC32     `?<Constant "  < \\277\\356\\300\\374\\300\\332  \\272`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_30:
   \   00000000   ........           DC32     `?<Constant "- \\277\\356\\300\\374\\300\\332\\260\\241`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_31:
   \   00000000   ........           DC32     `?<Constant "%d-%018s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_32:
   \   00000000   ........           DC32     Input_Word

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_33:
   \   00000000   ........           DC32     `?<Constant "  < \\271\\366\\275\\272\\302\\367\\267\\2`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_34:
   \   00000000   ........           DC32     `?<Constant "    < \\307\\366\\264\\353\\271\\366\\275`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_35:
   \   00000000   ........           DC32     `?<Constant "  < \\264\\353\\277\\354\\275\\305\\307\\3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_36:
   \   00000000   ........           DC32     `?<Constant "  < \\264\\353\\277\\354\\261\\270\\307\\3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_37:
   \   00000000   ........           DC32     `?<Constant "  < \\277\\271\\277\\334\\274\\263\\301\\2`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_38:
   \   00000000   ........           DC32     `?<Constant "  < \\274\\323\\265\\265\\273\\363\\274\\3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_39:
   \   00000000   ........           DC32     `?<Constant "      [%06d]     ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_40:
   \   00000000   ........           DC32     `?<Constant "      [%06s]    ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_41:
   \   00000000   ........           DC32     `?<Constant "  < RPM \\273\\363\\274\\366\\272\\257\\2`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_42:
   \   00000000   ........           DC32     `?<Constant "      [%06s]     ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_43:
   \   00000000   ........           DC32     `?<Constant "  < \\274\\323\\265\\265\\261\\342\\301\\3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_44:
   \   00000000   00002440           DC32     0x40240000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_45:
   \   00000000   ........           DC32     `?<Constant "    [ %4.1f V ]     ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_46:
   \   00000000   ........           DC32     `?<Constant "  < RPM \\261\\342\\301\\330\\300\\374\\2`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_47:
   \   00000000   ........           DC32     `?<Constant "  < \\277\\241\\276\\356\\276\\320  \\300`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_48:
   \   00000000   00408F40           DC32     0x408f4000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_49:
   \   00000000   ........           DC32     `?<Constant "  < \\263\\303\\260\\242\\274\\366  \\277`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_50:
   \   00000000   ........           DC32     `?<Constant "  < \\260\\372\\274\\323  \\261\\342\\301`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_51:
   \   00000000   ........           DC32     `?<Constant "     [ %03d km ]     ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_52:
   \   00000000   ........           DC32     `?<Constant "  < \\261\\336\\301\\244\\301\\366\\261\\3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_53:
   \   00000000   ........           DC32     `?<Constant "  < \\261\\336\\260\\241\\274\\323\\261\\3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_54:
   \   00000000   ........           DC32     `?<Constant "  < \\260\\372\\272\\316\\307\\317\\261\\3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_55:
   \   00000000   ........           DC32     `?<Constant "    [ %04d rpm ]    ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_56:
   \   00000000   ........           DC32     `?<Constant "  < \\261\\342\\277\\357\\261\\342\\274\\2_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_57:
   \   00000000   ........           DC32     TiltInfo

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_58:
   \   00000000   ........           DC32     `?<Constant "     X=%-2d  Y=%-2d   ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_59:
   \   00000000   ........           DC32     `?<Constant "\\261\\342\\277\\357\\261\\342\\274\\274\\3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_60:
   \   00000000   ........           DC32     `?<Constant "  < \\275\\272\\307\\307\\304\\277\\272\\2`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_61:
   \   00000000   ........           DC32     `?<Constant "    [ %03d %% ]      ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_62:
   \   00000000   ........           DC32     `?<Constant "  < \\305\\260\\300\\324\\267\\302\\274\\3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_63:
   \   00000000   ........           DC32     `?<Constant "IO\\270\\246\\272\\257\\260\\346\\307\\317`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_64:
   \   00000000   ........           DC32     IOReverse_Count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_65:
   \   00000000   ........           DC32     `?<Constant "< GPS \\302\\367\\260\\355\\301\\366\\274`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_66:
   \   00000000   ........           DC32     `?<Constant "\\302\\367\\260\\355\\301\\366\\270\\246\\2`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_67:
   \   00000000   ........           DC32     `?<Constant "< EMS \\265\\277\\300\\333\\271\\374\\300`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_68:
   \   00000000   ........           DC32     EMS_WORD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_69:
   \   00000000   ........           DC32     `?<Constant "%s    ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_70:
   \   00000000   ........           DC32     `?<Constant "< \\275\\272\\305\\270\\306\\256\\270\\360`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_71:
   \   00000000   ........           DC32     Input_Mode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_72:
   \   00000000   ........           DC32     Info

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_73:
   \   00000000   ........           DC32     `?<Constant "     [%06d]     ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_74:
   \   00000000   ........           DC32     `?<Constant "     [%06s]     ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_75:
   \   00000000   ........           DC32     `?<Constant "< EMS \\265\\277\\300\\333\\274\\323\\265`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_76:
   \   00000000   ........           DC32     `?<Constant "    [ %04d km ]    ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_77:
   \   00000000   ........           DC32     `?<Constant "< \\273\\347\\277\\353\\300\\332\\270\\336`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_78:
   \   00000000   ........           DC32     `?<Constant "8 \\277\\265\\273\\363\\306\\337\\277\\376`

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\277\\300\\264\\303\\271\\351\\276\\367`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   2D20BFC0B4C3       DC8 45, 32, 191, 192, 180, 195, 185, 233, 190, 247
   \              B9E9BEF7    
   \   0000000A   202000000000       DC8 32, 32, 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\307\\317\\267\\347\\271\\351\\276\\367`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   2D20C7CFB7E7       DC8 45, 32, 199, 207, 183, 231, 185, 233, 190, 247
   \              B9E9BEF7    
   \   0000000A   202000000000       DC8 32, 32, 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " 2. \\277\\356\\300\\374\\300\\332\\274\\2`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20322E20BFEE       DC8 32, 50, 46, 32, 191, 238, 192, 252, 192, 218
   \              C0FCC0DA    
   \   0000000A   BCB1C5C32020       DC8 188, 177, 197, 195, 32, 32, 32, 32, 32, 0
   \              20202000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\300\\317\\301\\326\\300\\317\\271\\351`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   2D20C0CFC1D6       DC8 45, 32, 192, 207, 193, 214, 192, 207, 185, 233
   \              C0CFB9E9    
   \   0000000A   BEF700000000       DC8 190, 247, 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\307\\321\\264\\336\\271\\351\\276\\367`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   2D20C7D1B4DE       DC8 45, 32, 199, 209, 180, 222, 185, 233, 190, 247
   \              B9E9BEF7    
   \   0000000A   202000000000       DC8 32, 32, 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\274\\274\\264\\336\\271\\351\\276\\367`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   2D20BCBCB4DE       DC8 45, 32, 188, 188, 180, 222, 185, 233, 190, 247
   \              B9E9BEF7    
   \   0000000A   202000000000       DC8 32, 32, 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " 3. \\302\\367\\267\\256\\271\\370\\310\\2`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20332E20C2F7       DC8 32, 51, 46, 32, 194, 247, 183, 174, 185, 248
   \              B7AEB9F8    
   \   0000000A   C8A320202020       DC8 200, 163, 32, 32, 32, 32, 32, 32, 32, 0
   \              20202000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\273\\347\\277\\353\\300\\332\\270\\3_1`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20BBE7       DC8 32, 32, 60, 32, 187, 231, 191, 235, 192, 218
   \              BFEBC0DA    
   \   0000000A   B8DEB4BA203E       DC8 184, 222, 180, 186, 32, 62, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " 4. \\310\\257\\260\\346\\274\\263\\301\\2`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20342E20C8AF       DC8 32, 52, 46, 32, 200, 175, 176, 230, 188, 179
   \              B0E6BCB3    
   \   0000000A   C1A420202020       DC8 193, 164, 32, 32, 32, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\300\\374\\303\\274\\263\\353\\274\\261`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   2D20C0FCC3BC       DC8 45, 32, 192, 252, 195, 188, 179, 235, 188, 177
   \              B3EBBCB1    
   \   0000000A   B5BFC0DB2020       DC8 181, 191, 192, 219, 32, 32, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\302\\367\\260\\355\\301\\366\\265\\277`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   2D20C2F7B0ED       DC8 45, 32, 194, 247, 176, 237, 193, 246, 181, 191
   \              C1F6B5BF    
   \   0000000A   C0DB20202020       DC8 192, 219, 32, 32, 32, 32, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\265\\356\\267\\317\\261\\270\\260\\243`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   2D20B5EEB7CF       DC8 45, 32, 181, 238, 183, 207, 177, 184, 176, 163
   \              B1B8B0A3    
   \   0000000A   B5BFC0DB2020       DC8 181, 191, 192, 219, 32, 32, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " 5. \\306\\337\\277\\376\\276\\356\\276\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20352E20C6DF       DC8 32, 53, 46, 32, 198, 223, 191, 254, 190, 238
   \              BFFEBEEE    
   \   0000000A   BEF7B5A5C0CC       DC8 190, 247, 181, 165, 192, 204, 198, 174, 32, 32
   \              C6AE2020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "[OK]\\271\\366\\306\\260\\300\\273\\264\\2`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   5B4F4B5DB9F6       DC8 91, 79, 75, 93, 185, 246, 198, 176, 192, 187
   \              C6B0C0BB    
   \   0000000A   B4A9B8A3B8E9       DC8 180, 169, 184, 163, 184, 233, 189, 195, 192, 219
   \              BDC3C0DB    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\276\\367\\265\\245\\300\\314\\306\\256\\2`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   BEF7B5A5C0CC       DC8 190, 247, 181, 165, 192, 204, 198, 174, 189, 199
   \              C6AEBDC7    
   \   0000000A   C6D000000000       DC8 198, 208, 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "0.\\275\\303\\265\\277\\277\\302\\265\\277`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   302EBDC3B5BF       DC8 48, 46, 189, 195, 181, 191, 191, 194, 181, 191
   \              BFC2B5BF    
   \   0000000A   C0DBC1DF2020       DC8 192, 219, 193, 223, 32, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "1.\\277\\241\\304\\332\\271\\366\\306\\260`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   312EBFA1C4DA       DC8 49, 46, 191, 161, 196, 218, 185, 246, 198, 176
   \              B9F6C6B0    
   \   0000000A   C0CCBFC0C7C1       DC8 192, 204, 191, 192, 199, 193, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "2.\\275\\303\\265\\277\\305\\260\\277\\300`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   322EBDC3B5BF       DC8 50, 46, 189, 195, 181, 191, 197, 176, 191, 192
   \              C5B0BFC0    
   \   0000000A   C7C120202020       DC8 199, 193, 32, 32, 32, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "3. RPM\\300\\314\\300\\326\\300\\275    `:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   332E2052504D       DC8 51, 46, 32, 82, 80, 77, 192, 204, 192, 214
   \              C0CCC0D6    
   \   0000000A   C0BD20202020       DC8 192, 189, 32, 32, 32, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " 6. \\273\\347\\277\\356\\265\\345\\276\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20362E20BBE7       DC8 32, 54, 46, 32, 187, 231, 191, 238, 181, 229
   \              BFEEB5E5    
   \   0000000A   BEF7B5A5C0CC       DC8 190, 247, 181, 165, 192, 204, 198, 174, 32, 32
   \              C6AE2020    
   \   00000014   20000000           DC8 32, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "4. SPEED\\260\\241\\300\\326\\300\\275  `:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   342E20535045       DC8 52, 46, 32, 83, 80, 69, 69, 68, 176, 161
   \              4544B0A1    
   \   0000000A   C0D6C0BD2020       DC8 192, 214, 192, 189, 32, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\300\\372\\300\\345\\277\\317\\267\\341`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   2D20C0FAC0E5       DC8 45, 32, 192, 250, 192, 229, 191, 207, 183, 225
   \              BFCFB7E1    
   \   0000000A   C7DFBDC0B4CF       DC8 199, 223, 189, 192, 180, 207, 180, 217, 46, 32
   \              B4D92E20    
   \   00000014   20202000           DC8 32, 32, 32, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "5. GPS\\277\\241\\274\\323\\265\\265\\260`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   352E20475053       DC8 53, 46, 32, 71, 80, 83, 191, 161, 188, 211
   \              BFA1BCD3    
   \   0000000A   B5B5B0A12020       DC8 181, 181, 176, 161, 32, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "6.\\261\\342\\276\\356\\260\\241\\301\\337`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   362EB1E2BEEE       DC8 54, 46, 177, 226, 190, 238, 176, 161, 193, 223
   \              B0A1C1DF    
   \   0000000A   B8B320202020       DC8 184, 179, 32, 32, 32, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "7. 1\\303\\312\\260\\243\\300\\347\\275\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   372E2031C3CA       DC8 55, 46, 32, 49, 195, 202, 176, 163, 192, 231
   \              B0A3C0E7    
   \   0000000A   BDC3B5B5BDC7       DC8 189, 195, 181, 181, 189, 199, 198, 208, 199, 212
   \              C6D0C7D4    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "8.\\275\\303\\265\\277\\300\\347\\275\\303`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   382EBDC3B5BF       DC8 56, 46, 189, 195, 181, 191, 192, 231, 189, 195
   \              C0E7BDC3    
   \   0000000A   B5B5BDC3B0A3       DC8 181, 181, 189, 195, 176, 163, 32, 51, 195, 202
   \              2033C3CA    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "9. BREAK\\271\\342\\301\\366\\276\\312\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   392E20425245       DC8 57, 46, 32, 66, 82, 69, 65, 75, 185, 226
   \              414BB9E2    
   \   0000000A   C1F6BECAC0BD       DC8 193, 246, 190, 202, 192, 189, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "10.BREAK\\266\\347\\301\\366\\276\\312\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   31302E425245       DC8 49, 48, 46, 66, 82, 69, 65, 75, 182, 231
   \              414BB6E7    
   \   0000000A   C1F6BECAC0BD       DC8 193, 246, 190, 202, 192, 189, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "11. \\270\\360\\265\\347\\301\\266\\260\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   31312E20B8F0       DC8 49, 49, 46, 32, 184, 240, 181, 231, 193, 182
   \              B5E7C1B6    
   \   0000000A   B0C7BFCFB7E1       DC8 176, 199, 191, 207, 183, 225, 32, 49, 195, 202
   \              2031C3CA    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "12. \\260\\370\\310\\270\\300\\374\\301\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   31322E20B0F8       DC8 49, 50, 46, 32, 176, 248, 200, 184, 192, 252
   \              C8B8C0FC    
   \   0000000A   C1F8C0D42020       DC8 193, 248, 192, 212, 32, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " 7. \\306\\304\\266\\363\\271\\314\\305\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20372E20C6C4       DC8 32, 55, 46, 32, 198, 196, 182, 243, 185, 204
   \              B6F3B9CC    
   \   0000000A   C5CDBEF7B5A5       DC8 197, 205, 190, 247, 181, 165, 192, 204, 198, 174
   \              C0CCC6AE    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "[OK]\\264\\251\\270\\243\\270\\351\\275\\3`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   5B4F4B5DB4A9       DC8 91, 79, 75, 93, 180, 169, 184, 163, 184, 233
   \              B8A3B8E9    
   \   0000000A   BDC3C0DB2020       DC8 189, 195, 192, 219, 32, 32, 32, 0, 0, 0
   \              20000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\276\\367\\265\\245\\300\\314\\306\\256\\3`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   BEF7B5A5C0CC       DC8 190, 247, 181, 165, 192, 204, 198, 174, 193, 223
   \              C6AEC1DF    
   \   0000000A   C0D4B4CFB4D9       DC8 192, 212, 180, 207, 180, 217, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "0.\\275\\303\\265\\277\\277\\300\\307\\301`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   302EBDC3B5BF       DC8 48, 46, 189, 195, 181, 191, 191, 192, 199, 193
   \              BFC0C7C1    
   \   0000000A   B5BFC0DBC1DF       DC8 181, 191, 192, 219, 193, 223, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "3. RPM\\300\\314\\276\\370\\300\\275    `:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   332E2052504D       DC8 51, 46, 32, 82, 80, 77, 192, 204, 190, 248
   \              C0CCBEF8    
   \   0000000A   C0BD20202020       DC8 192, 189, 32, 32, 32, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "5. GPS\\277\\241\\274\\323\\265\\265\\260_1`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   352E20475053       DC8 53, 46, 32, 71, 80, 83, 191, 161, 188, 211
   \              BFA1BCD3    
   \   0000000A   B5B5B0A1C0D6       DC8 181, 181, 176, 161, 192, 214, 192, 189, 32, 32
   \              C0BD2020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "7.\\277\\356\\307\\340\\301\\337\\271\\350`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   372EBFEEC7E0       DC8 55, 46, 191, 238, 199, 224, 193, 223, 185, 232
   \              C1DFB9E8    
   \   0000000A   C5CDB8AEB3B7       DC8 197, 205, 184, 174, 179, 183, 192, 189, 32, 32
   \              C0BD2020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "WIFI\\276\\367\\265\\245\\300\\314\\306\\2`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   57494649BEF7       DC8 87, 73, 70, 73, 190, 247, 181, 165, 192, 204
   \              B5A5C0CC    
   \   0000000A   C6AEC1DFC0D4       DC8 198, 174, 193, 223, 192, 212, 180, 207, 180, 217
   \              B4CFB4D9    
   \   00000014   2E000000           DC8 46, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "8.\\261\\342\\301\\330\\271\\350\\305\\315`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   382EB1E2C1D8       DC8 56, 46, 177, 226, 193, 216, 185, 232, 197, 205
   \              B9E8C5CD    
   \   0000000A   B8AEB3B7C0BD       DC8 184, 174, 179, 183, 192, 189, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\300\\372\\300\\345  \\270\\336\\264`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20203C20C0FA       DC8 32, 32, 60, 32, 192, 250, 192, 229, 32, 32
   \              C0E52020    
   \   0000000A   B8DEB4BA203E       DC8 184, 222, 180, 186, 32, 62, 32, 32, 0, 0
   \              20200000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\274\\261\\305\\303\\271\\351\\276\\367`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   2D20BCB1C5C3       DC8 45, 32, 188, 177, 197, 195, 185, 233, 190, 247
   \              B9E9BEF7    
   \   0000000A   202020202020       DC8 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "9.\\263\\303\\260\\242\\274\\366\\260\\241`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   392EB3C3B0A2       DC8 57, 46, 179, 195, 176, 162, 188, 246, 176, 161
   \              BCF6B0A1    
   \   0000000A   C0FCBED0B3F4       DC8 192, 252, 190, 208, 179, 244, 192, 189, 32, 32
   \              C0BD2020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " [%03d]-%02d%02d%02d ">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   205B25303364       DC8 32, 91, 37, 48, 51, 100, 93, 45, 37, 48
   \              5D2D2530    
   \   0000000A   326425303264       DC8 50, 100, 37, 48, 50, 100, 37, 48, 50, 100
   \              25303264    
   \   00000014   20000000           DC8 32, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- DataSave        ">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   2D2044617461       DC8 45, 32, 68, 97, 116, 97, 83, 97, 118, 101
   \              53617665    
   \   0000000A   202020202020       DC8 32, 32, 32, 32, 32, 32, 32, 32, 0, 0
   \              20200000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "10. \\277\\241\\276\\356\\276\\320\\300\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   31302E20BFA1       DC8 49, 48, 46, 32, 191, 161, 190, 238, 190, 208
   \              BEEEBED0    
   \   0000000A   C0CCC0FCBED0       DC8 192, 204, 192, 252, 190, 208, 179, 183, 192, 189
   \              B3B7C0BD    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "11. \\261\\342\\277\\357\\261\\342 X\\277`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   31312E20B1E2       DC8 49, 49, 46, 32, 177, 226, 191, 239, 177, 226
   \              BFEFB1E2    
   \   0000000A   2058BFC0B9F6       DC8 32, 88, 191, 192, 185, 246, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "12. \\261\\342\\277\\357\\261\\342 Y\\277`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   31322E20B1E2       DC8 49, 50, 46, 32, 177, 226, 191, 239, 177, 226
   \              BFEFB1E2    
   \   0000000A   2059BFC0B9F6       DC8 32, 89, 191, 192, 185, 246, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "13.GPS\\271\\374\\300\\247\\271\\376\\276`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   31332E475053       DC8 49, 51, 46, 71, 80, 83, 185, 252, 192, 167
   \              B9FCC0A7    
   \   0000000A   B9FEBEEEB3B2       DC8 185, 254, 190, 238, 179, 178, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "14. \\306\\304\\305\\267\\272\\352\\267\\2`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   31342E20C6C4       DC8 49, 52, 46, 32, 198, 196, 197, 183, 186, 234
   \              C5B7BAEA    
   \   0000000A   B7B9C0CCC5A9       DC8 183, 185, 192, 204, 197, 169, 190, 248, 192, 189
   \              BEF8C0BD    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "15. \\303\\312\\261\\342 3\\272\\320\\264`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   31352E20C3CA       DC8 49, 53, 46, 32, 195, 202, 177, 226, 32, 51
   \              B1E22033    
   \   0000000A   BAD0B4EBB1E2       DC8 186, 208, 180, 235, 177, 226, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "16. \\270\\360\\265\\347\\270\\270\\301\\2`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   31362E20B8F0       DC8 49, 54, 46, 32, 184, 240, 181, 231, 184, 184
   \              B5E7B8B8    
   \   0000000A   C1B72033C3CA       DC8 193, 183, 32, 51, 195, 202, 180, 235, 177, 226
   \              B4EBB1E2    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "17. \\260\\370\\310\\270\\300\\374\\270\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   31372E20B0F8       DC8 49, 55, 46, 32, 176, 248, 200, 184, 192, 252
   \              C8B8C0FC    
   \   0000000A   B8F0B5E5C1F8       DC8 184, 240, 181, 229, 193, 248, 192, 212, 32, 32
   \              C0D42020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\300\\372\\300\\345  \\270\\336\\264_1`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20203C20C0FA       DC8 32, 32, 60, 32, 192, 250, 192, 229, 32, 32
   \              C0E52020    
   \   0000000A   B8DEB4BA203E       DC8 184, 222, 180, 186, 32, 62, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- USB \\276\\370\\300\\275          ">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   2D2055534220       DC8 45, 32, 85, 83, 66, 32, 190, 248, 192, 189
   \              BEF8C0BD    
   \   0000000A   202020202020       DC8 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%s ">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   25732000           DC8 37, 115, 32, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\261\\342\\260\\243\\271\\351\\276\\367`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   2D20B1E2B0A3       DC8 45, 32, 177, 226, 176, 163, 185, 233, 190, 247
   \              B9E9BEF7    
   \   0000000A   202020202020       DC8 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   20202000           DC8 32, 32, 32, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\300\\372\\300\\345\\301\\337\\300\\324`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   2D20C0FAC0E5       DC8 45, 32, 192, 250, 192, 229, 193, 223, 192, 212
   \              C1DFC0D4    
   \   0000000A   B4CFB4D92E20       DC8 180, 207, 180, 217, 46, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   20202000           DC8 32, 32, 32, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\300\\374\\303\\274\\271\\351\\276\\367`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   2D20C0FCC3BC       DC8 45, 32, 192, 252, 195, 188, 185, 233, 190, 247
   \              B9E9BEF7    
   \   0000000A   202020202020       DC8 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\300\\374\\303\\274\\271\\351\\276\\367_1`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   2D20C0FCC3BC       DC8 45, 32, 192, 252, 195, 188, 185, 233, 190, 247
   \              B9E9BEF7    
   \   0000000A   C0BBC7D2B1EE       DC8 192, 187, 199, 210, 177, 238, 191, 228, 63, 32
   \              BFE43F20    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\300\\372\\300\\345\\301\\337\\300\\324_1`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   2D20C0FAC0E5       DC8 45, 32, 192, 250, 192, 229, 193, 223, 192, 212
   \              C1DFC0D4    
   \   0000000A   B4CFB4D92E20       DC8 180, 207, 180, 217, 46, 32, 32, 32, 32, 0
   \              20202000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\303\\346\\265\\271\\265\\245\\300\\314`:
   \   00000000                      ; Initializer data, 28 bytes
   \   00000000   2D20C3E6B5B9       DC8 45, 32, 195, 230, 181, 185, 181, 165, 192, 204
   \              B5A5C0CC    
   \   0000000A   C5CDC0FAC0E5       DC8 197, 205, 192, 250, 192, 229, 32, 32, 32, 32
   \              20202020    
   \   00000014   202020202020       DC8 32, 32, 32, 32, 32, 32, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\300\\374\\303\\274\\300\\372\\300\\345`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   2D20C0FCC3BC       DC8 45, 32, 192, 252, 195, 188, 192, 250, 192, 229
   \              C0FAC0E5    
   \   0000000A   C0BBC7D2B1EE       DC8 192, 187, 199, 210, 177, 238, 191, 228, 63, 32
   \              BFE43F20    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\277\\356\\300\\374\\300\\332\\274\\2`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20BFEE       DC8 32, 32, 60, 32, 191, 238, 192, 252, 192, 218
   \              C0FCC0DA    
   \   0000000A   BCB1C5C3203E       DC8 188, 177, 197, 195, 32, 62, 32, 32, 32, 32
   \              20202020    
   \   00000014   20200000           DC8 32, 32, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  %s">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   202025730000       DC8 32, 32, 37, 115, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\302\\367\\267\\256  \\271\\370\\310`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20203C20C2F7       DC8 32, 32, 60, 32, 194, 247, 183, 174, 32, 32
   \              B7AE2020    
   \   0000000A   B9F8C8A3203E       DC8 185, 248, 200, 163, 32, 62, 32, 32, 32, 0
   \              20202000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\276\\317\\310\\243\\304\\332\\265\\3`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20203C20BECF       DC8 32, 32, 60, 32, 190, 207, 200, 163, 196, 218
   \              C8A3C4DA    
   \   0000000A   B5E5C0D4B7C2       DC8 181, 229, 192, 212, 183, 194, 32, 62, 32, 0
   \              203E2000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "     [ %6s ]  ">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   20202020205B       DC8 32, 32, 32, 32, 32, 91, 32, 37, 54, 115
   \              20253673    
   \   0000000A   205D20200000       DC8 32, 93, 32, 32, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\277\\356\\300\\374\\300\\332  \\272`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20BFEE       DC8 32, 32, 60, 32, 191, 238, 192, 252, 192, 218
   \              C0FCC0DA    
   \   0000000A   2020BAAFB0E6       DC8 32, 32, 186, 175, 176, 230, 32, 62, 32, 32
   \              203E2020    
   \   00000014   20200000           DC8 32, 32, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\277\\356\\300\\374\\300\\332\\260\\241`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   2D20BFEEC0FC       DC8 45, 32, 191, 238, 192, 252, 192, 218, 176, 161
   \              C0DAB0A1    
   \   0000000A   BCB1C5C3BEC8       DC8 188, 177, 197, 195, 190, 200, 181, 202, 32, 0
   \              B5CA2000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%d-%018s">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   25642D253031       DC8 37, 100, 45, 37, 48, 49, 56, 115, 0, 0
   \              38730000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\271\\366\\275\\272\\302\\367\\267\\2`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20203C20B9F6       DC8 32, 32, 60, 32, 185, 246, 189, 186, 194, 247
   \              BDBAC2F7    
   \   0000000A   B7AEBAAFB0E6       DC8 183, 174, 186, 175, 176, 230, 32, 62, 32, 0
   \              203E2000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "    < \\307\\366\\264\\353\\271\\366\\275`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   202020203C20       DC8 32, 32, 32, 32, 60, 32, 199, 246, 180, 235
   \              C7F6B4EB    
   \   0000000A   B9F6BDBA203E       DC8 185, 246, 189, 186, 32, 62, 32, 32, 32, 32
   \              20202020    
   \   00000014   20200000           DC8 32, 32, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\264\\353\\277\\354\\275\\305\\307\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20B4EB       DC8 32, 32, 60, 32, 180, 235, 191, 236, 189, 197
   \              BFECBDC5    
   \   0000000A   C7FCB9F6BDBA       DC8 199, 252, 185, 246, 189, 186, 32, 62, 32, 32
   \              203E2020    
   \   00000014   20200000           DC8 32, 32, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\264\\353\\277\\354\\261\\270\\307\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20B4EB       DC8 32, 32, 60, 32, 180, 235, 191, 236, 177, 184
   \              BFECB1B8    
   \   0000000A   C7FCB9F6BDBA       DC8 199, 252, 185, 246, 189, 186, 32, 62, 32, 32
   \              203E2020    
   \   00000014   20200000           DC8 32, 32, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\277\\271\\277\\334\\274\\263\\301\\2`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20BFB9       DC8 32, 32, 60, 32, 191, 185, 191, 220, 188, 179
   \              BFDCBCB3    
   \   0000000A   C1A4B0AAC0FB       DC8 193, 164, 176, 170, 192, 251, 191, 235, 32, 62
   \              BFEB203E    
   \   00000014   20200000           DC8 32, 32, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\274\\323\\265\\265\\273\\363\\274\\3`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20203C20BCD3       DC8 32, 32, 60, 32, 188, 211, 181, 181, 187, 243
   \              B5B5BBF3    
   \   0000000A   BCF6BAAFB0E6       DC8 188, 246, 186, 175, 176, 230, 32, 62, 32, 0
   \              203E2000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "      [%06d]     ">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   202020202020       DC8 32, 32, 32, 32, 32, 32, 91, 37, 48, 54
   \              5B253036    
   \   0000000A   645D20202020       DC8 100, 93, 32, 32, 32, 32, 32, 0, 0, 0
   \              20000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "      [%06s]    ">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   202020202020       DC8 32, 32, 32, 32, 32, 32, 91, 37, 48, 54
   \              5B253036    
   \   0000000A   735D20202020       DC8 115, 93, 32, 32, 32, 32, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < RPM \\273\\363\\274\\366\\272\\257\\2`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20203C205250       DC8 32, 32, 60, 32, 82, 80, 77, 32, 187, 243
   \              4D20BBF3    
   \   0000000A   BCF6BAAFB0E6       DC8 188, 246, 186, 175, 176, 230, 32, 62, 32, 0
   \              203E2000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "      [%06s]     ">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   202020202020       DC8 32, 32, 32, 32, 32, 32, 91, 37, 48, 54
   \              5B253036    
   \   0000000A   735D20202020       DC8 115, 93, 32, 32, 32, 32, 32, 0, 0, 0
   \              20000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\274\\323\\265\\265\\261\\342\\301\\3`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20203C20BCD3       DC8 32, 32, 60, 32, 188, 211, 181, 181, 177, 226
   \              B5B5B1E2    
   \   0000000A   C1D8C0FCBED0       DC8 193, 216, 192, 252, 190, 208, 32, 62, 32, 0
   \              203E2000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "    [ %4.1f V ]     ">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   202020205B20       DC8 32, 32, 32, 32, 91, 32, 37, 52, 46, 49
   \              25342E31    
   \   0000000A   662056205D20       DC8 102, 32, 86, 32, 93, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < RPM \\261\\342\\301\\330\\300\\374\\2`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C205250       DC8 32, 32, 60, 32, 82, 80, 77, 32, 177, 226
   \              4D20B1E2    
   \   0000000A   C1D8C0FCBED0       DC8 193, 216, 192, 252, 190, 208, 32, 62, 32, 32
   \              203E2020    
   \   00000014   20200000           DC8 32, 32, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\277\\241\\276\\356\\276\\320  \\300`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20BFA1       DC8 32, 32, 60, 32, 191, 161, 190, 238, 190, 208
   \              BEEEBED0    
   \   0000000A   2020C0FCBED0       DC8 32, 32, 192, 252, 190, 208, 32, 62, 32, 32
   \              203E2020    
   \   00000014   20000000           DC8 32, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\263\\303\\260\\242\\274\\366  \\277`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20B3C3       DC8 32, 32, 60, 32, 179, 195, 176, 162, 188, 246
   \              B0A2BCF6    
   \   0000000A   2020BFC2B5B5       DC8 32, 32, 191, 194, 181, 181, 32, 62, 32, 32
   \              203E2020    
   \   00000014   20202000           DC8 32, 32, 32, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\260\\372\\274\\323  \\261\\342\\301`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20B0FA       DC8 32, 32, 60, 32, 176, 250, 188, 211, 32, 32
   \              BCD32020    
   \   0000000A   B1E2C1D8203E       DC8 177, 226, 193, 216, 32, 62, 32, 32, 32, 32
   \              20202020    
   \   00000014   20200000           DC8 32, 32, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "     [ %03d km ]     ">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20202020205B       DC8 32, 32, 32, 32, 32, 91, 32, 37, 48, 51
   \              20253033    
   \   0000000A   64206B6D205D       DC8 100, 32, 107, 109, 32, 93, 32, 32, 32, 32
   \              20202020    
   \   00000014   20000000           DC8 32, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\261\\336\\301\\244\\301\\366\\261\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20B1DE       DC8 32, 32, 60, 32, 177, 222, 193, 164, 193, 246
   \              C1A4C1F6    
   \   0000000A   B1E2C1D8203E       DC8 177, 226, 193, 216, 32, 62, 32, 32, 32, 32
   \              20202020    
   \   00000014   20200000           DC8 32, 32, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\261\\336\\260\\241\\274\\323\\261\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20B1DE       DC8 32, 32, 60, 32, 177, 222, 176, 161, 188, 211
   \              B0A1BCD3    
   \   0000000A   B1E2C1D8203E       DC8 177, 226, 193, 216, 32, 62, 32, 32, 32, 32
   \              20202020    
   \   00000014   20200000           DC8 32, 32, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\260\\372\\272\\316\\307\\317\\261\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20B0FA       DC8 32, 32, 60, 32, 176, 250, 186, 206, 199, 207
   \              BACEC7CF    
   \   0000000A   B1E2C1D8203E       DC8 177, 226, 193, 216, 32, 62, 32, 32, 32, 32
   \              20202020    
   \   00000014   20000000           DC8 32, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "    [ %04d rpm ]    ">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   202020205B20       DC8 32, 32, 32, 32, 91, 32, 37, 48, 52, 100
   \              25303464    
   \   0000000A   2072706D205D       DC8 32, 114, 112, 109, 32, 93, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\261\\342\\277\\357\\261\\342\\274\\2_1`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20B1E2       DC8 32, 32, 60, 32, 177, 226, 191, 239, 177, 226
   \              BFEFB1E2    
   \   0000000A   BCBCC6C3203E       DC8 188, 188, 198, 195, 32, 62, 32, 32, 32, 32
   \              20202020    
   \   00000014   20000000           DC8 32, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "     X=%-2d  Y=%-2d   ">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   202020202058       DC8 32, 32, 32, 32, 32, 88, 61, 37, 45, 50
   \              3D252D32    
   \   0000000A   642020593D25       DC8 100, 32, 32, 89, 61, 37, 45, 50, 100, 32
   \              2D326420    
   \   00000014   20200000           DC8 32, 32, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\261\\342\\277\\357\\261\\342\\274\\274\\3`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   B1E2BFEFB1E2       DC8 177, 226, 191, 239, 177, 226, 188, 188, 198, 195
   \              BCBCC6C3    
   \   0000000A   204F4B2F4553       DC8 32, 79, 75, 47, 69, 83, 67, 0, 0, 0
   \              43000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\275\\272\\307\\307\\304\\277\\272\\2`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20BDBA       DC8 32, 32, 60, 32, 189, 186, 199, 199, 196, 191
   \              C7C7C4BF    
   \   0000000A   BABCB7FD203E       DC8 186, 188, 183, 253, 32, 62, 32, 32, 32, 32
   \              20202020    
   \   00000014   20202000           DC8 32, 32, 32, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "    [ %03d %% ]      ">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   202020205B20       DC8 32, 32, 32, 32, 91, 32, 37, 48, 51, 100
   \              25303364    
   \   0000000A   202525205D20       DC8 32, 37, 37, 32, 93, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   20000000           DC8 32, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\305\\260\\300\\324\\267\\302\\274\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20C5B0       DC8 32, 32, 60, 32, 197, 176, 192, 212, 183, 194
   \              C0D4B7C2    
   \   0000000A   BCF6C1A4203E       DC8 188, 246, 193, 164, 32, 62, 32, 32, 32, 32
   \              20202020    
   \   00000014   20202000           DC8 32, 32, 32, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "IO\\270\\246\\272\\257\\260\\346\\307\\317`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   494FB8A6BAAF       DC8 73, 79, 184, 166, 186, 175, 176, 230, 199, 207
   \              B0E6C7CF    
   \   0000000A   B7C1B8E9204F       DC8 183, 193, 184, 233, 32, 79, 75, 0, 0, 0
   \              4B000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "< GPS \\302\\367\\260\\355\\301\\366\\274`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   3C2047505320       DC8 60, 32, 71, 80, 83, 32, 194, 247, 176, 237
   \              C2F7B0ED    
   \   0000000A   C1F6BCB3C1A4       DC8 193, 246, 188, 179, 193, 164, 32, 62, 32, 32
   \              203E2020    
   \   00000014   20200000           DC8 32, 32, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\302\\367\\260\\355\\301\\366\\270\\246\\2`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   C2F7B0EDC1F6       DC8 194, 247, 176, 237, 193, 246, 184, 166, 188, 179
   \              B8A6BCB3    
   \   0000000A   C1A4202D204F       DC8 193, 164, 32, 45, 32, 79, 75, 0, 0, 0
   \              4B000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "< EMS \\265\\277\\300\\333\\271\\374\\300`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   3C20454D5320       DC8 60, 32, 69, 77, 83, 32, 181, 191, 192, 219
   \              B5BFC0DB    
   \   0000000A   B9FCC0A7BCB3       DC8 185, 252, 192, 167, 188, 179, 193, 164, 32, 62
   \              C1A4203E    
   \   00000014   20000000           DC8 32, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%s    ">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   257320202020       DC8 37, 115, 32, 32, 32, 32, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "< \\275\\272\\305\\270\\306\\256\\270\\360`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   3C20BDBAC5B8       DC8 60, 32, 189, 186, 197, 184, 198, 174, 184, 240
   \              C6AEB8F0    
   \   0000000A   C5CDBCF6C1A4       DC8 197, 205, 188, 246, 193, 164, 32, 62, 32, 0
   \              203E2000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "     [%06d]     ">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20202020205B       DC8 32, 32, 32, 32, 32, 91, 37, 48, 54, 100
   \              25303664    
   \   0000000A   5D2020202020       DC8 93, 32, 32, 32, 32, 32, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "     [%06s]     ">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20202020205B       DC8 32, 32, 32, 32, 32, 91, 37, 48, 54, 115
   \              25303673    
   \   0000000A   5D2020202020       DC8 93, 32, 32, 32, 32, 32, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "< EMS \\265\\277\\300\\333\\274\\323\\265`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   3C20454D5320       DC8 60, 32, 69, 77, 83, 32, 181, 191, 192, 219
   \              B5BFC0DB    
   \   0000000A   BCD3B5B5BCB3       DC8 188, 211, 181, 181, 188, 179, 193, 164, 32, 62
   \              C1A4203E    
   \   00000014   20000000           DC8 32, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "    [ %04d km ]    ">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   202020205B20       DC8 32, 32, 32, 32, 91, 32, 37, 48, 52, 100
   \              25303464    
   \   0000000A   206B6D205D20       DC8 32, 107, 109, 32, 93, 32, 32, 32, 32, 0
   \              20202000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "< \\273\\347\\277\\353\\300\\332\\270\\336`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   3C20BBE7BFEB       DC8 60, 32, 187, 231, 191, 235, 192, 218, 184, 222
   \              C0DAB8DE    
   \   0000000A   B4BA203E2000       DC8 180, 186, 32, 62, 32, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "8 \\277\\265\\273\\363\\306\\337\\277\\376`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   3820BFB5BBF3       DC8 56, 32, 191, 181, 187, 243, 198, 223, 191, 254
   \              C6DFBFFE    
   \   0000000A   BEEE20202000       DC8 190, 238, 32, 32, 32, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%s">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   25730000           DC8 37, 115, 0, 0

   Maximum stack usage in bytes:

     Function             .cstack
     --------             -------
     Display                  24
     EMS_View_Mode             8
     InputIO_Reverse_View      8
     InputIO_View              8
     Input_View                8
     LED2_GREEN                8
     LED2_OFF                  8
     Write_Word                8
     memset                    8


   Section sizes:

     Function/Label                                   Bytes
     --------------                                   -----
     memset                                             20
     LED2_OFF                                           28
     LED2_GREEN                                         28
     DisplayInfo                                         8
     Display_Buff                                      100
     IOReverse_Count                                     1
     GLCD_Refresh_Flag                                   1
     Toogle_Cursor                                       1
     Wait_x                                              1
     Wait_y                                              1
     LCD_WaitString                                     52
     BAKUP_WORD                                         20
     EMS_WORD                                           12
     EMS_ON_WORD                                        52
     EMS_OFF_WORD                                       72
     DISP_WORD                                          40
     EMS_View_Mode                                      80
     InputIO_View                                      484
     InputIO_Reverse_View                              856
     Input_View                                        280
     Write_Word                                         20
     Display                                          5284
     Display_Time                                        2
     Led_Flag                                            1
     ??DataTable153                                      4
     ??DataTable156                                      4
     ??DataTable156_1                                    4
     ??DataTable156_2                                    4
     ??DataTable156_3                                    4
     ??DataTable156_4                                    4
     ??DataTable156_5                                    4
     ??DataTable156_6                                    4
     ??DataTable156_7                                    4
     ??DataTable156_8                                    4
     ??DataTable156_9                                    4
     ??DataTable156_10                                   4
     ??DataTable156_11                                   4
     ??DataTable156_12                                   4
     ??DataTable156_13                                   4
     ??DataTable156_14                                   4
     ??DataTable156_15                                   4
     ??DataTable156_16                                   4
     ??DataTable156_17                                   4
     ??DataTable156_18                                   4
     ??DataTable156_19                                   4
     ??DataTable156_20                                   4
     ??DataTable156_21                                   4
     ??DataTable156_22                                   4
     ??DataTable156_23                                   4
     ?<Constant "BREAK ">                                8
     ?<Constant "GEAR  ">                                8
     ?<Constant "PARKING">                               8
     ?<Constant "RLIGHT">                                8
     ?<Constant "LLIGHT">                                8
     ?<Constant "F_DOOR">                                8
     ?<Constant "R_DOOR">                                8
     ?<Constant "KEY_ON">                                8
     ?<Constant "LPGP %04.1f">                          12
     ?<Constant "AirP %04.1f">                          12
     ?<Constant "WTmp %04.1f">                          12
     ?<Constant "Batt %04.1f">                          12
     ?<Constant "Fuel %04.1f">                          12
     ?<Constant "Accl %04.1f">                          12
     ?<Constant "   - TEAHO TECH -   ">                 24
     ?<Constant " EMS_SYSTEM V000021 ">                 24
     ?<Constant "  DEMO PROGRAM v1 ">                   20
     ?<Constant "  WIFI_RELAY TEST  ">                  20
     ?<Constant "  < \300\317\300\317\277\356\307\3     24
     ?<Constant "      [ %02d:%02d ]  ...">             28
     ?<Constant "\300\317\301\326\307\340      %05d     20
     ?<Constant "\303\321\301\326\307\340    %07d k     20
     ?<Constant "  < \277\356\300\374\300\332\304\3     20
     ?<Constant "  \277\356\300\374\300\332\274\261     24
     ?<Constant "[%018s]">                               8
     ?<Constant "  < \261\342\277\357\261\342\274\2     20
     ?<Constant "   [ X=%-2d  Y=%-2d ]  ">              24
     ?<Constant "< \275\303\265\277\270\360\305\315     24
     ?<Constant "     [ %06d ]   ">                     20
     ?<Constant "GPS-X %03d.%06d">                      16
     ?<Constant "GPS-Y %03d.%06d">                      16
     ?<Constant "  < \306\337\277\376\276\356\271\3     20
     ?<Constant "   [ %09s ]   ">                       16
     ?<Constant "111219-01">                            12
     ?<Constant "  < \307\374\275\304\275\302\300\3     24
     ?<Constant "   [ %010s ]   ">                      16
     ?<Constant "  < \301\246\307\260\300\317\267\3     24
     ?<Constant " [ %014s ]   ">                        16
     ?<Constant "  < \273\347\277\353\300\332\270\3     20
     ?<Constant " 1. \300\332\267\341\300\372\300\3     20
     ??DataTable157                                      4
     ??DataTable157_1                                    4
     ??DataTable157_2                                    4
     ??DataTable157_3                                    4
     ??DataTable157_4                                    4
     ??DataTable157_5                                    4
     ??DataTable157_6                                    4
     ??DataTable157_7                                    4
     ??DataTable157_8                                    4
     ??DataTable157_9                                    4
     ??DataTable157_10                                   4
     ??DataTable157_11                                   4
     ??DataTable157_12                                   4
     ??DataTable157_13                                   4
     ??DataTable157_14                                   4
     ??DataTable157_15                                   4
     ??DataTable157_16                                   4
     ??DataTable157_17                                   4
     ??DataTable157_18                                   4
     ??DataTable157_19                                   4
     ??DataTable157_20                                   4
     ??DataTable157_21                                   4
     ??DataTable157_22                                   4
     ??DataTable157_23                                   4
     ??DataTable157_24                                   4
     ??DataTable157_25                                   4
     ??DataTable157_26                                   4
     ??DataTable157_27                                   4
     ??DataTable157_28                                   4
     ??DataTable157_29                                   4
     ??DataTable157_30                                   4
     ??DataTable157_31                                   4
     ??DataTable157_32                                   4
     ??DataTable157_33                                   4
     ??DataTable157_34                                   4
     ??DataTable157_35                                   4
     ??DataTable157_36                                   4
     ??DataTable157_37                                   4
     ??DataTable157_38                                   4
     ??DataTable157_39                                   4
     ??DataTable157_40                                   4
     ??DataTable157_41                                   4
     ??DataTable157_42                                   4
     ??DataTable157_43                                   4
     ??DataTable157_44                                   4
     ??DataTable157_45                                   4
     ??DataTable157_46                                   4
     ??DataTable157_47                                   4
     ??DataTable157_48                                   4
     ??DataTable157_49                                   4
     ??DataTable157_50                                   4
     ??DataTable157_51                                   4
     ??DataTable157_52                                   4
     ??DataTable157_53                                   4
     ??DataTable157_54                                   4
     ??DataTable157_55                                   4
     ??DataTable157_56                                   4
     ??DataTable157_57                                   4
     ??DataTable157_58                                   4
     ??DataTable157_59                                   4
     ??DataTable157_60                                   4
     ??DataTable157_61                                   4
     ??DataTable157_62                                   4
     ??DataTable157_63                                   4
     ??DataTable157_64                                   4
     ??DataTable157_65                                   4
     ??DataTable157_66                                   4
     ??DataTable157_67                                   4
     ??DataTable157_68                                   4
     ??DataTable157_69                                   4
     ??DataTable157_70                                   4
     ??DataTable157_71                                   4
     ??DataTable157_72                                   4
     ??DataTable157_73                                   4
     ??DataTable157_74                                   4
     ??DataTable157_75                                   4
     ??DataTable157_76                                   4
     ??DataTable157_77                                   4
     ??DataTable157_78                                   4
     ?<Constant "- \277\300\264\303\271\351\276\367     16
     ?<Constant "- \307\317\267\347\271\351\276\367     16
     ?<Constant " 2. \277\356\300\374\300\332\274\2     20
     ?<Constant "- \300\317\301\326\300\317\271\351     16
     ?<Constant "- \307\321\264\336\271\351\276\367     16
     ?<Constant "- \274\274\264\336\271\351\276\367     16
     ?<Constant " 3. \302\367\267\256\271\370\310\2     20
     ?<Constant "  < \273\347\277\353\300\332\270\3_1   24
     ?<Constant " 4. \310\257\260\346\274\263\301\2     24
     ?<Constant "- \300\374\303\274\263\353\274\261     20
     ?<Constant "- \302\367\260\355\301\366\265\277     20
     ?<Constant "- \265\356\267\317\261\270\260\243     20
     ?<Constant " 5. \306\337\277\376\276\356\276\3     24
     ?<Constant "[OK]\271\366\306\260\300\273\264\2     24
     ?<Constant "\276\367\265\245\300\314\306\256\2     16
     ?<Constant "0.\275\303\265\277\277\302\265\277     24
     ?<Constant "1.\277\241\304\332\271\366\306\260     24
     ?<Constant "2.\275\303\265\277\305\260\277\300     24
     ?<Constant "3. RPM\300\314\300\326\300\275         24
     ?<Constant " 6. \273\347\277\356\265\345\276\3     24
     ?<Constant "4. SPEED\260\241\300\326\300\275       24
     ?<Constant "- \300\372\300\345\277\317\267\341     24
     ?<Constant "5. GPS\277\241\274\323\265\265\260     24
     ?<Constant "6.\261\342\276\356\260\241\301\337     24
     ?<Constant "7. 1\303\312\260\243\300\347\275\3     24
     ?<Constant "8.\275\303\265\277\300\347\275\303     24
     ?<Constant "9. BREAK\271\342\301\366\276\312\3     24
     ?<Constant "10.BREAK\266\347\301\366\276\312\3     24
     ?<Constant "11. \270\360\265\347\301\266\260\3     24
     ?<Constant "12. \260\370\310\270\300\374\301\3     24
     ?<Constant " 7. \306\304\266\363\271\314\305\3     24
     ?<Constant "[OK]\264\251\270\243\270\351\275\3     20
     ?<Constant "\276\367\265\245\300\314\306\256\3     20
     ?<Constant "0.\275\303\265\277\277\300\307\301     24
     ?<Constant "3. RPM\300\314\276\370\300\275         24
     ?<Constant "5. GPS\277\241\274\323\265\265\260_1   24
     ?<Constant "7.\277\356\307\340\301\337\271\350     24
     ?<Constant "WIFI\276\367\265\245\300\314\306\2     24
     ?<Constant "8.\261\342\301\330\271\350\305\315     24
     ?<Constant "  < \300\372\300\345  \270\336\264     20
     ?<Constant "- \274\261\305\303\271\351\276\367     24
     ?<Constant "9.\263\303\260\242\274\366\260\241     24
     ?<Constant " [%03d]-%02d%02d%02d ">                24
     ?<Constant "- DataSave        ">                   20
     ?<Constant "10. \277\241\276\356\276\320\300\3     24
     ?<Constant "11. \261\342\277\357\261\342 X\277     24
     ?<Constant "12. \261\342\277\357\261\342 Y\277     24
     ?<Constant "13.GPS\271\374\300\247\271\376\276     24
     ?<Constant "14. \306\304\305\267\272\352\267\2     24
     ?<Constant "15. \303\312\261\342 3\272\320\264     24
     ?<Constant "16. \270\360\265\347\270\270\301\2     24
     ?<Constant "17. \260\370\310\270\300\374\270\3     24
     ?<Constant "  < \300\372\300\345  \270\336\264_1   20
     ?<Constant "- USB \276\370\300\275          ">     24
     ?<Constant "%s ">                                   4
     ?<Constant "- \261\342\260\243\271\351\276\367     24
     ?<Constant "- \300\372\300\345\301\337\300\324     24
     ?<Constant "- \300\374\303\274\271\351\276\367     24
     ?<Constant "- \300\374\303\274\271\351\276\367_1   24
     ?<Constant "- \300\372\300\345\301\337\300\324_1   20
     ?<Constant "- \303\346\265\271\265\245\300\314     28
     ?<Constant "- \300\374\303\274\300\372\300\345     24
     ?<Constant "  < \277\356\300\374\300\332\274\2     24
     ?<Constant "  %s">                                  8
     ?<Constant "  < \302\367\267\256  \271\370\310     20
     ?<Constant "  < \276\317\310\243\304\332\265\3     20
     ?<Constant "     [ %6s ]  ">                       16
     ?<Constant "  < \277\356\300\374\300\332  \272     24
     ?<Constant "- \277\356\300\374\300\332\260\241     20
     ?<Constant "%d-%018s">                             12
     ?<Constant "  < \271\366\275\272\302\367\267\2     20
     ?<Constant "    < \307\366\264\353\271\366\275     24
     ?<Constant "  < \264\353\277\354\275\305\307\3     24
     ?<Constant "  < \264\353\277\354\261\270\307\3     24
     ?<Constant "  < \277\271\277\334\274\263\301\2     24
     ?<Constant "  < \274\323\265\265\273\363\274\3     20
     ?<Constant "      [%06d]     ">                    20
     ?<Constant "      [%06s]    ">                     20
     ?<Constant "  < RPM \273\363\274\366\272\257\2     20
     ?<Constant "      [%06s]     ">                    20
     ?<Constant "  < \274\323\265\265\261\342\301\3     20
     ?<Constant "    [ %4.1f V ]     ">                 24
     ?<Constant "  < RPM \261\342\301\330\300\374\2     24
     ?<Constant "  < \277\241\276\356\276\320  \300     24
     ?<Constant "  < \263\303\260\242\274\366  \277     24
     ?<Constant "  < \260\372\274\323  \261\342\301     24
     ?<Constant "     [ %03d km ]     ">                24
     ?<Constant "  < \261\336\301\244\301\366\261\3     24
     ?<Constant "  < \261\336\260\241\274\323\261\3     24
     ?<Constant "  < \260\372\272\316\307\317\261\3     24
     ?<Constant "    [ %04d rpm ]    ">                 24
     ?<Constant "  < \261\342\277\357\261\342\274\2_1   24
     ?<Constant "     X=%-2d  Y=%-2d   ">               24
     ?<Constant "\261\342\277\357\261\342\274\274\3     20
     ?<Constant "  < \275\272\307\307\304\277\272\2     24
     ?<Constant "    [ %03d %% ]      ">                24
     ?<Constant "  < \305\260\300\324\267\302\274\3     24
     ?<Constant "IO\270\246\272\257\260\346\307\317     20
     ?<Constant "< GPS \302\367\260\355\301\366\274     24
     ?<Constant "\302\367\260\355\301\366\270\246\2     20
     ?<Constant "< EMS \265\277\300\333\271\374\300     24
     ?<Constant "%s    ">                                8
     ?<Constant "< \275\272\305\270\306\256\270\360     20
     ?<Constant "     [%06d]     ">                     20
     ?<Constant "     [%06s]     ">                     20
     ?<Constant "< EMS \265\277\300\333\274\323\265     24
     ?<Constant "    [ %04d km ]    ">                  20
     ?<Constant "< \273\347\277\353\300\332\270\336     16
     ?<Constant "8 \277\265\273\363\306\337\277\376     16
     ?<Constant "%s">                                    4

 
    168 bytes in section .bss
    196 bytes in section .data
 10 528 bytes in section .text
 
 10 508 bytes of CODE memory (+ 20 bytes shared)
    364 bytes of DATA memory

Errors: none
Warnings: none
