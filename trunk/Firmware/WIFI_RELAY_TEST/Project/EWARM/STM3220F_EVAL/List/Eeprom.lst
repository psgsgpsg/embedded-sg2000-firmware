###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.1.52143/W32 for ARM     20/Dec/2011  15:45:32 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\Eeprom.c     #
#    Command line =  E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\Eeprom.c -D  #
#                    USE_STDPERIPH_DRIVER -D STM32F2XX -D USE_STM3220F_EVAL   #
#                    -D USE_USB_OTG_FS -D RTC_CLOCK_SOURCE_LSE -lC            #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\STM322 #
#                    0F_EVAL\List\ -lA E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Pr #
#                    oject\EWARM\STM3220F_EVAL\List\ -o                       #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\STM322 #
#                    0F_EVAL\Obj\ --no_cse --no_unroll --no_inline            #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files\IAR        #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWAR #
#                    M\..\ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWA #
#                    RM\..\..\Libraries\CMSIS\CM3\CoreSupport\ -I             #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F2xx\ -I       #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\STM32F2xx_StdPeriph_Driver\inc\ -I             #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Utilities\STM32_EVAL\ -I E:\Work\Firmware\DTG\DTG_EMS_SY #
#                    STEM\Project\EWARM\..\..\Utilities\STM32_EVAL\Common\    #
#                    -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\ #
#                    ..\Utilities\STM32_EVAL\STM3220F_EVAL\ -I                #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\STM32_USB_OTG_Driver\inc\ -I                   #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\STM32_USB_Device_Library\Core\inc\ -I          #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\STM32_USB_Device_Library\Class\msc\inc\ -I     #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\Usb #
#                    \ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\. #
#                    .\Usb\Inc\ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Projec #
#                    t\EWARM\..\Usb\src\ -I E:\Work\Firmware\DTG\DTG_EMS_SYST #
#                    EM\Project\EWARM\..\..\Libraries\STM32_USB_HOST_Library\ #
#                    Core\inc\ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project #
#                    \EWARM\..\..\Libraries\STM32_USB_HOST_Library\Class\MSC\ #
#                    inc\ -Ol --use_c++_inline                                #
#    List file    =  E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\STM322 #
#                    0F_EVAL\List\Eeprom.lst                                  #
#    Object file  =  E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\STM322 #
#                    0F_EVAL\Obj\Eeprom.o                                     #
#                                                                             #
#                                                                             #
###############################################################################

E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\Eeprom.c
      1          #include "Eeprom.h"
      2          #include "main.h"

   \                                 In section .text, align 2
   \   __intrinsic __interwork __softfp void *memcpy(void *, void const *, size_t)
   \                     memcpy:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   2000               MOVS     R0,R4
   \   00000006   ........           BL       __aeabi_memcpy
   \   0000000A   2000               MOVS     R0,R4
   \   0000000C   10BD               POP      {R4,PC}          ;; return

   \                                 In section .text, align 2
   \   __intrinsic __interwork __softfp void *memset(void *, int, size_t)
   \                     memset:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   1000               MOVS     R0,R2
   \   00000006   0A00               MOVS     R2,R1
   \   00000008   0100               MOVS     R1,R0
   \   0000000A   2000               MOVS     R0,R4
   \   0000000C   ........           BL       __aeabi_memset
   \   00000010   2000               MOVS     R0,R4
   \   00000012   10BD               POP      {R4,PC}          ;; return
      3          #ifdef DEBUG_LOG
      4          #include "Log.h"
      5          #endif
      6          #include "spi_flash.h"
      7          #include "Ems_System.h"
      8          #include "nand_if.h"
      9          
     10          

   \                                 In section .text, align 2, keep-with-next
     11          u8 Verify_SFLASH(void)
     12          {
   \                     Verify_SFLASH:
   \   00000000   00B5               PUSH     {LR}
   \   00000002   ADB0               SUB      SP,SP,#+180
     13          	struct _SERIALFLASH_Data Verify_Memroy;
     14          	
     15               memset(&Verify_Memroy,0,sizeof(struct _SERIALFLASH_Data));
   \   00000004   B222               MOVS     R2,#+178
   \   00000006   0021               MOVS     R1,#+0
   \   00000008   00A8               ADD      R0,SP,#+0
   \   0000000A   ........           BL       memset
     16               memset(Buffer,0,sizeof(Buffer));
   \   0000000E   4FF40072           MOV      R2,#+512
   \   00000012   0021               MOVS     R1,#+0
   \   00000014   ........           LDR.W    R0,??DataTable18
   \   00000018   ........           BL       memset
     17               
     18          	sFLASH_ReadBuffer(Buffer, SFLASH_ReadAddress1, sizeof(struct _SERIALFLASH_Data) );   
   \   0000001C   B222               MOVS     R2,#+178
   \   0000001E   5FF48031           MOVS     R1,#+65536
   \   00000022   ........           LDR.W    R0,??DataTable18
   \   00000026   ........           BL       sFLASH_ReadBuffer
     19          	memcpy(&Verify_Memroy,&Buffer, sizeof(struct _SERIALFLASH_Data));    
   \   0000002A   B222               MOVS     R2,#+178
   \   0000002C   ........           LDR.W    R1,??DataTable18
   \   00000030   00A8               ADD      R0,SP,#+0
   \   00000032   ........           BL       memcpy
     20          	
     21          	if(! memcmp( &Verify_Memroy, &SFLASH_Memory, sizeof(struct _SERIALFLASH_Data) ) )
   \   00000036   B222               MOVS     R2,#+178
   \   00000038   ........           LDR.W    R1,??DataTable18_1
   \   0000003C   00A8               ADD      R0,SP,#+0
   \   0000003E   ........           BL       memcmp
   \   00000042   0028               CMP      R0,#+0
   \   00000044   01D1               BNE.N    ??Verify_SFLASH_0
     22          	{
     23          		return 1;   // 두개가 같으면  트루
   \   00000046   0120               MOVS     R0,#+1
   \   00000048   00E0               B.N      ??Verify_SFLASH_1
     24          	}
     25          	
     26          	return 0;
   \                     ??Verify_SFLASH_0:
   \   0000004A   0020               MOVS     R0,#+0
   \                     ??Verify_SFLASH_1:
   \   0000004C   2DB0               ADD      SP,SP,#+180
   \   0000004E   00BD               POP      {PC}             ;; return
     27          }
     28          

   \                                 In section .text, align 2, keep-with-next
     29          void Save_LookupTable(void)
     30          {	
   \                     Save_LookupTable:
   \   00000000   80B5               PUSH     {R7,LR}
     31          	memcpy(Buffer,&LookUpTable, sizeof(LookUpTable));
   \   00000002   41F23A02           MOVW     R2,#+4154
   \   00000006   ........           LDR.W    R1,??DataTable18_2
   \   0000000A   ........           LDR.W    R0,??DataTable18
   \   0000000E   ........           BL       memcpy
     32          	sFLASH_EraseSector( SFLASH_WriteAddress4 );
   \   00000012   5FF48020           MOVS     R0,#+262144
   \   00000016   ........           BL       sFLASH_EraseSector
     33          	sFLASH_WriteBuffer( Buffer, SFLASH_WriteAddress4, sizeof(LookUpTable) ) ;
   \   0000001A   41F23A02           MOVW     R2,#+4154
   \   0000001E   5FF48021           MOVS     R1,#+262144
   \   00000022   ........           LDR.W    R0,??DataTable18
   \   00000026   ........           BL       sFLASH_WriteBuffer
     34          }
   \   0000002A   01BD               POP      {R0,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
     35          void Save_SFLASH_Wifi(void)
     36          {
   \                     Save_SFLASH_Wifi:
   \   00000000   80B5               PUSH     {R7,LR}
     37          //	u8 Buffer2[512];
     38               
     39          	memcpy(&Buffer,&SFLASH_Wifi, sizeof(SFLASH_Wifi));       
   \   00000002   4922               MOVS     R2,#+73
   \   00000004   ........           LDR.W    R1,??DataTable18_3
   \   00000008   ........           LDR.W    R0,??DataTable18
   \   0000000C   ........           BL       memcpy
     40          	sFLASH_EraseSector( SFLASH_WriteAddress3 );
   \   00000010   5FF44030           MOVS     R0,#+196608
   \   00000014   ........           BL       sFLASH_EraseSector
     41          	sFLASH_WriteBuffer( Buffer, SFLASH_WriteAddress3, sizeof(SFLASH_Wifi) ) ;
   \   00000018   4922               MOVS     R2,#+73
   \   0000001A   5FF44031           MOVS     R1,#+196608
   \   0000001E   ........           LDR.W    R0,??DataTable18
   \   00000022   ........           BL       sFLASH_WriteBuffer
     42          
     43          }
   \   00000026   01BD               POP      {R0,PC}          ;; return
     44          

   \                                 In section .text, align 2, keep-with-next
     45          void Save_GPS(void)
     46          {
   \                     Save_GPS:
   \   00000000   80B5               PUSH     {R7,LR}
     47          	memcpy(Buffer,&GPS_RouteCheck, sizeof(GPS_RouteCheck));       
   \   00000002   4422               MOVS     R2,#+68
   \   00000004   ........           LDR.W    R1,??DataTable18_4
   \   00000008   ........           LDR.W    R0,??DataTable18
   \   0000000C   ........           BL       memcpy
     48          	sFLASH_EraseSector( SFLASH_WriteAddress2 );
   \   00000010   5FF40030           MOVS     R0,#+131072
   \   00000014   ........           BL       sFLASH_EraseSector
     49          	sFLASH_WriteBuffer( Buffer, SFLASH_WriteAddress2, sizeof(GPS_RouteCheck) ) ;    
   \   00000018   4422               MOVS     R2,#+68
   \   0000001A   5FF40031           MOVS     R1,#+131072
   \   0000001E   ........           LDR.W    R0,??DataTable18
   \   00000022   ........           BL       sFLASH_WriteBuffer
     50          //	sFLASH_ReadBuffer( Buffer, SFLASH_WriteAddress2, sizeof(GPS_RouteCheck) ) ;         
     51          }
   \   00000026   01BD               POP      {R0,PC}          ;; return
     52          

   \                                 In section .text, align 2, keep-with-next
     53          void Save_SFLASH_CarInfo(void)
     54          {	
   \                     Save_SFLASH_CarInfo:
   \   00000000   80B5               PUSH     {R7,LR}
     55          	memcpy(Buffer,&SFLASH_CarInfo, sizeof(SFLASH_CarInfo));       
   \   00000002   5F22               MOVS     R2,#+95
   \   00000004   ........           LDR.W    R1,??DataTable18_5
   \   00000008   ........           LDR.W    R0,??DataTable18
   \   0000000C   ........           BL       memcpy
     56          	sFLASH_EraseSector( SFLASH_WriteAddress0 );
   \   00000010   0020               MOVS     R0,#+0
   \   00000012   ........           BL       sFLASH_EraseSector
     57          	sFLASH_WriteBuffer( Buffer, SFLASH_WriteAddress0, sizeof(SFLASH_CarInfo) ) ;
   \   00000016   5F22               MOVS     R2,#+95
   \   00000018   0021               MOVS     R1,#+0
   \   0000001A   ........           LDR.W    R0,??DataTable18
   \   0000001E   ........           BL       sFLASH_WriteBuffer
     58          }
   \   00000022   01BD               POP      {R0,PC}          ;; return
     59          

   \                                 In section .text, align 2, keep-with-next
     60          void Save_SFLASH(void)
     61          {
   \                     Save_SFLASH:
   \   00000000   80B5               PUSH     {R7,LR}
     62          	u8 ReWriteCount;
                 	   ^
Warning[Pe177]: variable "ReWriteCount" was declared but never referenced
     63          	// 데이터를 SFLASH으로 불러 온다.
     64          	DataLoad();
   \   00000002   ........           BL       DataLoad
     65          	
     66          	memcpy(Buffer,&SFLASH_Memory, sizeof(SFLASH_Memory));       
   \   00000006   B222               MOVS     R2,#+178
   \   00000008   ........           LDR.W    R1,??DataTable18_1
   \   0000000C   ........           LDR.W    R0,??DataTable18
   \   00000010   ........           BL       memcpy
     67          	sFLASH_EraseSector( SFLASH_WriteAddress1 );
   \   00000014   5FF48030           MOVS     R0,#+65536
   \   00000018   ........           BL       sFLASH_EraseSector
     68          	sFLASH_WriteBuffer( Buffer, SFLASH_WriteAddress1, sizeof(SFLASH_Memory) ) ;
   \   0000001C   B222               MOVS     R2,#+178
   \   0000001E   5FF48031           MOVS     R1,#+65536
   \   00000022   ........           LDR.W    R0,??DataTable18
   \   00000026   ........           BL       sFLASH_WriteBuffer
     69          
     70          //     DataSetting();
     71          //     
     72          //#ifdef DEBUG_LOG
     73          //	// LOG -------------------------------------------------------------------------
     74          //	if(LOGWRITE & LOG_EEPROM)                       
     75          //	{
     76          //		sprintf((char *)Buffer,"EEPROM DATA WRITE\r\n "); 
     77          //		Write_Log(Buffer, NORMAL_LOG);
     78          //	}        
     79          //#endif     
     80          //	// -----------------------------------------------------------------------------        
     81          //	if( Verify_SFLASH() == 0 )
     82          //	{
     83          //		for( ReWriteCount = 0 ; ReWriteCount < 5 ; ReWriteCount++ )
     84          //		{
     85          //#ifdef DEBUG_LOG               
     86          //			// LOG -------------------------------------------------------------------------
     87          //			if(LOGWRITE & LOG_EEPROM)                       
     88          //			{
     89          //				sprintf((char *)Buffer,"SFLASH VERIFY ERROR Count = %d\r\n ", ReWriteCount ); 
     90          //				Write_Log(Buffer, FAIL_LOG);
     91          //			}            
     92          //#endif               
     93          //			// -----------------------------------------------------------------------------                
     94          //			memcpy(Buffer,&SFLASH_Memory, sizeof(SFLASH_Memory));
     95          //               sFLASH_EraseSector( SFLASH_WriteAddress1 );
     96          //			sFLASH_WriteBuffer( Buffer, SFLASH_WriteAddress1, sizeof(SFLASH_Memory) ) ;         
     97          //			if( Verify_SFLASH() )
     98          //			{
     99          //#ifdef DEBUG_LOG                    
    100          //				// LOG -------------------------------------------------------------------------
    101          //				if(LOGWRITE & LOG_EEPROM)                       
    102          //				{
    103          //					sprintf((char *)Buffer,"EEPROM VERIFY SUCCESS \r\n " );                 
    104          //					Write_Log(Buffer, NORMAL_LOG);
    105          //				}            
    106          //#endif                    
    107          //				// -----------------------------------------------------------------------------    
    108          //				return ;
    109          //			}
    110          //		}
    111          //		// LOG -------------------------------------------------------------------------
    112          //#ifdef DEBUG_LOG          
    113          //		if(LOGWRITE & LOG_EEPROM)                       
    114          //		{
    115          //			sprintf((char *)Buffer,"EEPROM VERIFY ERROR RESET EEPROM\r\n "); 
    116          //			Write_Log(Buffer, FAIL_LOG);
    117          //		}   
    118          //#endif          
    119          //		return;
    120          //		// -----------------------------------------------------------------------------            
    121          //	}           
    122          //	// LOG -------------------------------------------------------------------------
    123          //#ifdef DEBUG_LOG     
    124          //	if(LOGWRITE & LOG_EEPROM)                       
    125          //	{
    126          //		sprintf((char *)Buffer,"EEPROM VERIFY SUCCESS \r\n " ); 
    127          //		Write_Log(Buffer, NORMAL_LOG);
    128          //	}        
    129          //#endif      
    130          //	// -----------------------------------------------------------------------------
    131          }
   \   0000002A   01BD               POP      {R0,PC}          ;; return
    132          

   \                                 In section .text, align 2, keep-with-next
    133          void DataLoad(void)
    134          {    
    135          	SFLASH_Memory.EcoStatus = Info.EcoStatus;                   // 에코상태  
   \                     DataLoad:
   \   00000000   ........           LDR.W    R0,??DataTable18_1
   \   00000004   ........           LDR.W    R1,??DataTable18_6
   \   00000008   097E               LDRB     R1,[R1, #+24]
   \   0000000A   80F8A210           STRB     R1,[R0, #+162]
    136          }
   \   0000000E   7047               BX       LR               ;; return
    137          
    138          

   \                                 In section .text, align 2, keep-with-next
    139          void DataSetting(void)
    140          {
   \                     DataSetting:
   \   00000000   10B5               PUSH     {R4,LR}
    141          	// 기준값으로 사용될 값들을 읽어옴     
    142          
    143          //     if(EEPROM_Memory.Car_Maker == 2)        // 현대
    144          //     {
    145          //          Set_Info.RPM_Adjust = 4000;             // 1000RPM /  50hz
    146          //          Set_Info.SPEED_Adjust = 108;          
    147          //          Set_Info.Speed_OUT = 0;
    148          //          Set_Info.IO_Reverser = EEPROM_Memory.IO_Reverser;
    149          //          Set_Info.IO_Reverser = Set_Info.IO_Reverser ^ INPUT_GEAR_FLAG ^ INPUT_PARKING_BREAK_FLAG;          
    150          //     }else if(EEPROM_Memory.Car_Maker == 2)       // 대우신형
    151          //     {
    152          //          Set_Info.RPM_Adjust = 1000;             // 1000RPM / 200hz          
    153          //          Set_Info.SPEED_Adjust = 108;
    154          //          Set_Info.Speed_OUT = 1;
    155          //          Set_Info.IO_Reverser = EEPROM_Memory.IO_Reverser ;          
    156          //     }else if(EEPROM_Memory.Car_Maker == 3)       // 대우 구형
    157          //     {          
    158          //          Set_Info.RPM_Adjust = 80;              // 1000RPM  / 2500hz 
    159          //          Set_Info.SPEED_Adjust = 108;            
    160          //          Set_Info.Speed_OUT = 0;
    161          //          Set_Info.IO_Reverser = EEPROM_Memory.IO_Reverser ;
    162          //
    163          //     }else if(EEPROM_Memory.Car_Maker == 4)       // 기타
    164          //     {
    165          //          Set_Info.RPM_Adjust = EEPROM_Memory.RPM_Adjust;
    166          //          Set_Info.SPEED_Adjust = EEPROM_Memory.SPEED_Adjust;
    167          //          Set_Info.Speed_OUT = 0;          
    168          //          Set_Info.IO_Reverser = EEPROM_Memory.IO_Reverser;
    169          //     }
    170           
    171               if(SFLASH_Memory.Car_Maker == 2)        // 대우신형
   \   00000002   ........           LDR.W    R0,??DataTable18_1
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   0228               CMP      R0,#+2
   \   0000000A   04D1               BNE.N    ??DataSetting_0
    172               {
    173                    Set_Info.Speed_OUT = 1;     
   \   0000000C   ........           LDR.W    R0,??DataTable18_7
   \   00000010   0121               MOVS     R1,#+1
   \   00000012   4173               STRB     R1,[R0, #+13]
   \   00000014   03E0               B.N      ??DataSetting_1
    174               }
    175               else
    176               {
    177                    Set_Info.Speed_OUT = 0;     
   \                     ??DataSetting_0:
   \   00000016   ........           LDR.W    R0,??DataTable18_7
   \   0000001A   0021               MOVS     R1,#+0
   \   0000001C   4173               STRB     R1,[R0, #+13]
    178               }     
    179             
    180               Set_Info.RPM_Adjust = SFLASH_Memory.RPM_Adjust;
   \                     ??DataSetting_1:
   \   0000001E   ........           LDR.W    R0,??DataTable18_7
   \   00000022   ....               LDR.N    R1,??DataTable18_1
   \   00000024   096E               LDR      R1,[R1, #+96]
   \   00000026   C0F80110           STR      R1,[R0, #+1]
    181               Set_Info.SPEED_Adjust = SFLASH_Memory.SPEED_Adjust;
   \   0000002A   ....               LDR.N    R0,??DataTable18_7
   \   0000002C   ....               LDR.N    R1,??DataTable18_1
   \   0000002E   496E               LDR      R1,[R1, #+100]
   \   00000030   C0F80510           STR      R1,[R0, #+5]
    182               Set_Info.IO_Reverser = SFLASH_Memory.IO_Reverser;
   \   00000034   ....               LDR.N    R0,??DataTable18_7
   \   00000036   ....               LDR.N    R1,??DataTable18_1
   \   00000038   B1F8A010           LDRH     R1,[R1, #+160]
   \   0000003C   C181               STRH     R1,[R0, #+14]
    183               
    184               Set_Info.Distance_Adjust = (float) SFLASH_Memory.Distance_Adjust / 1000000; // 196247/10000000  = 0.0196247
   \   0000003E   ....               LDR.N    R4,??DataTable18_7
   \   00000040   ....               LDR.N    R0,??DataTable18_1
   \   00000042   806E               LDR      R0,[R0, #+104]
   \   00000044   ........           BL       __aeabi_ui2f
   \   00000048   ....               LDR.N    R1,??DataTable18_8  ;; 0x49742400
   \   0000004A   ........           BL       __aeabi_fdiv
   \   0000004E   C4F80900           STR      R0,[R4, #+9]
    185          
    186               Info.Voice_Volume = SFLASH_Memory.Voice_Volume;
   \   00000052   ....               LDR.N    R0,??DataTable18_6
   \   00000054   ....               LDR.N    R1,??DataTable18_1
   \   00000056   91F8A310           LDRB     R1,[R1, #+163]
   \   0000005A   4176               STRB     R1,[R0, #+25]
    187               
    188          
    189          }
   \   0000005C   10BD               POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
    190          void Read_SFLASH(void)
    191          {
   \                     Read_SFLASH:
   \   00000000   10B5               PUSH     {R4,LR}
    192          	u8 i;
    193               
    194          	sFLASH_ReadBuffer(Buffer, SFLASH_ReadAddress0, sizeof(SFLASH_CarInfo) );     
   \   00000002   5F22               MOVS     R2,#+95
   \   00000004   0021               MOVS     R1,#+0
   \   00000006   ....               LDR.N    R0,??DataTable18
   \   00000008   ........           BL       sFLASH_ReadBuffer
    195          	memcpy(&SFLASH_CarInfo,Buffer, sizeof(SFLASH_CarInfo));
   \   0000000C   5F22               MOVS     R2,#+95
   \   0000000E   ....               LDR.N    R1,??DataTable18
   \   00000010   ....               LDR.N    R0,??DataTable18_5
   \   00000012   ........           BL       memcpy
    196          	
    197          	if( SFLASH_CarInfo.Verify != SFLASH_VERIFY0_CARINFO )        // Verify를 읽었을때 오류인가
   \   00000016   ....               LDR.N    R0,??DataTable18_5
   \   00000018   B0F85D00           LDRH     R0,[R0, #+93]
   \   0000001C   4AF24431           MOVW     R1,#+41796
   \   00000020   8842               CMP      R0,R1
   \   00000022   24D0               BEQ.N    ??Read_SFLASH_0
    198               {
    199                    memset(&SFLASH_CarInfo,0,sizeof(SFLASH_CarInfo));
   \   00000024   5F22               MOVS     R2,#+95
   \   00000026   0021               MOVS     R1,#+0
   \   00000028   ....               LDR.N    R0,??DataTable18_5
   \   0000002A   ........           BL       memset
    200                    sprintf( (char *) SFLASH_CarInfo.FirmWareVer, "EMS110818" );
   \   0000002E   ........           ADR.W    R1,`?<Constant "EMS110818">`
   \   00000032   ....               LDR.N    R0,??DataTable18_5
   \   00000034   ........           BL       sprintf
    201                    sprintf( (char *) SFLASH_CarInfo.SerialNumber, "1X21WK11000000" );
   \   00000038   ........           ADR.W    R1,`?<Constant "1X21WK11000000">`
   \   0000003C   ....               LDR.N    R0,??DataTable18_9
   \   0000003E   ........           BL       sprintf
    202                    sprintf( (char *) SFLASH_CarInfo.MachineVer, "DTGEMS00001" );
   \   00000042   ........           ADR.W    R1,`?<Constant "DTGEMS00001">`
   \   00000046   ....               LDR.N    R0,??DataTable18_10
   \   00000048   ........           BL       sprintf
    203                    sprintf( (char *) SFLASH_CarInfo.Recognition, "11-0033-01" );
   \   0000004C   ........           ADR.W    R1,`?<Constant "11-0033-01">`
   \   00000050   ....               LDR.N    R0,??DataTable18_11
   \   00000052   ........           BL       sprintf
    204                    sprintf( (char *) SFLASH_CarInfo.CarNum, "경기11일1234" );
   \   00000056   ........           ADR.W    R1,`?<Constant "\\260\\346\\261\\34211\\300\\3171234">`
   \   0000005A   ....               LDR.N    R0,??DataTable18_12
   \   0000005C   ........           BL       sprintf
    205                    SFLASH_CarInfo.Verify = SFLASH_VERIFY0_CARINFO;
   \   00000060   ....               LDR.N    R0,??DataTable18_5
   \   00000062   4AF24431           MOVW     R1,#+41796
   \   00000066   A0F85D10           STRH     R1,[R0, #+93]
    206                    Save_SFLASH_CarInfo();
   \   0000006A   ........           BL       Save_SFLASH_CarInfo
    207               }
    208          
    209          	sFLASH_ReadBuffer(Buffer, SFLASH_ReadAddress1, sizeof(SFLASH_Memory) );     
   \                     ??Read_SFLASH_0:
   \   0000006E   B222               MOVS     R2,#+178
   \   00000070   5FF48031           MOVS     R1,#+65536
   \   00000074   ....               LDR.N    R0,??DataTable18
   \   00000076   ........           BL       sFLASH_ReadBuffer
    210          	memcpy(&SFLASH_Memory,Buffer, sizeof(SFLASH_Memory));
   \   0000007A   B222               MOVS     R2,#+178
   \   0000007C   ....               LDR.N    R1,??DataTable18
   \   0000007E   ....               LDR.N    R0,??DataTable18_1
   \   00000080   ........           BL       memcpy
    211          //	printf("%x %x ",SFLASH_Memory.Verify,SFLASH_VERIFY1);
    212          	if( SFLASH_Memory.Verify != SFLASH_VERIFY1_MEMORY )        // Verify를 읽었을때 오류인가?
   \   00000084   ....               LDR.N    R0,??DataTable18_1
   \   00000086   B0F8B000           LDRH     R0,[R0, #+176]
   \   0000008A   4AF24531           MOVW     R1,#+41797
   \   0000008E   8842               CMP      R0,R1
   \   00000090   00F0BF80           BEQ.W    ??Read_SFLASH_1
    213          	{
    214                    memset(&SFLASH_Memory,0,sizeof(SFLASH_Memory));
   \   00000094   B222               MOVS     R2,#+178
   \   00000096   0021               MOVS     R1,#+0
   \   00000098   ....               LDR.N    R0,??DataTable18_1
   \   0000009A   ........           BL       memset
    215                   
    216                    for( i = 0 ; i < 5 ; i ++)
   \   0000009E   0024               MOVS     R4,#+0
   \   000000A0   24E0               B.N      ??Read_SFLASH_2
    217                    {
    218                         strcpy((char*)SFLASH_Memory.Driver[i], (char*)"000000000000000000");
   \                     ??Read_SFLASH_3:
   \   000000A2   ........           ADR.W    R1,`?<Constant "000000000000000000">`
   \   000000A6   E4B2               UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000A8   1320               MOVS     R0,#+19
   \   000000AA   ....               LDR.N    R2,??DataTable18_1
   \   000000AC   00FB0420           MLA      R0,R0,R4,R2
   \   000000B0   401C               ADDS     R0,R0,#+1
   \   000000B2   ........           BL       strcpy
    219                         SFLASH_Memory.Driver[i][10] += i; 
   \   000000B6   E4B2               UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000B8   1320               MOVS     R0,#+19
   \   000000BA   ....               LDR.N    R1,??DataTable18_1
   \   000000BC   00FB0410           MLA      R0,R0,R4,R1
   \   000000C0   C07A               LDRB     R0,[R0, #+11]
   \   000000C2   2018               ADDS     R0,R4,R0
   \   000000C4   E4B2               UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000C6   1321               MOVS     R1,#+19
   \   000000C8   ....               LDR.N    R2,??DataTable18_1
   \   000000CA   01FB0421           MLA      R1,R1,R4,R2
   \   000000CE   C872               STRB     R0,[R1, #+11]
    220                         SFLASH_Memory.Driver[i][17] += i;               
   \   000000D0   E4B2               UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000D2   1320               MOVS     R0,#+19
   \   000000D4   ....               LDR.N    R1,??DataTable18_1
   \   000000D6   00FB0410           MLA      R0,R0,R4,R1
   \   000000DA   807C               LDRB     R0,[R0, #+18]
   \   000000DC   2018               ADDS     R0,R4,R0
   \   000000DE   E4B2               UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000E0   1321               MOVS     R1,#+19
   \   000000E2   ....               LDR.N    R2,??DataTable18_1
   \   000000E4   01FB0421           MLA      R1,R1,R4,R2
   \   000000E8   8874               STRB     R0,[R1, #+18]
    221                    }
   \   000000EA   641C               ADDS     R4,R4,#+1
   \                     ??Read_SFLASH_2:
   \   000000EC   E4B2               UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000EE   052C               CMP      R4,#+5
   \   000000F0   D7D3               BCC.N    ??Read_SFLASH_3
    222                    
    223                    SFLASH_Memory.Car_Maker = 1;
   \   000000F2   ....               LDR.N    R0,??DataTable18_1
   \   000000F4   0121               MOVS     R1,#+1
   \   000000F6   0170               STRB     R1,[R0, #+0]
    224                    
    225                    SFLASH_Memory.RPM_Adjust = 1000;
   \   000000F8   ....               LDR.N    R0,??DataTable18_1
   \   000000FA   4FF47A71           MOV      R1,#+1000
   \   000000FE   0166               STR      R1,[R0, #+96]
    226                    SFLASH_Memory.SPEED_Adjust = 108;
   \   00000100   ....               LDR.N    R0,??DataTable18_1
   \   00000102   6C21               MOVS     R1,#+108
   \   00000104   4166               STR      R1,[R0, #+100]
    227                    
    228                    SFLASH_Memory.Distance_Adjust = 148809;    //0.0196247
   \   00000106   ....               LDR.N    R0,??DataTable18_1
   \   00000108   ....               LDR.N    R1,??DataTable18_13  ;; 0x24549
   \   0000010A   8166               STR      R1,[R0, #+104]
    229                    
    230                    SFLASH_Memory.SPEED_Reference = 50;     // 5.0v
   \   0000010C   ....               LDR.N    R0,??DataTable18_1
   \   0000010E   3221               MOVS     R1,#+50
   \   00000110   A0F86C10           STRH     R1,[R0, #+108]
    231                    SFLASH_Memory.RPM_Reference = 50;       // 5.0v
   \   00000114   ....               LDR.N    R0,??DataTable18_1
   \   00000116   3221               MOVS     R1,#+50
   \   00000118   A0F86E10           STRH     R1,[R0, #+110]
    232                    
    233                    SFLASH_Memory.IO_Reverser = 0;
   \   0000011C   ....               LDR.N    R0,??DataTable18_1
   \   0000011E   0021               MOVS     R1,#+0
   \   00000120   A0F8A010           STRH     R1,[R0, #+160]
    234                    
    235                    SFLASH_Memory.EMS.USE_Enable = 1;
   \   00000124   ....               LDR.N    R0,??DataTable18_1
   \   00000126   0121               MOVS     R1,#+1
   \   00000128   80F88A10           STRB     R1,[R0, #+138]
    236                         
    237                    SFLASH_Memory.EMS.Battery_Volt = 23000 ;
   \   0000012C   ....               LDR.N    R0,??DataTable18_1
   \   0000012E   45F6D811           MOVW     R1,#+23000
   \   00000132   A0F88B10           STRH     R1,[R0, #+139]
    238                    SFLASH_Memory.EMS.ColdWaterTemp_Volt = 5000;
   \   00000136   ....               LDR.N    R0,??DataTable18_1
   \   00000138   41F28831           MOVW     R1,#+5000
   \   0000013C   A0F88D10           STRH     R1,[R0, #+141]
    239                    SFLASH_Memory.EMS.Air_Volt = 4700;
   \   00000140   ....               LDR.N    R0,??DataTable18_1
   \   00000142   41F25C21           MOVW     R1,#+4700
   \   00000146   A0F88F10           STRH     R1,[R0, #+143]
    240                    SFLASH_Memory.EMS.TILTX_Limit = 3;
   \   0000014A   ....               LDR.N    R0,??DataTable18_1
   \   0000014C   0321               MOVS     R1,#+3
   \   0000014E   80F89110           STRB     R1,[R0, #+145]
    241                    SFLASH_Memory.EMS.TILTY_Limit = 3;
   \   00000152   ....               LDR.N    R0,??DataTable18_1
   \   00000154   0321               MOVS     R1,#+3
   \   00000156   80F89210           STRB     R1,[R0, #+146]
    242                    SFLASH_Memory.EMS.LimitSpeed = 10;
   \   0000015A   ....               LDR.N    R0,??DataTable18_1
   \   0000015C   0A21               MOVS     R1,#+10
   \   0000015E   80F89310           STRB     R1,[R0, #+147]
    243                    SFLASH_Memory.EMS.StopTime = 5;
   \   00000162   ....               LDR.N    R0,??DataTable18_1
   \   00000164   0521               MOVS     R1,#+5
   \   00000166   A0F89410           STRH     R1,[R0, #+148]
    244                    
    245                    SFLASH_Memory.FastOverSpeed = 80;
   \   0000016A   ....               LDR.N    R0,??DataTable18_1
   \   0000016C   5021               MOVS     R1,#+80
   \   0000016E   A0F89610           STRH     R1,[R0, #+150]
    246                    SFLASH_Memory.QuickStop = 11;           
   \   00000172   ....               LDR.N    R0,??DataTable18_1
   \   00000174   0B21               MOVS     R1,#+11
   \   00000176   A0F89A10           STRH     R1,[R0, #+154]
    247                    SFLASH_Memory.QuickStart = 8;           //  급출발 기준
   \   0000017A   ....               LDR.N    R0,??DataTable18_1
   \   0000017C   0821               MOVS     R1,#+8
   \   0000017E   A0F89C10           STRH     R1,[R0, #+156]
    248                    SFLASH_Memory.QuickAccel = 8;           // 급가속 기준
   \   00000182   ....               LDR.N    R0,??DataTable18_1
   \   00000184   0821               MOVS     R1,#+8
   \   00000186   A0F89810           STRH     R1,[R0, #+152]
    249                    SFLASH_Memory.OverloadRPM = 1700;
   \   0000018A   ....               LDR.N    R0,??DataTable18_1
   \   0000018C   40F2A461           MOVW     R1,#+1700
   \   00000190   A0F89E10           STRH     R1,[R0, #+158]
    250                    
    251                    
    252                    SFLASH_Memory.Voice_Volume = 100;
   \   00000194   ....               LDR.N    R0,??DataTable18_1
   \   00000196   6421               MOVS     R1,#+100
   \   00000198   80F8A310           STRB     R1,[R0, #+163]
    253                    
    254                    // ------------ TILT ---------------------------------------
    255                    
    256                    SFLASH_Memory.Tilt_Reference = 'Z'; // 틸트 오리지날값
   \   0000019C   ....               LDR.N    R0,??DataTable18_1
   \   0000019E   5A21               MOVS     R1,#+90
   \   000001A0   80F87010           STRB     R1,[R0, #+112]
    257                    SFLASH_Memory.TiltRefX = 0;
   \   000001A4   ....               LDR.N    R0,??DataTable18_1
   \   000001A6   0021               MOVS     R1,#+0
   \   000001A8   C0F87110           STR      R1,[R0, #+113]
    258                    SFLASH_Memory.TiltRefY = 0; 
   \   000001AC   ....               LDR.N    R0,??DataTable18_1
   \   000001AE   0021               MOVS     R1,#+0
   \   000001B0   C0F87510           STR      R1,[R0, #+117]
    259                    SFLASH_Memory.EventRefX = 0;
   \   000001B4   ....               LDR.N    R0,??DataTable18_1
   \   000001B6   0021               MOVS     R1,#+0
   \   000001B8   C0F87910           STR      R1,[R0, #+121]
    260                    SFLASH_Memory.EventRefY = 0;
   \   000001BC   ....               LDR.N    R0,??DataTable18_1
   \   000001BE   0021               MOVS     R1,#+0
   \   000001C0   C0F87D10           STR      R1,[R0, #+125]
    261                    
    262                    // ------------ GPS ---------------------------------------
    263                    SFLASH_Memory.Home.Longitude = 0;                     // X             
   \   000001C4   ....               LDR.N    R0,??DataTable18_1
   \   000001C6   0021               MOVS     R1,#+0
   \   000001C8   C0F88110           STR      R1,[R0, #+129]
    264                    SFLASH_Memory.Home.Latitude = 0;                     // Y   
   \   000001CC   ....               LDR.N    R0,??DataTable18_1
   \   000001CE   0021               MOVS     R1,#+0
   \   000001D0   C0F88510           STR      R1,[R0, #+133]
    265          
    266                    SFLASH_Memory.GPS_EMS_Use = 0;               // GPS EMS 사용 0은 사용하지 않음(전체) 1: 차고지만 사용 2: 구간 EMS 사용         
   \   000001D4   ....               LDR.N    R0,??DataTable18_1
   \   000001D6   0021               MOVS     R1,#+0
   \   000001D8   80F88910           STRB     R1,[R0, #+137]
    267                    SFLASH_Memory.DTG_EMS_Select = 1 ;                // 0은 DTG 1은 EMS
   \   000001DC   ....               LDR.N    R0,??DataTable18_1
   \   000001DE   0121               MOVS     R1,#+1
   \   000001E0   80F8A410           STRB     R1,[R0, #+164]
    268                    
    269                    SFLASH_Memory.Reserve0 = 0;
   \   000001E4   ....               LDR.N    R0,??DataTable18_1
   \   000001E6   0021               MOVS     R1,#+0
   \   000001E8   80F8A510           STRB     R1,[R0, #+165]
    270                    SFLASH_Memory.Reserve1 = 0;
   \   000001EC   ....               LDR.N    R0,??DataTable18_1
   \   000001EE   0021               MOVS     R1,#+0
   \   000001F0   A0F8A610           STRH     R1,[R0, #+166]
    271                    SFLASH_Memory.Reserve2 = 0;
   \   000001F4   ....               LDR.N    R0,??DataTable18_1
   \   000001F6   0021               MOVS     R1,#+0
   \   000001F8   C0F8A810           STR      R1,[R0, #+168]
    272                    SFLASH_Memory.Reserve3 = 0;
   \   000001FC   ....               LDR.N    R0,??DataTable18_1
   \   000001FE   0021               MOVS     R1,#+0
   \   00000200   C0F8AC10           STR      R1,[R0, #+172]
    273                    // ---------- VERIFY ---------------------------------------------
    274                    
    275                    SFLASH_Memory.Verify = SFLASH_VERIFY1_MEMORY;          
   \   00000204   ....               LDR.N    R0,??DataTable18_1
   \   00000206   4AF24531           MOVW     R1,#+41797
   \   0000020A   A0F8B010           STRH     R1,[R0, #+176]
    276                    Save_SFLASH();
   \   0000020E   ........           BL       Save_SFLASH
    277          	}       
    278               
    279          //-----------------------------------------------------------------------------     
    280               
    281               sFLASH_ReadBuffer(Buffer, SFLASH_ReadAddress2, sizeof(GPS_RouteCheck) );     
   \                     ??Read_SFLASH_1:
   \   00000212   4422               MOVS     R2,#+68
   \   00000214   5FF40031           MOVS     R1,#+131072
   \   00000218   ....               LDR.N    R0,??DataTable18
   \   0000021A   ........           BL       sFLASH_ReadBuffer
    282          	memcpy(&GPS_RouteCheck,Buffer, sizeof(GPS_RouteCheck));    	
   \   0000021E   4422               MOVS     R2,#+68
   \   00000220   ....               LDR.N    R1,??DataTable18
   \   00000222   ....               LDR.N    R0,??DataTable18_4
   \   00000224   ........           BL       memcpy
    283               
    284               if( GPS_RouteCheck.Verify != SFLASH_VERIFY2 )        // Verify를 읽었을때 오류인가?
   \   00000228   ....               LDR.N    R0,??DataTable18_4
   \   0000022A   B0F84200           LDRH     R0,[R0, #+66]
   \   0000022E   4AF24631           MOVW     R1,#+41798
   \   00000232   8842               CMP      R0,R1
   \   00000234   0BD0               BEQ.N    ??Read_SFLASH_4
    285               {
    286                    memset(&GPS_RouteCheck,0,sizeof(GPS_RouteCheck));
   \   00000236   4422               MOVS     R2,#+68
   \   00000238   0021               MOVS     R1,#+0
   \   0000023A   ....               LDR.N    R0,??DataTable18_4
   \   0000023C   ........           BL       memset
    287                    GPS_RouteCheck.Verify = SFLASH_VERIFY2;
   \   00000240   ....               LDR.N    R0,??DataTable18_4
   \   00000242   4AF24631           MOVW     R1,#+41798
   \   00000246   A0F84210           STRH     R1,[R0, #+66]
    288                    Save_GPS();
   \   0000024A   ........           BL       Save_GPS
    289               }
    290               
    291          //-----------------------------------------------------------------------------
    292               
    293          	sFLASH_ReadBuffer(Buffer, SFLASH_ReadAddress3, sizeof(SFLASH_Wifi) );     
   \                     ??Read_SFLASH_4:
   \   0000024E   4922               MOVS     R2,#+73
   \   00000250   5FF44031           MOVS     R1,#+196608
   \   00000254   ....               LDR.N    R0,??DataTable18
   \   00000256   ........           BL       sFLASH_ReadBuffer
    294          	memcpy(&SFLASH_Wifi,Buffer, sizeof(SFLASH_Wifi));     
   \   0000025A   4922               MOVS     R2,#+73
   \   0000025C   ....               LDR.N    R1,??DataTable18
   \   0000025E   ....               LDR.N    R0,??DataTable18_3
   \   00000260   ........           BL       memcpy
    295               
    296               if(SFLASH_Wifi.Verify != SFLASH_VERIFY3_WIFI)
   \   00000264   ....               LDR.N    R0,??DataTable18_3
   \   00000266   B0F84700           LDRH     R0,[R0, #+71]
   \   0000026A   4AF24731           MOVW     R1,#+41799
   \   0000026E   8842               CMP      R0,R1
   \   00000270   1AD0               BEQ.N    ??Read_SFLASH_5
    297               {
    298                    strcpy((char * )SFLASH_Wifi.SSID ,"TAEHO");
   \   00000272   ........           ADR.W    R1,`?<Constant "TAEHO">`
   \   00000276   ....               LDR.N    R0,??DataTable18_3
   \   00000278   ........           BL       strcpy
    299                    strcpy((char * )SFLASH_Wifi.WWPA ,"taeho9901");
   \   0000027C   ........           ADR.W    R1,`?<Constant "taeho9901">`
   \   00000280   ....               LDR.N    R0,??DataTable18_14
   \   00000282   ........           BL       strcpy
    300                    strcpy((char * )SFLASH_Wifi.ServerIP ,"118.107.161.70");
   \   00000286   ........           ADR.W    R1,`?<Constant "118.107.161.70">`
   \   0000028A   ....               LDR.N    R0,??DataTable18_15
   \   0000028C   ........           BL       strcpy
    301                    strcpy((char * )SFLASH_Wifi.ServerPort ,"9513");          
   \   00000290   ........           ADR.W    R1,`?<Constant "9513">`
   \   00000294   ....               LDR.N    R0,??DataTable18_16
   \   00000296   ........           BL       strcpy
    302                    SFLASH_Wifi.Verify = SFLASH_VERIFY3_WIFI;
   \   0000029A   ....               LDR.N    R0,??DataTable18_3
   \   0000029C   4AF24731           MOVW     R1,#+41799
   \   000002A0   A0F84710           STRH     R1,[R0, #+71]
    303                    Save_SFLASH_Wifi();
   \   000002A4   ........           BL       Save_SFLASH_Wifi
    304               }
    305          	     
    306          //-----------------------------------------------------------------------------
    307               
    308          	// SFLASH 데이터를 세팅값에 넣어준다.
    309          	DataSetting();       
   \                     ??Read_SFLASH_5:
   \   000002A8   ........           BL       DataSetting
    310          
    311          	sFLASH_ReadBuffer((uint8_t *)&LookUpTable.LUT, SFLASH_ReadAddress4, sizeof(LookUpTable) );     
   \   000002AC   41F23A02           MOVW     R2,#+4154
   \   000002B0   5FF48021           MOVS     R1,#+262144
   \   000002B4   ....               LDR.N    R0,??DataTable18_2
   \   000002B6   ........           BL       sFLASH_ReadBuffer
    312          //	memcpy(,Buffer, sizeof(LookUpTable));
    313          
    314               if( LookUpTable.Verify != SFLASH_VERIFY4 )
   \   000002BA   ....               LDR.N    R0,??DataTable18_17
   \   000002BC   0088               LDRH     R0,[R0, #+0]
   \   000002BE   4AF24831           MOVW     R1,#+41800
   \   000002C2   8842               CMP      R0,R1
   \   000002C4   0AD0               BEQ.N    ??Read_SFLASH_6
    315               {
    316                    if(NAND_BuildLUT(0) == NAND_OK)
   \   000002C6   0020               MOVS     R0,#+0
   \   000002C8   ........           BL       NAND_BuildLUT
   \   000002CC   0028               CMP      R0,#+0
   \   000002CE   05D1               BNE.N    ??Read_SFLASH_6
    317                    {
    318                         LookUpTable.Verify = SFLASH_VERIFY4;
   \   000002D0   ....               LDR.N    R0,??DataTable18_17
   \   000002D2   4AF24831           MOVW     R1,#+41800
   \   000002D6   0180               STRH     R1,[R0, #+0]
    319                         Save_LookupTable();
   \   000002D8   ........           BL       Save_LookupTable
    320                    }
    321               }
    322          }
   \                     ??Read_SFLASH_6:
   \   000002DC   10BD               POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18:
   \   00000000   ........           DC32     Buffer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_1:
   \   00000000   ........           DC32     SFLASH_Memory

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_2:
   \   00000000   ........           DC32     LookUpTable

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_3:
   \   00000000   ........           DC32     SFLASH_Wifi

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_4:
   \   00000000   ........           DC32     GPS_RouteCheck

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_5:
   \   00000000   ........           DC32     SFLASH_CarInfo

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_6:
   \   00000000   ........           DC32     Info

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_7:
   \   00000000   ........           DC32     Set_Info

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_8:
   \   00000000   00247449           DC32     0x49742400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_9:
   \   00000000   ........           DC32     SFLASH_CarInfo+0x14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_10:
   \   00000000   ........           DC32     SFLASH_CarInfo+0x28

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_11:
   \   00000000   ........           DC32     SFLASH_CarInfo+0x3C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_12:
   \   00000000   ........           DC32     SFLASH_CarInfo+0x50

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_13:
   \   00000000   49450200           DC32     0x24549

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_14:
   \   00000000   ........           DC32     SFLASH_Wifi+0x1E

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_15:
   \   00000000   ........           DC32     SFLASH_Wifi+0x32

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_16:
   \   00000000   ........           DC32     SFLASH_Wifi+0x42

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_17:
   \   00000000   ........           DC32     LookUpTable+0x1038

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "EMS110818">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   454D53313130       DC8 69, 77, 83, 49, 49, 48, 56, 49, 56, 0
   \              38313800    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "1X21WK11000000">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   31583231574B       DC8 49, 88, 50, 49, 87, 75, 49, 49, 48, 48
   \              31313030    
   \   0000000A   303030300000       DC8 48, 48, 48, 48, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "DTGEMS00001">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   445447454D53       DC8 68, 84, 71, 69, 77, 83, 48, 48, 48, 48
   \              30303030    
   \   0000000A   3100               DC8 49, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "11-0033-01">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   31312D303033       DC8 49, 49, 45, 48, 48, 51, 51, 45, 48, 49
   \              332D3031    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\260\\346\\261\\34211\\300\\3171234">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   B0E6B1E23131       DC8 176, 230, 177, 226, 49, 49, 192, 207, 49, 50
   \              C0CF3132    
   \   0000000A   333400000000       DC8 51, 52, 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "000000000000000000">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   303030303030       DC8 48, 48, 48, 48, 48, 48, 48, 48, 48, 48
   \              30303030    
   \   0000000A   303030303030       DC8 48, 48, 48, 48, 48, 48, 48, 48, 0, 0
   \              30300000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "TAEHO">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   544145484F00       DC8 84, 65, 69, 72, 79, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "taeho9901">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   746165686F39       DC8 116, 97, 101, 104, 111, 57, 57, 48, 49, 0
   \              39303100    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "118.107.161.70">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   3131382E3130       DC8 49, 49, 56, 46, 49, 48, 55, 46, 49, 54
   \              372E3136    
   \   0000000A   312E37300000       DC8 49, 46, 55, 48, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "9513">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   393531330000       DC8 57, 53, 49, 51, 0, 0, 0, 0
   \              0000        

   Maximum stack usage in bytes:

     Function            .cstack
     --------            -------
     DataLoad                 0
     DataSetting              8
     Read_SFLASH              8
     Save_GPS                 8
     Save_LookupTable         8
     Save_SFLASH              8
     Save_SFLASH_CarInfo      8
     Save_SFLASH_Wifi         8
     Verify_SFLASH          184
     memcpy                   8
     memset                   8


   Section sizes:

     Function/Label                               Bytes
     --------------                               -----
     memcpy                                         14
     memset                                         20
     Verify_SFLASH                                  80
     Save_LookupTable                               44
     Save_SFLASH_Wifi                               40
     Save_GPS                                       40
     Save_SFLASH_CarInfo                            36
     Save_SFLASH                                    44
     DataLoad                                       16
     DataSetting                                    94
     Read_SFLASH                                   734
     ??DataTable18                                   4
     ??DataTable18_1                                 4
     ??DataTable18_2                                 4
     ??DataTable18_3                                 4
     ??DataTable18_4                                 4
     ??DataTable18_5                                 4
     ??DataTable18_6                                 4
     ??DataTable18_7                                 4
     ??DataTable18_8                                 4
     ??DataTable18_9                                 4
     ??DataTable18_10                                4
     ??DataTable18_11                                4
     ??DataTable18_12                                4
     ??DataTable18_13                                4
     ??DataTable18_14                                4
     ??DataTable18_15                                4
     ??DataTable18_16                                4
     ??DataTable18_17                                4
     ?<Constant "EMS110818">                        12
     ?<Constant "1X21WK11000000">                   16
     ?<Constant "DTGEMS00001">                      12
     ?<Constant "11-0033-01">                       12
     ?<Constant "\260\346\261\34211\300\3171234">   16
     ?<Constant "000000000000000000">               20
     ?<Constant "TAEHO">                             8
     ?<Constant "taeho9901">                        12
     ?<Constant "118.107.161.70">                   16
     ?<Constant "9513">                              8

 
 1 366 bytes in section .text
 
 1 332 bytes of CODE memory (+ 34 bytes shared)

Errors: none
Warnings: 1
