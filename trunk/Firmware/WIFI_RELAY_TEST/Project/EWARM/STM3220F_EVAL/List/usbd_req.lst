###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.1.52143/W32 for ARM     16/May/2011  15:08:17 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\¹¬ÀÛ¾÷\[ NewDTG ]\ÀÚ·á\STM32F2xx_StdPeriph_Lib_V0.0.4 #
#                    \STM32F2xx_StdPeriph_Lib_V0.0.4\Libraries\STM32_USB_Devi #
#                    ce_Library\Core\src\usbd_req.c                           #
#    Command line =  "D:\¹¬ÀÛ¾÷\[ NewDTG ]\ÀÚ·á\STM32F2xx_StdPeriph_Lib_V0.0. #
#                    4\STM32F2xx_StdPeriph_Lib_V0.0.4\Libraries\STM32_USB_Dev #
#                    ice_Library\Core\src\usbd_req.c" -D                      #
#                    USE_STDPERIPH_DRIVER -D STM32F2XX -D USE_STM3220F_EVAL   #
#                    -D USE_USB_OTG_FS -D USE_ULPI_PHY -lC "D:\¹¬ÀÛ¾÷\[       #
#                    NewDTG ]\ÀÚ·á\STM32F2xx_StdPeriph_Lib_V0.0.4\STM32F2xx_S #
#                    tdPeriph_Lib_V0.0.4\Project\STM32F2xx_StdPeriph_Template #
#                    \EWARM\STM3220F_EVAL\List\" -lA "D:\¹¬ÀÛ¾÷\[ NewDTG      #
#                    ]\ÀÚ·á\STM32F2xx_StdPeriph_Lib_V0.0.4\STM32F2xx_StdPerip #
#                    h_Lib_V0.0.4\Project\STM32F2xx_StdPeriph_Template\EWARM\ #
#                    STM3220F_EVAL\List\" -o "D:\¹¬ÀÛ¾÷\[ NewDTG              #
#                    ]\ÀÚ·á\STM32F2xx_StdPeriph_Lib_V0.0.4\STM32F2xx_StdPerip #
#                    h_Lib_V0.0.4\Project\STM32F2xx_StdPeriph_Template\EWARM\ #
#                    STM3220F_EVAL\Obj\" --no_cse --no_unroll --no_inline     #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files\IAR        #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I "D:\¹¬ÀÛ¾÷\[ NewDTG                              #
#                    ]\ÀÚ·á\STM32F2xx_StdPeriph_Lib_V0.0.4\STM32F2xx_StdPerip #
#                    h_Lib_V0.0.4\Project\STM32F2xx_StdPeriph_Template\EWARM\ #
#                    ..\" -I "D:\¹¬ÀÛ¾÷\[ NewDTG                              #
#                    ]\ÀÚ·á\STM32F2xx_StdPeriph_Lib_V0.0.4\STM32F2xx_StdPerip #
#                    h_Lib_V0.0.4\Project\STM32F2xx_StdPeriph_Template\EWARM\ #
#                    ..\..\..\Libraries\CMSIS\CM3\CoreSupport\" -I            #
#                    "D:\¹¬ÀÛ¾÷\[ NewDTG ]\ÀÚ·á\STM32F2xx_StdPeriph_Lib_V0.0. #
#                    4\STM32F2xx_StdPeriph_Lib_V0.0.4\Project\STM32F2xx_StdPe #
#                    riph_Template\EWARM\..\..\..\Libraries\CMSIS\CM3\DeviceS #
#                    upport\ST\STM32F2xx\" -I "D:\¹¬ÀÛ¾÷\[ NewDTG             #
#                    ]\ÀÚ·á\STM32F2xx_StdPeriph_Lib_V0.0.4\STM32F2xx_StdPerip #
#                    h_Lib_V0.0.4\Project\STM32F2xx_StdPeriph_Template\EWARM\ #
#                    ..\..\..\Libraries\STM32F2xx_StdPeriph_Driver\inc\" -I   #
#                    "D:\¹¬ÀÛ¾÷\[ NewDTG ]\ÀÚ·á\STM32F2xx_StdPeriph_Lib_V0.0. #
#                    4\STM32F2xx_StdPeriph_Lib_V0.0.4\Project\STM32F2xx_StdPe #
#                    riph_Template\EWARM\..\..\..\Utilities\STM32_EVAL\" -I   #
#                    "D:\¹¬ÀÛ¾÷\[ NewDTG ]\ÀÚ·á\STM32F2xx_StdPeriph_Lib_V0.0. #
#                    4\STM32F2xx_StdPeriph_Lib_V0.0.4\Project\STM32F2xx_StdPe #
#                    riph_Template\EWARM\..\..\..\Utilities\STM32_EVAL\Common #
#                    \" -I "D:\¹¬ÀÛ¾÷\[ NewDTG ]\ÀÚ·á\STM32F2xx_StdPeriph_Lib #
#                    _V0.0.4\STM32F2xx_StdPeriph_Lib_V0.0.4\Project\STM32F2xx #
#                    _StdPeriph_Template\EWARM\..\..\..\Utilities\STM32_EVAL\ #
#                    STM3220F_EVAL\" -I "D:\¹¬ÀÛ¾÷\[ NewDTG                   #
#                    ]\ÀÚ·á\STM32F2xx_StdPeriph_Lib_V0.0.4\STM32F2xx_StdPerip #
#                    h_Lib_V0.0.4\Project\STM32F2xx_StdPeriph_Template\EWARM\ #
#                    ..\..\..\Libraries\STM32_USB_OTG_Driver\inc\" -I         #
#                    "D:\¹¬ÀÛ¾÷\[ NewDTG ]\ÀÚ·á\STM32F2xx_StdPeriph_Lib_V0.0. #
#                    4\STM32F2xx_StdPeriph_Lib_V0.0.4\Project\STM32F2xx_StdPe #
#                    riph_Template\EWARM\..\..\..\Libraries\STM32_USB_Device_ #
#                    Library\Core\inc\" -I "D:\¹¬ÀÛ¾÷\[ NewDTG                #
#                    ]\ÀÚ·á\STM32F2xx_StdPeriph_Lib_V0.0.4\STM32F2xx_StdPerip #
#                    h_Lib_V0.0.4\Project\STM32F2xx_StdPeriph_Template\EWARM\ #
#                    ..\..\..\Libraries\STM32_USB_Device_Library\Class\msc\in #
#                    c\" -Ol --use_c++_inline                                 #
#    List file    =  D:\¹¬ÀÛ¾÷\[ NewDTG ]\ÀÚ·á\STM32F2xx_StdPeriph_Lib_V0.0.4 #
#                    \STM32F2xx_StdPeriph_Lib_V0.0.4\Project\STM32F2xx_StdPer #
#                    iph_Template\EWARM\STM3220F_EVAL\List\usbd_req.lst       #
#    Object file  =  D:\¹¬ÀÛ¾÷\[ NewDTG ]\ÀÚ·á\STM32F2xx_StdPeriph_Lib_V0.0.4 #
#                    \STM32F2xx_StdPeriph_Lib_V0.0.4\Project\STM32F2xx_StdPer #
#                    iph_Template\EWARM\STM3220F_EVAL\Obj\usbd_req.o          #
#                                                                             #
#                                                                             #
###############################################################################

D:\¹¬ÀÛ¾÷\[ NewDTG ]\ÀÚ·á\STM32F2xx_StdPeriph_Lib_V0.0.4\STM32F2xx_StdPeriph_Lib_V0.0.4\Libraries\STM32_USB_Device_Library\Core\src\usbd_req.c
      1          /**
      2            ******************************************************************************
      3            * @file    usbd_req.c
      4            * @author  MCD Application Team
      5            * @version V0.0.1
      6            * @date    11/12/2010
      7            * @brief   This file provides the standard USB requests following chapter 9.
      8            ******************************************************************************
      9            * @copy
     10            *
     11            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     12            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     13            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     14            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     15            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     16            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     17            *
     18            * <h2><center>&copy; COPYRIGHT 2010 STMicroelectronics</center></h2>
     19            */ 
     20          
     21          /* Includes ------------------------------------------------------------------*/
     22          #include "usbd_req.h"
     23          #include "usbd_ioreq.h"
     24          #include "usbd_desc.h"
     25          
     26          
     27          /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
     28            * @{
     29            */
     30          
     31          
     32          /** @defgroup USBD_REQ 
     33            * @brief USB standard requests module
     34            * @{
     35            */ 
     36          
     37          /** @defgroup USBD_REQ_Private_TypesDefinitions
     38            * @{
     39            */ 
     40          /**
     41            * @}
     42            */ 
     43          
     44          
     45          /** @defgroup USBD_REQ_Private_Defines
     46            * @{
     47            */ 
     48          
     49          /**
     50            * @}
     51            */ 
     52          
     53          
     54          /** @defgroup USBD_REQ_Private_Macros
     55            * @{
     56            */ 
     57          /**
     58            * @}
     59            */ 
     60          
     61          
     62          /** @defgroup USBD_REQ_Private_Variables
     63            * @{
     64            */ 
     65          
     66          #ifdef USB_OTG_HS_INTERNAL_DMA_ENABLED 
     67          #pragma data_alignment =  4
     68          #endif 

   \                                 In section .bss, align 4
     69          uint32_t USBD_ep_status      = 0; 
   \                     USBD_ep_status:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     70          uint32_t  USBD_default_cfg    = 0;
   \                     USBD_default_cfg:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     71          uint32_t  USBD_cfg_status     = 0;  
   \                     USBD_cfg_status:
   \   00000000                      DS8 4
     72          /**
     73            * @}
     74            */ 
     75          
     76          
     77          /** @defgroup USBD_REQ_Private_FunctionPrototypes
     78            * @{
     79            */ 
     80          static void USBD_GetDescriptor(USB_OTG_CORE_HANDLE  *pdev, 
     81                                         USB_SETUP_REQ *req);
     82          
     83          static void USBD_SetAddress(USB_OTG_CORE_HANDLE  *pdev, 
     84                                      USB_SETUP_REQ *req);
     85          
     86          static void USBD_SetConfig(USB_OTG_CORE_HANDLE  *pdev, 
     87                                     USB_SETUP_REQ *req);
     88          
     89          static void USBD_GetConfig(USB_OTG_CORE_HANDLE  *pdev, 
     90                                     USB_SETUP_REQ *req);
     91          
     92          static void USBD_GetStatus(USB_OTG_CORE_HANDLE  *pdev, 
     93                                     USB_SETUP_REQ *req);
     94          
     95          static void USBD_SetFeature(USB_OTG_CORE_HANDLE  *pdev, 
     96                                      USB_SETUP_REQ *req);
     97          
     98          static void USBD_ClrFeature(USB_OTG_CORE_HANDLE  *pdev, 
     99                                      USB_SETUP_REQ *req);
    100          /**
    101            * @}
    102            */ 
    103          
    104          
    105          /** @defgroup USBD_REQ_Private_Functions
    106            * @{
    107            */ 
    108          
    109          
    110          /**
    111          * @brief  USBD_StdDevReq
    112          *         Handle standard usb device requests
    113          * @param  pdev: device instance
    114          * @param  req: usb request
    115          * @retval status
    116          */

   \                                 In section .text, align 2, keep-with-next
    117          USBD_Status  USBD_StdDevReq (USB_OTG_CORE_HANDLE  *pdev, USB_SETUP_REQ  *req)
    118          {
   \                     USBD_StdDevReq:
   \   00000000   10B5               PUSH     {R4,LR}
    119            USBD_Status ret = USBD_OK;  
   \   00000002   0024               MOVS     R4,#+0
    120            
    121            switch (req->bRequest) 
   \   00000004   4A78               LDRB     R2,[R1, #+1]
   \   00000006   002A               CMP      R2,#+0
   \   00000008   18D0               BEQ.N    ??USBD_StdDevReq_0
   \   0000000A   012A               CMP      R2,#+1
   \   0000000C   1CD0               BEQ.N    ??USBD_StdDevReq_1
   \   0000000E   032A               CMP      R2,#+3
   \   00000010   17D0               BEQ.N    ??USBD_StdDevReq_2
   \   00000012   052A               CMP      R2,#+5
   \   00000014   09D0               BEQ.N    ??USBD_StdDevReq_3
   \   00000016   062A               CMP      R2,#+6
   \   00000018   04D0               BEQ.N    ??USBD_StdDevReq_4
   \   0000001A   082A               CMP      R2,#+8
   \   0000001C   0BD0               BEQ.N    ??USBD_StdDevReq_5
   \   0000001E   092A               CMP      R2,#+9
   \   00000020   06D0               BEQ.N    ??USBD_StdDevReq_6
   \   00000022   14E0               B.N      ??USBD_StdDevReq_7
    122            {
    123            case USB_REQ_GET_DESCRIPTOR: 
    124              
    125              USBD_GetDescriptor (pdev, req) ;
   \                     ??USBD_StdDevReq_4:
   \   00000024   ........           BL       USBD_GetDescriptor
    126              break;
   \   00000028   13E0               B.N      ??USBD_StdDevReq_8
    127              
    128            case USB_REQ_SET_ADDRESS:                      
    129              USBD_SetAddress(pdev, req);
   \                     ??USBD_StdDevReq_3:
   \   0000002A   ........           BL       USBD_SetAddress
    130              break;
   \   0000002E   10E0               B.N      ??USBD_StdDevReq_8
    131              
    132            case USB_REQ_SET_CONFIGURATION:                    
    133              USBD_SetConfig (pdev , req);
   \                     ??USBD_StdDevReq_6:
   \   00000030   ........           BL       USBD_SetConfig
    134              break;
   \   00000034   0DE0               B.N      ??USBD_StdDevReq_8
    135              
    136            case USB_REQ_GET_CONFIGURATION:                 
    137              USBD_GetConfig (pdev , req);
   \                     ??USBD_StdDevReq_5:
   \   00000036   ........           BL       USBD_GetConfig
    138              break;
   \   0000003A   0AE0               B.N      ??USBD_StdDevReq_8
    139              
    140            case USB_REQ_GET_STATUS:                                  
    141              USBD_GetStatus (pdev , req);
   \                     ??USBD_StdDevReq_0:
   \   0000003C   ........           BL       USBD_GetStatus
    142              break;
   \   00000040   07E0               B.N      ??USBD_StdDevReq_8
    143              
    144              
    145            case USB_REQ_SET_FEATURE:   
    146              USBD_SetFeature (pdev , req);    
   \                     ??USBD_StdDevReq_2:
   \   00000042   ........           BL       USBD_SetFeature
    147              break;
   \   00000046   04E0               B.N      ??USBD_StdDevReq_8
    148              
    149            case USB_REQ_CLEAR_FEATURE:                                   
    150              USBD_ClrFeature (pdev , req);
   \                     ??USBD_StdDevReq_1:
   \   00000048   ........           BL       USBD_ClrFeature
    151              break;
   \   0000004C   01E0               B.N      ??USBD_StdDevReq_8
    152              
    153            default:  
    154              USBD_CtlError(pdev , req);
   \                     ??USBD_StdDevReq_7:
   \   0000004E   ........           BL       USBD_CtlError
    155              break;
    156            }
    157            
    158            return ret;
   \                     ??USBD_StdDevReq_8:
   \   00000052   2000               MOVS     R0,R4
   \   00000054   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000056   10BD               POP      {R4,PC}          ;; return
    159          }
    160          
    161          /**
    162          * @brief  USBD_StdItfReq
    163          *         Handle standard usb interface requests
    164          * @param  pdev: USB OTG device instance
    165          * @param  req: usb request
    166          * @retval status
    167          */

   \                                 In section .text, align 2, keep-with-next
    168          USBD_Status  USBD_StdItfReq (USB_OTG_CORE_HANDLE  *pdev, USB_SETUP_REQ  *req)
    169          {
   \                     USBD_StdItfReq:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   0D00               MOVS     R5,R1
    170            USBD_Status ret = USBD_OK; 
   \   00000006   0026               MOVS     R6,#+0
    171            
    172            switch (pdev->dev.device_status) 
   \   00000008   94F81201           LDRB     R0,[R4, #+274]
   \   0000000C   0328               CMP      R0,#+3
   \   0000000E   15D1               BNE.N    ??USBD_StdItfReq_0
    173            {
    174            case USB_OTG_CONFIGURED:
    175              
    176              if (LOBYTE(req->wIndex)< USBD_CFG_MAX_NUM) 
   \   00000010   A888               LDRH     R0,[R5, #+4]
   \   00000012   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000014   0128               CMP      R0,#+1
   \   00000016   0CD2               BCS.N    ??USBD_StdItfReq_1
    177              {
    178                pdev->dev.class_cb->Setup (pdev, req); 
   \   00000018   2900               MOVS     R1,R5
   \   0000001A   2000               MOVS     R0,R4
   \   0000001C   D4F8E025           LDR      R2,[R4, #+1504]
   \   00000020   9268               LDR      R2,[R2, #+8]
   \   00000022   9047               BLX      R2
    179                
    180                if(req->wLength == 0)
   \   00000024   E888               LDRH     R0,[R5, #+6]
   \   00000026   0028               CMP      R0,#+0
   \   00000028   07D1               BNE.N    ??USBD_StdItfReq_2
    181                {
    182                   USBD_CtlSendStatus(pdev);
   \   0000002A   2000               MOVS     R0,R4
   \   0000002C   ........           BL       USBD_CtlSendStatus
   \   00000030   03E0               B.N      ??USBD_StdItfReq_2
    183                }
    184              } 
    185              else 
    186              {                                               
    187                 USBD_CtlError(pdev , req);
   \                     ??USBD_StdItfReq_1:
   \   00000032   2900               MOVS     R1,R5
   \   00000034   2000               MOVS     R0,R4
   \   00000036   ........           BL       USBD_CtlError
    188              }
    189              break;
   \                     ??USBD_StdItfReq_2:
   \   0000003A   03E0               B.N      ??USBD_StdItfReq_3
    190              
    191            default:
    192               USBD_CtlError(pdev , req);
   \                     ??USBD_StdItfReq_0:
   \   0000003C   2900               MOVS     R1,R5
   \   0000003E   2000               MOVS     R0,R4
   \   00000040   ........           BL       USBD_CtlError
    193              break;
    194            }
    195            return ret;
   \                     ??USBD_StdItfReq_3:
   \   00000044   3000               MOVS     R0,R6
   \   00000046   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000048   70BD               POP      {R4-R6,PC}       ;; return
    196          }
    197          
    198          /**
    199          * @brief  USBD_StdEPReq
    200          *         Handle standard usb endpoint requests
    201          * @param  pdev: USB OTG device instance
    202          * @param  req: usb request
    203          * @retval status
    204          */

   \                                 In section .text, align 2, keep-with-next
    205          USBD_Status  USBD_StdEPReq (USB_OTG_CORE_HANDLE  *pdev, USB_SETUP_REQ  *req)
    206          {
   \                     USBD_StdEPReq:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0500               MOVS     R5,R0
   \   00000004   0E00               MOVS     R6,R1
    207            
    208            uint8_t   ep_addr;
    209            USBD_Status ret = USBD_OK; 
   \   00000006   0024               MOVS     R4,#+0
    210            
    211            ep_addr  = LOBYTE(req->wIndex);   
   \   00000008   B188               LDRH     R1,[R6, #+4]
    212            
    213            switch (req->bRequest) 
   \   0000000A   7078               LDRB     R0,[R6, #+1]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   60D0               BEQ.N    ??USBD_StdEPReq_0
   \   00000010   0128               CMP      R0,#+1
   \   00000012   30D0               BEQ.N    ??USBD_StdEPReq_1
   \   00000014   0328               CMP      R0,#+3
   \   00000016   40F09F80           BNE.W    ??USBD_StdEPReq_2
    214            {
    215              
    216            case USB_REQ_SET_FEATURE :
    217              
    218              switch (pdev->dev.device_status) 
   \                     ??USBD_StdEPReq_3:
   \   0000001A   95F81201           LDRB     R0,[R5, #+274]
   \   0000001E   0228               CMP      R0,#+2
   \   00000020   02D0               BEQ.N    ??USBD_StdEPReq_4
   \   00000022   0328               CMP      R0,#+3
   \   00000024   0BD0               BEQ.N    ??USBD_StdEPReq_5
   \   00000026   21E0               B.N      ??USBD_StdEPReq_6
    219              {
    220              case USB_OTG_ADDRESSED:          
    221                if ((ep_addr != 0x00) && (ep_addr != 0x80)) 
   \                     ??USBD_StdEPReq_4:
   \   00000028   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002A   0029               CMP      R1,#+0
   \   0000002C   06D0               BEQ.N    ??USBD_StdEPReq_7
   \   0000002E   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000030   8029               CMP      R1,#+128
   \   00000032   03D0               BEQ.N    ??USBD_StdEPReq_7
    222                {
    223                  DCD_EP_Stall(pdev , ep_addr);
   \   00000034   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000036   2800               MOVS     R0,R5
   \   00000038   ........           BL       DCD_EP_Stall
    224                }
    225                break;	
   \                     ??USBD_StdEPReq_7:
   \   0000003C   1AE0               B.N      ??USBD_StdEPReq_8
    226                
    227              case USB_OTG_CONFIGURED:   
    228                if (req->wValue == USB_FEATURE_EP_HALT)
   \                     ??USBD_StdEPReq_5:
   \   0000003E   7088               LDRH     R0,[R6, #+2]
   \   00000040   0028               CMP      R0,#+0
   \   00000042   09D1               BNE.N    ??USBD_StdEPReq_9
    229                {
    230                  if ((ep_addr != 0x00) && (ep_addr != 0x80)) 
   \   00000044   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000046   0029               CMP      R1,#+0
   \   00000048   06D0               BEQ.N    ??USBD_StdEPReq_9
   \   0000004A   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000004C   8029               CMP      R1,#+128
   \   0000004E   03D0               BEQ.N    ??USBD_StdEPReq_9
    231                  { 
    232                    DCD_EP_Stall(pdev , ep_addr);
   \   00000050   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000052   2800               MOVS     R0,R5
   \   00000054   ........           BL       DCD_EP_Stall
    233                    
    234                  }
    235                }
    236                pdev->dev.class_cb->Setup (pdev, req);   
   \                     ??USBD_StdEPReq_9:
   \   00000058   3100               MOVS     R1,R6
   \   0000005A   2800               MOVS     R0,R5
   \   0000005C   D5F8E025           LDR      R2,[R5, #+1504]
   \   00000060   9268               LDR      R2,[R2, #+8]
   \   00000062   9047               BLX      R2
    237                USBD_CtlSendStatus(pdev);
   \   00000064   2800               MOVS     R0,R5
   \   00000066   ........           BL       USBD_CtlSendStatus
    238                
    239                break;
   \   0000006A   03E0               B.N      ??USBD_StdEPReq_8
    240                
    241              default:                         
    242                USBD_CtlError(pdev , req);
   \                     ??USBD_StdEPReq_6:
   \   0000006C   3100               MOVS     R1,R6
   \   0000006E   2800               MOVS     R0,R5
   \   00000070   ........           BL       USBD_CtlError
    243                break;    
    244              }
    245              break;
   \                     ??USBD_StdEPReq_8:
   \   00000074   70E0               B.N      ??USBD_StdEPReq_10
    246              
    247            case USB_REQ_CLEAR_FEATURE :
    248              
    249              switch (pdev->dev.device_status) 
   \                     ??USBD_StdEPReq_1:
   \   00000076   95F81201           LDRB     R0,[R5, #+274]
   \   0000007A   0228               CMP      R0,#+2
   \   0000007C   02D0               BEQ.N    ??USBD_StdEPReq_11
   \   0000007E   0328               CMP      R0,#+3
   \   00000080   0BD0               BEQ.N    ??USBD_StdEPReq_12
   \   00000082   21E0               B.N      ??USBD_StdEPReq_13
    250              {
    251              case USB_OTG_ADDRESSED:          
    252                if ((ep_addr != 0x00) && (ep_addr != 0x80)) 
   \                     ??USBD_StdEPReq_11:
   \   00000084   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000086   0029               CMP      R1,#+0
   \   00000088   06D0               BEQ.N    ??USBD_StdEPReq_14
   \   0000008A   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000008C   8029               CMP      R1,#+128
   \   0000008E   03D0               BEQ.N    ??USBD_StdEPReq_14
    253                {
    254                  DCD_EP_Stall(pdev , ep_addr);
   \   00000090   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000092   2800               MOVS     R0,R5
   \   00000094   ........           BL       DCD_EP_Stall
    255                }
    256                break;	
   \                     ??USBD_StdEPReq_14:
   \   00000098   1AE0               B.N      ??USBD_StdEPReq_15
    257                
    258              case USB_OTG_CONFIGURED:   
    259                if (req->wValue == USB_FEATURE_EP_HALT)
   \                     ??USBD_StdEPReq_12:
   \   0000009A   7088               LDRH     R0,[R6, #+2]
   \   0000009C   0028               CMP      R0,#+0
   \   0000009E   12D1               BNE.N    ??USBD_StdEPReq_16
    260                {
    261                  if ((ep_addr != 0x00) && (ep_addr != 0x80)) 
   \   000000A0   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000A2   0029               CMP      R1,#+0
   \   000000A4   0CD0               BEQ.N    ??USBD_StdEPReq_17
   \   000000A6   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000A8   8029               CMP      R1,#+128
   \   000000AA   09D0               BEQ.N    ??USBD_StdEPReq_17
    262                  {        
    263                    DCD_EP_ClrStall(pdev , ep_addr);
   \   000000AC   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000AE   2800               MOVS     R0,R5
   \   000000B0   ........           BL       DCD_EP_ClrStall
    264                    pdev->dev.class_cb->Setup (pdev, req);
   \   000000B4   3100               MOVS     R1,R6
   \   000000B6   2800               MOVS     R0,R5
   \   000000B8   D5F8E025           LDR      R2,[R5, #+1504]
   \   000000BC   9268               LDR      R2,[R2, #+8]
   \   000000BE   9047               BLX      R2
    265                  }
    266                  USBD_CtlSendStatus(pdev);
   \                     ??USBD_StdEPReq_17:
   \   000000C0   2800               MOVS     R0,R5
   \   000000C2   ........           BL       USBD_CtlSendStatus
    267                }
    268                break;
   \                     ??USBD_StdEPReq_16:
   \   000000C6   03E0               B.N      ??USBD_StdEPReq_15
    269                
    270              default:                         
    271                 USBD_CtlError(pdev , req);
   \                     ??USBD_StdEPReq_13:
   \   000000C8   3100               MOVS     R1,R6
   \   000000CA   2800               MOVS     R0,R5
   \   000000CC   ........           BL       USBD_CtlError
    272                break;    
    273              }
    274              break;
   \                     ??USBD_StdEPReq_15:
   \   000000D0   42E0               B.N      ??USBD_StdEPReq_10
    275              
    276            case USB_REQ_GET_STATUS:                  
    277              switch (pdev->dev.device_status) 
   \                     ??USBD_StdEPReq_0:
   \   000000D2   95F81201           LDRB     R0,[R5, #+274]
   \   000000D6   0228               CMP      R0,#+2
   \   000000D8   02D0               BEQ.N    ??USBD_StdEPReq_18
   \   000000DA   0328               CMP      R0,#+3
   \   000000DC   0BD0               BEQ.N    ??USBD_StdEPReq_19
   \   000000DE   36E0               B.N      ??USBD_StdEPReq_20
    278              {
    279              case USB_OTG_ADDRESSED:          
    280                if ((ep_addr != 0x00) && (ep_addr != 0x80)) 
   \                     ??USBD_StdEPReq_18:
   \   000000E0   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000E2   0029               CMP      R1,#+0
   \   000000E4   06D0               BEQ.N    ??USBD_StdEPReq_21
   \   000000E6   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000E8   8029               CMP      R1,#+128
   \   000000EA   03D0               BEQ.N    ??USBD_StdEPReq_21
    281                {
    282                  DCD_EP_Stall(pdev , ep_addr);
   \   000000EC   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000EE   2800               MOVS     R0,R5
   \   000000F0   ........           BL       DCD_EP_Stall
    283                }
    284                break;	
   \                     ??USBD_StdEPReq_21:
   \   000000F4   2FE0               B.N      ??USBD_StdEPReq_22
    285                
    286              case USB_OTG_CONFIGURED:         
    287                
    288                
    289                if ((ep_addr & 0x80)== 0x80)
   \                     ??USBD_StdEPReq_19:
   \   000000F6   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000F8   0806               LSLS     R0,R1,#+24
   \   000000FA   11D5               BPL.N    ??USBD_StdEPReq_23
    290                {
    291                  if(pdev->dev.in_ep[ep_addr & 0x7F].is_stall)
   \   000000FC   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000FE   11F07F00           ANDS     R0,R1,#0x7F
   \   00000102   2821               MOVS     R1,#+40
   \   00000104   01FB0050           MLA      R0,R1,R0,R5
   \   00000108   90F81A01           LDRB     R0,[R0, #+282]
   \   0000010C   0028               CMP      R0,#+0
   \   0000010E   03D0               BEQ.N    ??USBD_StdEPReq_24
    292                  {
    293                    USBD_ep_status = 0x0001;     
   \   00000110   ....               LDR.N    R0,??DataTable9
   \   00000112   0121               MOVS     R1,#+1
   \   00000114   0160               STR      R1,[R0, #+0]
   \   00000116   14E0               B.N      ??USBD_StdEPReq_25
    294                  }
    295                  else
    296                  {
    297                    USBD_ep_status = 0x0000;  
   \                     ??USBD_StdEPReq_24:
   \   00000118   ....               LDR.N    R0,??DataTable9
   \   0000011A   0021               MOVS     R1,#+0
   \   0000011C   0160               STR      R1,[R0, #+0]
   \   0000011E   10E0               B.N      ??USBD_StdEPReq_25
    298                  }
    299                }
    300                else if ((ep_addr & 0x80)== 0x00)
   \                     ??USBD_StdEPReq_23:
   \   00000120   0806               LSLS     R0,R1,#+24
   \   00000122   0ED4               BMI.N    ??USBD_StdEPReq_25
    301                {
    302                  if(pdev->dev.out_ep[ep_addr].is_stall)
   \   00000124   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000126   2820               MOVS     R0,#+40
   \   00000128   00FB0150           MLA      R0,R0,R1,R5
   \   0000012C   90F87203           LDRB     R0,[R0, #+882]
   \   00000130   0028               CMP      R0,#+0
   \   00000132   03D0               BEQ.N    ??USBD_StdEPReq_26
    303                  {
    304                    USBD_ep_status = 0x0001;     
   \   00000134   ....               LDR.N    R0,??DataTable9
   \   00000136   0121               MOVS     R1,#+1
   \   00000138   0160               STR      R1,[R0, #+0]
   \   0000013A   02E0               B.N      ??USBD_StdEPReq_25
    305                  }
    306                  
    307                  else 
    308                  {
    309                    USBD_ep_status = 0x0000;     
   \                     ??USBD_StdEPReq_26:
   \   0000013C   ....               LDR.N    R0,??DataTable9
   \   0000013E   0021               MOVS     R1,#+0
   \   00000140   0160               STR      R1,[R0, #+0]
    310                  }      
    311                }
    312                USBD_CtlSendData (pdev,
    313                                  (uint8_t *)&USBD_ep_status,
    314                                  2);
   \                     ??USBD_StdEPReq_25:
   \   00000142   0222               MOVS     R2,#+2
   \   00000144   ....               LDR.N    R1,??DataTable9
   \   00000146   2800               MOVS     R0,R5
   \   00000148   ........           BL       USBD_CtlSendData
    315                break;
   \   0000014C   03E0               B.N      ??USBD_StdEPReq_22
    316                
    317              default:                         
    318                 USBD_CtlError(pdev , req);
   \                     ??USBD_StdEPReq_20:
   \   0000014E   3100               MOVS     R1,R6
   \   00000150   2800               MOVS     R0,R5
   \   00000152   ........           BL       USBD_CtlError
    319                break;
    320              }
    321              break;
   \                     ??USBD_StdEPReq_22:
   \   00000156   FFE7               B.N      ??USBD_StdEPReq_10
    322              
    323            default:
    324              break;
    325            }
    326            return ret;
   \                     ??USBD_StdEPReq_2:
   \                     ??USBD_StdEPReq_10:
   \   00000158   2000               MOVS     R0,R4
   \   0000015A   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000015C   70BD               POP      {R4-R6,PC}       ;; return
    327          }
    328          /**
    329          * @brief  USBD_GetDescriptor
    330          *         Handle Get Descriptor requests
    331          * @param  pdev: device instance
    332          * @param  req: usb request
    333          * @retval status
    334          */

   \                                 In section .text, align 2, keep-with-next
    335          static void USBD_GetDescriptor(USB_OTG_CORE_HANDLE  *pdev, 
    336                                         USB_SETUP_REQ *req)
    337          {
   \                     USBD_GetDescriptor:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   82B0               SUB      SP,SP,#+8
   \   00000004   0400               MOVS     R4,R0
   \   00000006   0D00               MOVS     R5,R1
    338            uint16_t len;
    339            uint8_t *pbuf;
    340            
    341            switch (req->wValue >> 8)
   \   00000008   6888               LDRH     R0,[R5, #+2]
   \   0000000A   80B2               UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000000C   000A               LSRS     R0,R0,#+8
   \   0000000E   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0128               CMP      R0,#+1
   \   00000012   08D0               BEQ.N    ??USBD_GetDescriptor_0
   \   00000014   0228               CMP      R0,#+2
   \   00000016   27D0               BEQ.N    ??USBD_GetDescriptor_1
   \   00000018   0328               CMP      R0,#+3
   \   0000001A   33D0               BEQ.N    ??USBD_GetDescriptor_2
   \   0000001C   0628               CMP      R0,#+6
   \   0000001E   73D0               BEQ.N    ??USBD_GetDescriptor_3
   \   00000020   0728               CMP      R0,#+7
   \   00000022   76D0               BEQ.N    ??USBD_GetDescriptor_4
   \   00000024   7AE0               B.N      ??USBD_GetDescriptor_5
    342            {
    343            case USB_DESC_TYPE_DEVICE:
    344              len           = USB_SIZ_DEVICE_DESC;
   \                     ??USBD_GetDescriptor_0:
   \   00000026   1220               MOVS     R0,#+18
   \   00000028   ADF80000           STRH     R0,[SP, #+0]
    345              if ((req->wLength == 64) ||( pdev->dev.device_status == USB_OTG_DEFAULT))  
   \   0000002C   E888               LDRH     R0,[R5, #+6]
   \   0000002E   4028               CMP      R0,#+64
   \   00000030   03D0               BEQ.N    ??USBD_GetDescriptor_6
   \   00000032   94F81201           LDRB     R0,[R4, #+274]
   \   00000036   0128               CMP      R0,#+1
   \   00000038   02D1               BNE.N    ??USBD_GetDescriptor_7
    346              {                  
    347                len = 8;
   \                     ??USBD_GetDescriptor_6:
   \   0000003A   0820               MOVS     R0,#+8
   \   0000003C   ADF80000           STRH     R0,[SP, #+0]
    348              }
    349              pbuf          = (uint8_t *)USBD_DeviceDesc;
   \                     ??USBD_GetDescriptor_7:
   \   00000040   ....               LDR.N    R6,??DataTable9_1
    350          #ifdef USB_OTG_HS_CORE
    351              if(pdev->cfg.speed == USB_OTG_SPEED_HIGH  )
    352              { 
    353                pbuf[10] = LOBYTE(USBD_PID_HS);
    354                pbuf[11] = HIBYTE(USBD_PID_HS);
    355              }
    356              else
    357          #endif      
    358              {  
    359                pbuf[10] = LOBYTE(USBD_PID_FS);
   \   00000042   3120               MOVS     R0,#+49
   \   00000044   B072               STRB     R0,[R6, #+10]
    360                pbuf[11] = HIBYTE(USBD_PID_FS);
   \   00000046   3220               MOVS     R0,#+50
   \   00000048   F072               STRB     R0,[R6, #+11]
    361              }      
    362              break;
    363              
    364            case USB_DESC_TYPE_CONFIGURATION:
    365                len           = pdev->dev.class_cb->cfg_desc[2];
    366                pbuf          = (uint8_t *)pdev->dev.class_cb->cfg_desc;
    367          #ifdef USB_OTG_HS_CORE
    368              if((pdev->cfg.speed == USB_OTG_SPEED_FULL )&&
    369                 (pdev->cfg.phy_itface  == USB_OTG_HS_ULPI_PHY))
    370              {
    371                len           = pdev->dev.class_cb->other_cfg_desc[2];
    372                pbuf          = (uint8_t *)pdev->dev.class_cb->other_cfg_desc;
    373              }
    374          #endif  
    375              pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
    376              pdev->dev.pConfig_descriptor = pbuf;    
    377              break;
    378              
    379            case USB_DESC_TYPE_STRING:
    380              pbuf = USBD_StrDesc;
    381              switch ((uint8_t)(req->wValue))
    382              {
    383              case USBD_IDX_LANGID_STR:
    384                len           = USB_SIZ_STRING_LANGID;
    385                pbuf[0]       = len;          
    386                pbuf[1]       = USB_DESC_TYPE_STRING;        
    387                pbuf[2]       = LOBYTE(USBD_LANGID_STRING);    
    388                pbuf[3]       = HIBYTE(USBD_LANGID_STRING);         
    389                break;
    390                
    391              case USBD_IDX_MFC_STR:
    392                USBD_GetString (USBD_MANUFACTURER_STRING, pbuf, &len);
    393                break;
    394                
    395              case USBD_IDX_PRODUCT_STR:
    396          #ifdef USB_OTG_HS_CORE
    397                if(pdev->cfg.speed == USB_OTG_SPEED_HIGH  )
    398                {     
    399                  USBD_GetString (USBD_PRODUCT_HS_STRING, pbuf, &len);
    400                }
    401                else
    402          #endif        
    403                {
    404                  USBD_GetString (USBD_PRODUCT_FS_STRING, pbuf, &len);
    405                }
    406                break;
    407                
    408              case USBD_IDX_SERIAL_STR:
    409          #ifdef USB_OTG_HS_CORE
    410                if(pdev->cfg.speed == USB_OTG_SPEED_HIGH  )
    411                {       
    412                  USBD_GetString (USBD_SERIALNUMBER_HS_STRING, pbuf, &len);
    413                }
    414                else
    415          #endif        
    416                {
    417                  USBD_GetString (USBD_SERIALNUMBER_FS_STRING, pbuf, &len);
    418                }
    419                break;
    420                
    421              case USBD_IDX_CONFIG_STR:
    422          #ifdef USB_OTG_HS_CORE
    423                if(pdev->cfg.speed == USB_OTG_SPEED_HIGH  )
    424                {      
    425                  USBD_GetString (USBD_CONFIGURATION_HS_STRING, pbuf, &len);     
    426                }
    427                else
    428          #endif        
    429                {
    430                  USBD_GetString (USBD_CONFIGURATION_FS_STRING, pbuf, &len);    
    431                }
    432                break;
    433                
    434              case USBD_IDX_INTERFACE_STR:
    435          #ifdef USB_OTG_HS_CORE
    436                if(pdev->cfg.speed == USB_OTG_SPEED_HIGH  )
    437                {       
    438                  USBD_GetString (USBD_INTERFACE_HS_STRING, pbuf, &len);     
    439                }
    440                else
    441          #endif        
    442                {
    443                  USBD_GetString (USBD_INTERFACE_FS_STRING, pbuf, &len);   
    444                }
    445                break;
    446                
    447              default:
    448                 USBD_CtlError(pdev , req);
    449                return;
    450              }
    451              break;
    452            case USB_DESC_TYPE_DEVICE_QUALIFIER:                   
    453          #ifdef USB_OTG_HS_CORE
    454              if(pdev->cfg.speed == USB_OTG_SPEED_HIGH  )   
    455              {
    456                USBD_DeviceQualifierDesc[4]= pdev->dev.class_cb->cfg_desc[14];
    457                USBD_DeviceQualifierDesc[5]= pdev->dev.class_cb->cfg_desc[15];
    458                USBD_DeviceQualifierDesc[6]= pdev->dev.class_cb->cfg_desc[16];
    459                
    460                pbuf = USBD_DeviceQualifierDesc;
    461                len  = USB_LEN_DEV_QUALIFIER_DESC;
    462                break;
    463              }
    464              else
    465              {
    466                USBD_CtlError(pdev , req);
    467                return;
    468              }
    469          #else
    470                USBD_CtlError(pdev , req);
    471                return;
    472          #endif    
    473          
    474            case USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION:
    475          #ifdef USB_OTG_HS_CORE   
    476          
    477              if(pdev->cfg.speed == USB_OTG_SPEED_HIGH  )   
    478              {
    479                len           = pdev->dev.class_cb->other_cfg_desc[2];
    480                pbuf          = (uint8_t *)pdev->dev.class_cb->other_cfg_desc;
    481                pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
    482                break; 
    483              }
    484              else
    485              {
    486                USBD_CtlError(pdev , req);
    487                return;
    488              }
    489          #else
    490                USBD_CtlError(pdev , req);
    491                return;
    492          #endif     
    493          
    494              
    495            default: 
    496               USBD_CtlError(pdev , req);
    497              return;
    498            }
    499            
    500            if((len != 0)&& (req->wLength != 0))
   \                     ??USBD_GetDescriptor_8:
   \   0000004A   BDF80000           LDRH     R0,[SP, #+0]
   \   0000004E   0028               CMP      R0,#+0
   \   00000050   72D0               BEQ.N    ??USBD_GetDescriptor_9
   \   00000052   E888               LDRH     R0,[R5, #+6]
   \   00000054   0028               CMP      R0,#+0
   \   00000056   6FD0               BEQ.N    ??USBD_GetDescriptor_9
    501            {
    502              
    503              len = MIN(len , req->wLength);
   \   00000058   BDF80000           LDRH     R0,[SP, #+0]
   \   0000005C   E988               LDRH     R1,[R5, #+6]
   \   0000005E   8842               CMP      R0,R1
   \   00000060   61D2               BCS.N    ??USBD_GetDescriptor_10
   \   00000062   BDF80000           LDRH     R0,[SP, #+0]
   \   00000066   5FE0               B.N      ??USBD_GetDescriptor_11
   \                     ??USBD_GetDescriptor_1:
   \   00000068   D4F8E005           LDR      R0,[R4, #+1504]
   \   0000006C   006A               LDR      R0,[R0, #+32]
   \   0000006E   8078               LDRB     R0,[R0, #+2]
   \   00000070   ADF80000           STRH     R0,[SP, #+0]
   \   00000074   D4F8E005           LDR      R0,[R4, #+1504]
   \   00000078   066A               LDR      R6,[R0, #+32]
   \   0000007A   0220               MOVS     R0,#+2
   \   0000007C   7070               STRB     R0,[R6, #+1]
   \   0000007E   C4F8E865           STR      R6,[R4, #+1512]
   \   00000082   E2E7               B.N      ??USBD_GetDescriptor_8
   \                     ??USBD_GetDescriptor_2:
   \   00000084   ....               LDR.N    R6,??DataTable9_2
   \   00000086   A878               LDRB     R0,[R5, #+2]
   \   00000088   0028               CMP      R0,#+0
   \   0000008A   08D0               BEQ.N    ??USBD_GetDescriptor_12
   \   0000008C   0228               CMP      R0,#+2
   \   0000008E   1AD0               BEQ.N    ??USBD_GetDescriptor_13
   \   00000090   12D3               BCC.N    ??USBD_GetDescriptor_14
   \   00000092   0428               CMP      R0,#+4
   \   00000094   25D0               BEQ.N    ??USBD_GetDescriptor_15
   \   00000096   1DD3               BCC.N    ??USBD_GetDescriptor_16
   \   00000098   0528               CMP      R0,#+5
   \   0000009A   29D0               BEQ.N    ??USBD_GetDescriptor_17
   \   0000009C   2FE0               B.N      ??USBD_GetDescriptor_18
   \                     ??USBD_GetDescriptor_12:
   \   0000009E   0420               MOVS     R0,#+4
   \   000000A0   ADF80000           STRH     R0,[SP, #+0]
   \   000000A4   BDF80000           LDRH     R0,[SP, #+0]
   \   000000A8   3070               STRB     R0,[R6, #+0]
   \   000000AA   0320               MOVS     R0,#+3
   \   000000AC   7070               STRB     R0,[R6, #+1]
   \   000000AE   0920               MOVS     R0,#+9
   \   000000B0   B070               STRB     R0,[R6, #+2]
   \   000000B2   0420               MOVS     R0,#+4
   \   000000B4   F070               STRB     R0,[R6, #+3]
   \                     ??USBD_GetDescriptor_19:
   \   000000B6   C8E7               B.N      ??USBD_GetDescriptor_8
   \                     ??USBD_GetDescriptor_14:
   \   000000B8   00AA               ADD      R2,SP,#+0
   \   000000BA   3100               MOVS     R1,R6
   \   000000BC   ........           ADR.W    R0,`?<Constant "STMicroelectronics">`
   \   000000C0   ........           BL       USBD_GetString
   \   000000C4   F7E7               B.N      ??USBD_GetDescriptor_19
   \                     ??USBD_GetDescriptor_13:
   \   000000C6   00AA               ADD      R2,SP,#+0
   \   000000C8   3100               MOVS     R1,R6
   \   000000CA   ........           ADR.W    R0,`?<Constant "Mass Storage in FS Mode">`
   \   000000CE   ........           BL       USBD_GetString
   \   000000D2   F0E7               B.N      ??USBD_GetDescriptor_19
   \                     ??USBD_GetDescriptor_16:
   \   000000D4   00AA               ADD      R2,SP,#+0
   \   000000D6   3100               MOVS     R1,R6
   \   000000D8   ........           ADR.W    R0,`?<Constant "00000000001B">`
   \   000000DC   ........           BL       USBD_GetString
   \   000000E0   E9E7               B.N      ??USBD_GetDescriptor_19
   \                     ??USBD_GetDescriptor_15:
   \   000000E2   00AA               ADD      R2,SP,#+0
   \   000000E4   3100               MOVS     R1,R6
   \   000000E6   ........           ADR.W    R0,`?<Constant "MSC Config">`
   \   000000EA   ........           BL       USBD_GetString
   \   000000EE   E2E7               B.N      ??USBD_GetDescriptor_19
   \                     ??USBD_GetDescriptor_17:
   \   000000F0   00AA               ADD      R2,SP,#+0
   \   000000F2   3100               MOVS     R1,R6
   \   000000F4   ........           ADR.W    R0,`?<Constant "MSC Interface">`
   \   000000F8   ........           BL       USBD_GetString
   \   000000FC   DBE7               B.N      ??USBD_GetDescriptor_19
   \                     ??USBD_GetDescriptor_18:
   \   000000FE   2900               MOVS     R1,R5
   \   00000100   2000               MOVS     R0,R4
   \   00000102   ........           BL       USBD_CtlError
   \   00000106   17E0               B.N      ??USBD_GetDescriptor_20
   \                     ??USBD_GetDescriptor_3:
   \   00000108   2900               MOVS     R1,R5
   \   0000010A   2000               MOVS     R0,R4
   \   0000010C   ........           BL       USBD_CtlError
   \   00000110   12E0               B.N      ??USBD_GetDescriptor_20
   \                     ??USBD_GetDescriptor_4:
   \   00000112   2900               MOVS     R1,R5
   \   00000114   2000               MOVS     R0,R4
   \   00000116   ........           BL       USBD_CtlError
   \   0000011A   0DE0               B.N      ??USBD_GetDescriptor_20
   \                     ??USBD_GetDescriptor_5:
   \   0000011C   2900               MOVS     R1,R5
   \   0000011E   2000               MOVS     R0,R4
   \   00000120   ........           BL       USBD_CtlError
   \   00000124   08E0               B.N      ??USBD_GetDescriptor_20
   \                     ??USBD_GetDescriptor_10:
   \   00000126   E888               LDRH     R0,[R5, #+6]
   \                     ??USBD_GetDescriptor_11:
   \   00000128   ADF80000           STRH     R0,[SP, #+0]
    504              
    505              USBD_CtlSendData (pdev, 
    506                                pbuf,
    507                                len);
   \   0000012C   BDF80020           LDRH     R2,[SP, #+0]
   \   00000130   3100               MOVS     R1,R6
   \   00000132   2000               MOVS     R0,R4
   \   00000134   ........           BL       USBD_CtlSendData
    508            }
    509            
    510          }
   \                     ??USBD_GetDescriptor_9:
   \                     ??USBD_GetDescriptor_20:
   \   00000138   73BD               POP      {R0,R1,R4-R6,PC}  ;; return
    511          
    512          /**
    513          * @brief  USBD_SetAddress
    514          *         Set device address
    515          * @param  pdev: device instance
    516          * @param  req: usb request
    517          * @retval status
    518          */

   \                                 In section .text, align 2, keep-with-next
    519          static void USBD_SetAddress(USB_OTG_CORE_HANDLE  *pdev, 
    520                                      USB_SETUP_REQ *req)
    521          {
   \                     USBD_SetAddress:
   \   00000000   38B5               PUSH     {R3-R5,LR}
   \   00000002   0400               MOVS     R4,R0
    522            uint8_t  dev_addr; 
    523            
    524            if ((req->wIndex == 0) && (req->wLength == 0)) 
   \   00000004   8888               LDRH     R0,[R1, #+4]
   \   00000006   0028               CMP      R0,#+0
   \   00000008   22D1               BNE.N    ??USBD_SetAddress_0
   \   0000000A   C888               LDRH     R0,[R1, #+6]
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   1FD1               BNE.N    ??USBD_SetAddress_0
    525            {
    526              dev_addr = (uint8_t)(req->wValue) & 0x7F;     
   \   00000010   8878               LDRB     R0,[R1, #+2]
   \   00000012   10F07F05           ANDS     R5,R0,#0x7F
    527              
    528              if (pdev->dev.device_status == USB_OTG_CONFIGURED) 
   \   00000016   94F81201           LDRB     R0,[R4, #+274]
   \   0000001A   0328               CMP      R0,#+3
   \   0000001C   03D1               BNE.N    ??USBD_SetAddress_1
    529              {
    530                USBD_CtlError(pdev , req);
   \   0000001E   2000               MOVS     R0,R4
   \   00000020   ........           BL       USBD_CtlError
   \   00000024   17E0               B.N      ??USBD_SetAddress_2
    531              } 
    532              else 
    533              {
    534                pdev->dev.device_address = dev_addr;
   \                     ??USBD_SetAddress_1:
   \   00000026   84F81351           STRB     R5,[R4, #+275]
    535                DCD_EP_SetAddress(pdev, dev_addr);               
   \   0000002A   2900               MOVS     R1,R5
   \   0000002C   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002E   2000               MOVS     R0,R4
   \   00000030   ........           BL       DCD_EP_SetAddress
    536                USBD_CtlSendStatus(pdev);                         
   \   00000034   2000               MOVS     R0,R4
   \   00000036   ........           BL       USBD_CtlSendStatus
    537                
    538                if (dev_addr != 0) 
   \   0000003A   EDB2               UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000003C   002D               CMP      R5,#+0
   \   0000003E   03D0               BEQ.N    ??USBD_SetAddress_3
    539                {
    540                  pdev->dev.device_status  = USB_OTG_ADDRESSED;
   \   00000040   0220               MOVS     R0,#+2
   \   00000042   84F81201           STRB     R0,[R4, #+274]
   \   00000046   06E0               B.N      ??USBD_SetAddress_2
    541                } 
    542                else 
    543                {
    544                  pdev->dev.device_status  = USB_OTG_DEFAULT; 
   \                     ??USBD_SetAddress_3:
   \   00000048   0120               MOVS     R0,#+1
   \   0000004A   84F81201           STRB     R0,[R4, #+274]
   \   0000004E   02E0               B.N      ??USBD_SetAddress_2
    545                }
    546              }
    547            } 
    548            else 
    549            {
    550               USBD_CtlError(pdev , req);                        
   \                     ??USBD_SetAddress_0:
   \   00000050   2000               MOVS     R0,R4
   \   00000052   ........           BL       USBD_CtlError
    551            } 
    552          }
   \                     ??USBD_SetAddress_2:
   \   00000056   31BD               POP      {R0,R4,R5,PC}    ;; return
    553          
    554          /**
    555          * @brief  USBD_SetConfig
    556          *         Handle Set device configuration request
    557          * @param  pdev: device instance
    558          * @param  req: usb request
    559          * @retval status
    560          */

   \                                 In section .text, align 2, keep-with-next
    561          static void USBD_SetConfig(USB_OTG_CORE_HANDLE  *pdev, 
    562                                     USB_SETUP_REQ *req)
    563          {
   \                     USBD_SetConfig:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   0400               MOVS     R4,R0
    564            
    565            static uint8_t  cfgidx;
    566            
    567            cfgidx = (uint8_t)(req->wValue);                 
   \   00000004   4888               LDRH     R0,[R1, #+2]
   \   00000006   ....               LDR.N    R2,??DataTable9_3
   \   00000008   1070               STRB     R0,[R2, #+0]
    568            
    569            if (cfgidx > USBD_CFG_MAX_NUM ) 
   \   0000000A   ....               LDR.N    R0,??DataTable9_3
   \   0000000C   0078               LDRB     R0,[R0, #+0]
   \   0000000E   0228               CMP      R0,#+2
   \   00000010   03D3               BCC.N    ??USBD_SetConfig_0
    570            {            
    571               USBD_CtlError(pdev , req);                              
   \   00000012   2000               MOVS     R0,R4
   \   00000014   ........           BL       USBD_CtlError
   \   00000018   51E0               B.N      ??USBD_SetConfig_1
    572            } 
    573            else 
    574            {
    575              switch (pdev->dev.device_status) 
   \                     ??USBD_SetConfig_0:
   \   0000001A   94F81201           LDRB     R0,[R4, #+274]
   \   0000001E   0228               CMP      R0,#+2
   \   00000020   02D0               BEQ.N    ??USBD_SetConfig_2
   \   00000022   0328               CMP      R0,#+3
   \   00000024   18D0               BEQ.N    ??USBD_SetConfig_3
   \   00000026   47E0               B.N      ??USBD_SetConfig_4
    576              {
    577              case USB_OTG_ADDRESSED:
    578                if (cfgidx) 
   \                     ??USBD_SetConfig_2:
   \   00000028   ....               LDR.N    R0,??DataTable9_3
   \   0000002A   0078               LDRB     R0,[R0, #+0]
   \   0000002C   0028               CMP      R0,#+0
   \   0000002E   0FD0               BEQ.N    ??USBD_SetConfig_5
    579                {                                			   							   							   				
    580                  pdev->dev.device_config = cfgidx;
   \   00000030   ....               LDR.N    R0,??DataTable9_3
   \   00000032   0078               LDRB     R0,[R0, #+0]
   \   00000034   84F81001           STRB     R0,[R4, #+272]
    581                  pdev->dev.device_status = USB_OTG_CONFIGURED;
   \   00000038   0320               MOVS     R0,#+3
   \   0000003A   84F81201           STRB     R0,[R4, #+274]
    582                  USBD_SetCfg(pdev , cfgidx);
   \   0000003E   ....               LDR.N    R0,??DataTable9_3
   \   00000040   0178               LDRB     R1,[R0, #+0]
   \   00000042   2000               MOVS     R0,R4
   \   00000044   ........           BL       USBD_SetCfg
    583                  USBD_CtlSendStatus(pdev);
   \   00000048   2000               MOVS     R0,R4
   \   0000004A   ........           BL       USBD_CtlSendStatus
   \   0000004E   02E0               B.N      ??USBD_SetConfig_6
    584                }
    585                else 
    586                {
    587                   USBD_CtlSendStatus(pdev);
   \                     ??USBD_SetConfig_5:
   \   00000050   2000               MOVS     R0,R4
   \   00000052   ........           BL       USBD_CtlSendStatus
    588                }
    589                break;
   \                     ??USBD_SetConfig_6:
   \   00000056   32E0               B.N      ??USBD_SetConfig_1
    590                
    591              case USB_OTG_CONFIGURED:
    592                if (cfgidx == 0) 
   \                     ??USBD_SetConfig_3:
   \   00000058   ....               LDR.N    R0,??DataTable9_3
   \   0000005A   0078               LDRB     R0,[R0, #+0]
   \   0000005C   0028               CMP      R0,#+0
   \   0000005E   0FD1               BNE.N    ??USBD_SetConfig_7
    593                {                           
    594                  pdev->dev.device_status = USB_OTG_ADDRESSED;
   \   00000060   0220               MOVS     R0,#+2
   \   00000062   84F81201           STRB     R0,[R4, #+274]
    595                  pdev->dev.device_config = cfgidx;          
   \   00000066   ....               LDR.N    R0,??DataTable9_3
   \   00000068   0078               LDRB     R0,[R0, #+0]
   \   0000006A   84F81001           STRB     R0,[R4, #+272]
    596                  USBD_ClrCfg(pdev , cfgidx);
   \   0000006E   ....               LDR.N    R0,??DataTable9_3
   \   00000070   0178               LDRB     R1,[R0, #+0]
   \   00000072   2000               MOVS     R0,R4
   \   00000074   ........           BL       USBD_ClrCfg
    597                  USBD_CtlSendStatus(pdev);
   \   00000078   2000               MOVS     R0,R4
   \   0000007A   ........           BL       USBD_CtlSendStatus
   \   0000007E   1AE0               B.N      ??USBD_SetConfig_8
    598                  
    599                } 
    600                else  if (cfgidx != pdev->dev.device_config) 
   \                     ??USBD_SetConfig_7:
   \   00000080   ....               LDR.N    R0,??DataTable9_3
   \   00000082   0078               LDRB     R0,[R0, #+0]
   \   00000084   94F81011           LDRB     R1,[R4, #+272]
   \   00000088   8842               CMP      R0,R1
   \   0000008A   11D0               BEQ.N    ??USBD_SetConfig_9
    601                {
    602                  /* Clear old configuration */
    603                  USBD_ClrCfg(pdev , pdev->dev.device_config);
   \   0000008C   94F81011           LDRB     R1,[R4, #+272]
   \   00000090   2000               MOVS     R0,R4
   \   00000092   ........           BL       USBD_ClrCfg
    604                  
    605                  /* set new configuration */
    606                  pdev->dev.device_config = cfgidx;
   \   00000096   ....               LDR.N    R0,??DataTable9_3
   \   00000098   0078               LDRB     R0,[R0, #+0]
   \   0000009A   84F81001           STRB     R0,[R4, #+272]
    607                  USBD_SetCfg(pdev , cfgidx);
   \   0000009E   ....               LDR.N    R0,??DataTable9_3
   \   000000A0   0178               LDRB     R1,[R0, #+0]
   \   000000A2   2000               MOVS     R0,R4
   \   000000A4   ........           BL       USBD_SetCfg
    608                  USBD_CtlSendStatus(pdev);
   \   000000A8   2000               MOVS     R0,R4
   \   000000AA   ........           BL       USBD_CtlSendStatus
   \   000000AE   02E0               B.N      ??USBD_SetConfig_8
    609                }
    610                else
    611                {
    612                  USBD_CtlSendStatus(pdev);
   \                     ??USBD_SetConfig_9:
   \   000000B0   2000               MOVS     R0,R4
   \   000000B2   ........           BL       USBD_CtlSendStatus
    613                }
    614                break;
   \                     ??USBD_SetConfig_8:
   \   000000B6   02E0               B.N      ??USBD_SetConfig_1
    615                
    616              default:					
    617                 USBD_CtlError(pdev , req);                     
   \                     ??USBD_SetConfig_4:
   \   000000B8   2000               MOVS     R0,R4
   \   000000BA   ........           BL       USBD_CtlError
    618                break;
    619              }
    620            }
    621          }
   \                     ??USBD_SetConfig_1:
   \   000000BE   10BD               POP      {R4,PC}          ;; return

   \                                 In section .bss, align 1
   \                     ??cfgidx:
   \   00000000                      DS8 1
    622          
    623          /**
    624          * @brief  USBD_GetConfig
    625          *         Handle Get device configuration request
    626          * @param  pdev: device instance
    627          * @param  req: usb request
    628          * @retval status
    629          */

   \                                 In section .text, align 2, keep-with-next
    630          static void USBD_GetConfig(USB_OTG_CORE_HANDLE  *pdev, 
    631                                     USB_SETUP_REQ *req)
    632          {
   \                     USBD_GetConfig:
   \   00000000   80B5               PUSH     {R7,LR}
    633           
    634            if (req->wLength != 1) 
   \   00000002   CA88               LDRH     R2,[R1, #+6]
   \   00000004   012A               CMP      R2,#+1
   \   00000006   02D0               BEQ.N    ??USBD_GetConfig_0
    635            {                   
    636               USBD_CtlError(pdev , req);
   \   00000008   ........           BL       USBD_CtlError
   \   0000000C   13E0               B.N      ??USBD_GetConfig_1
    637            }
    638            else 
    639            {
    640              switch (pdev->dev.device_status )  
   \                     ??USBD_GetConfig_0:
   \   0000000E   90F81221           LDRB     R2,[R0, #+274]
   \   00000012   022A               CMP      R2,#+2
   \   00000014   02D0               BEQ.N    ??USBD_GetConfig_2
   \   00000016   032A               CMP      R2,#+3
   \   00000018   05D0               BEQ.N    ??USBD_GetConfig_3
   \   0000001A   0AE0               B.N      ??USBD_GetConfig_4
    641              {
    642              case USB_OTG_ADDRESSED:                     
    643                
    644                USBD_CtlSendData (pdev, 
    645                                  (uint8_t *)&USBD_default_cfg,
    646                                  1);
   \                     ??USBD_GetConfig_2:
   \   0000001C   0122               MOVS     R2,#+1
   \   0000001E   ....               LDR.N    R1,??DataTable9_4
   \   00000020   ........           BL       USBD_CtlSendData
    647                break;
   \   00000024   07E0               B.N      ??USBD_GetConfig_1
    648                
    649              case USB_OTG_CONFIGURED:                   
    650                
    651                USBD_CtlSendData (pdev, 
    652                                  &pdev->dev.device_config,
    653                                  1);
   \                     ??USBD_GetConfig_3:
   \   00000026   0122               MOVS     R2,#+1
   \   00000028   00F21011           ADDW     R1,R0,#+272
   \   0000002C   ........           BL       USBD_CtlSendData
    654                break;
   \   00000030   01E0               B.N      ??USBD_GetConfig_1
    655                
    656              default:
    657                 USBD_CtlError(pdev , req);
   \                     ??USBD_GetConfig_4:
   \   00000032   ........           BL       USBD_CtlError
    658                break;
    659              }
    660            }
    661          }
   \                     ??USBD_GetConfig_1:
   \   00000036   01BD               POP      {R0,PC}          ;; return
    662          
    663          /**
    664          * @brief  USBD_GetStatus
    665          *         Handle Get Status request
    666          * @param  pdev: device instance
    667          * @param  req: usb request
    668          * @retval status
    669          */

   \                                 In section .text, align 2, keep-with-next
    670          static void USBD_GetStatus(USB_OTG_CORE_HANDLE  *pdev, 
    671                                     USB_SETUP_REQ *req)
    672          {
   \                     USBD_GetStatus:
   \   00000000   80B5               PUSH     {R7,LR}
    673            
    674            switch (pdev->dev.device_status) 
   \   00000002   90F81221           LDRB     R2,[R0, #+274]
   \   00000006   921E               SUBS     R2,R2,#+2
   \   00000008   012A               CMP      R2,#+1
   \   0000000A   0FD8               BHI.N    ??USBD_GetStatus_0
    675            {
    676            case USB_OTG_ADDRESSED:
    677            case USB_OTG_CONFIGURED:
    678              
    679              if (pdev->dev.DevRemoteWakeup) 
   \                     ??USBD_GetStatus_1:
   \   0000000C   D0F81411           LDR      R1,[R0, #+276]
   \   00000010   0029               CMP      R1,#+0
   \   00000012   03D0               BEQ.N    ??USBD_GetStatus_2
    680              {
    681                USBD_cfg_status = USB_CONFIG_SELF_POWERED | USB_CONFIG_REMOTE_WAKEUP;                                
   \   00000014   ....               LDR.N    R1,??DataTable9_5
   \   00000016   0322               MOVS     R2,#+3
   \   00000018   0A60               STR      R2,[R1, #+0]
   \   0000001A   02E0               B.N      ??USBD_GetStatus_3
    682              }
    683              else
    684              {
    685                USBD_cfg_status = USB_CONFIG_SELF_POWERED;   
   \                     ??USBD_GetStatus_2:
   \   0000001C   ....               LDR.N    R1,??DataTable9_5
   \   0000001E   0122               MOVS     R2,#+1
   \   00000020   0A60               STR      R2,[R1, #+0]
    686              }
    687              
    688              USBD_CtlSendData (pdev, 
    689                                (uint8_t *)&USBD_cfg_status,
    690                                1);
   \                     ??USBD_GetStatus_3:
   \   00000022   0122               MOVS     R2,#+1
   \   00000024   ....               LDR.N    R1,??DataTable9_5
   \   00000026   ........           BL       USBD_CtlSendData
    691              break;
   \   0000002A   01E0               B.N      ??USBD_GetStatus_4
    692              
    693            default :
    694              USBD_CtlError(pdev , req);                        
   \                     ??USBD_GetStatus_0:
   \   0000002C   ........           BL       USBD_CtlError
    695              break;
    696            }
    697          }
   \                     ??USBD_GetStatus_4:
   \   00000030   01BD               POP      {R0,PC}          ;; return
    698          
    699          /**
    700          * @brief  USBD_SetFeature
    701          *         Handle Set device feature request
    702          * @param  pdev: device instance
    703          * @param  req: usb request
    704          * @retval status
    705          */

   \                                 In section .text, align 2, keep-with-next
    706          static void USBD_SetFeature(USB_OTG_CORE_HANDLE  *pdev, 
    707                                      USB_SETUP_REQ *req)
    708          {
   \                     USBD_SetFeature:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   0400               MOVS     R4,R0
    709            if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
   \   00000004   4888               LDRH     R0,[R1, #+2]
   \   00000006   0128               CMP      R0,#+1
   \   00000008   0AD1               BNE.N    ??USBD_SetFeature_0
    710            {
    711              pdev->dev.DevRemoteWakeup = 1;  
   \   0000000A   0120               MOVS     R0,#+1
   \   0000000C   C4F81401           STR      R0,[R4, #+276]
    712              pdev->dev.class_cb->Setup (pdev, req);   
   \   00000010   2000               MOVS     R0,R4
   \   00000012   D4F8E025           LDR      R2,[R4, #+1504]
   \   00000016   9268               LDR      R2,[R2, #+8]
   \   00000018   9047               BLX      R2
    713              USBD_CtlSendStatus(pdev);
   \   0000001A   2000               MOVS     R0,R4
   \   0000001C   ........           BL       USBD_CtlSendStatus
    714            }
    715          }
   \                     ??USBD_SetFeature_0:
   \   00000020   10BD               POP      {R4,PC}          ;; return
    716          
    717          /**
    718          * @brief  USBD_ClrFeature
    719          *         Handle clear device feature request
    720          * @param  pdev: device instance
    721          * @param  req: usb request
    722          * @retval status
    723          */

   \                                 In section .text, align 2, keep-with-next
    724          static void USBD_ClrFeature(USB_OTG_CORE_HANDLE  *pdev, 
    725                                      USB_SETUP_REQ *req)
    726          {
   \                     USBD_ClrFeature:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   0400               MOVS     R4,R0
    727            switch (pdev->dev.device_status)
   \   00000004   94F81201           LDRB     R0,[R4, #+274]
   \   00000008   801E               SUBS     R0,R0,#+2
   \   0000000A   0128               CMP      R0,#+1
   \   0000000C   0ED8               BHI.N    ??USBD_ClrFeature_0
    728            {
    729            case USB_OTG_ADDRESSED:
    730            case USB_OTG_CONFIGURED:
    731              if (req->wValue == USB_FEATURE_REMOTE_WAKEUP) 
   \                     ??USBD_ClrFeature_1:
   \   0000000E   4888               LDRH     R0,[R1, #+2]
   \   00000010   0128               CMP      R0,#+1
   \   00000012   0AD1               BNE.N    ??USBD_ClrFeature_2
    732              {
    733                pdev->dev.DevRemoteWakeup = 0; 
   \   00000014   0020               MOVS     R0,#+0
   \   00000016   C4F81401           STR      R0,[R4, #+276]
    734                pdev->dev.class_cb->Setup (pdev, req);   
   \   0000001A   2000               MOVS     R0,R4
   \   0000001C   D4F8E025           LDR      R2,[R4, #+1504]
   \   00000020   9268               LDR      R2,[R2, #+8]
   \   00000022   9047               BLX      R2
    735                USBD_CtlSendStatus(pdev);
   \   00000024   2000               MOVS     R0,R4
   \   00000026   ........           BL       USBD_CtlSendStatus
    736              }
    737              break;
   \                     ??USBD_ClrFeature_2:
   \   0000002A   02E0               B.N      ??USBD_ClrFeature_3
    738              
    739            default :
    740               USBD_CtlError(pdev , req);
   \                     ??USBD_ClrFeature_0:
   \   0000002C   2000               MOVS     R0,R4
   \   0000002E   ........           BL       USBD_CtlError
    741              break;
    742            }
    743          }
   \                     ??USBD_ClrFeature_3:
   \   00000032   10BD               POP      {R4,PC}          ;; return
    744          
    745          /**
    746          * @brief  USBD_ParseSetupRequest 
    747          *         Copy buffer into setup structure
    748          * @param  pdev: device instance
    749          * @param  req: usb request
    750          * @retval None
    751          */
    752          

   \                                 In section .text, align 2, keep-with-next
    753          void USBD_ParseSetupRequest( USB_OTG_CORE_HANDLE  *pdev,
    754                                      USB_SETUP_REQ *req)
    755          {
    756            req->bmRequest     = *(uint8_t *)  (pdev->dev.setup_packet);
   \                     USBD_ParseSetupRequest:
   \   00000000   90F8C825           LDRB     R2,[R0, #+1480]
   \   00000004   0A70               STRB     R2,[R1, #+0]
    757            req->bRequest      = *(uint8_t *)  (pdev->dev.setup_packet +  1);
   \   00000006   90F8C925           LDRB     R2,[R0, #+1481]
   \   0000000A   4A70               STRB     R2,[R1, #+1]
    758            req->wValue        = SWAPBYTE      (pdev->dev.setup_packet +  2);
   \   0000000C   90F8CA25           LDRB     R2,[R0, #+1482]
   \   00000010   90F8CB35           LDRB     R3,[R0, #+1483]
   \   00000014   12EB0322           ADDS     R2,R2,R3, LSL #+8
   \   00000018   4A80               STRH     R2,[R1, #+2]
    759            req->wIndex        = SWAPBYTE      (pdev->dev.setup_packet +  4);
   \   0000001A   90F8CC25           LDRB     R2,[R0, #+1484]
   \   0000001E   90F8CD35           LDRB     R3,[R0, #+1485]
   \   00000022   12EB0322           ADDS     R2,R2,R3, LSL #+8
   \   00000026   8A80               STRH     R2,[R1, #+4]
    760            req->wLength       = SWAPBYTE      (pdev->dev.setup_packet +  6);
   \   00000028   90F8CE25           LDRB     R2,[R0, #+1486]
   \   0000002C   90F8CF35           LDRB     R3,[R0, #+1487]
   \   00000030   12EB0322           ADDS     R2,R2,R3, LSL #+8
   \   00000034   CA80               STRH     R2,[R1, #+6]
    761            
    762            pdev->dev.in_ep[0].ctl_data_len = req->wLength  ;
   \   00000036   C988               LDRH     R1,[R1, #+6]
   \   00000038   C0F83C11           STR      R1,[R0, #+316]
    763            pdev->dev.device_state = USB_OTG_EP0_SETUP;
   \   0000003C   0121               MOVS     R1,#+1
   \   0000003E   80F81111           STRB     R1,[R0, #+273]
    764          }
   \   00000042   7047               BX       LR               ;; return
    765          
    766          /**
    767          * @brief  USBD_CtlError 
    768          *         Handle USB low level Error
    769          * @param  pdev: device instance
    770          * @param  req: usb request
    771          * @retval None
    772          */
    773          

   \                                 In section .text, align 2, keep-with-next
    774          void USBD_CtlError( USB_OTG_CORE_HANDLE  *pdev,
    775                                      USB_SETUP_REQ *req)
    776          {
   \                     USBD_CtlError:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   0400               MOVS     R4,R0
    777            if((req->bmRequest & 0x80) == 0x80)
   \   00000004   0878               LDRB     R0,[R1, #+0]
   \   00000006   0006               LSLS     R0,R0,#+24
   \   00000008   04D5               BPL.N    ??USBD_CtlError_0
    778            {
    779              DCD_EP_Stall(pdev , 0x80);
   \   0000000A   8021               MOVS     R1,#+128
   \   0000000C   2000               MOVS     R0,R4
   \   0000000E   ........           BL       DCD_EP_Stall
   \   00000012   0BE0               B.N      ??USBD_CtlError_1
    780            }
    781            else 
    782            {
    783              if(req->wLength == 0)
   \                     ??USBD_CtlError_0:
   \   00000014   C888               LDRH     R0,[R1, #+6]
   \   00000016   0028               CMP      R0,#+0
   \   00000018   04D1               BNE.N    ??USBD_CtlError_2
    784              {
    785                 DCD_EP_Stall(pdev , 0x80);
   \   0000001A   8021               MOVS     R1,#+128
   \   0000001C   2000               MOVS     R0,R4
   \   0000001E   ........           BL       DCD_EP_Stall
   \   00000022   03E0               B.N      ??USBD_CtlError_1
    786              }
    787              else
    788              {
    789                DCD_EP_Stall(pdev , 0);
   \                     ??USBD_CtlError_2:
   \   00000024   0021               MOVS     R1,#+0
   \   00000026   2000               MOVS     R0,R4
   \   00000028   ........           BL       DCD_EP_Stall
    790              }
    791            }
    792            USB_OTG_EP0_OutStart(pdev);  
   \                     ??USBD_CtlError_1:
   \   0000002C   2000               MOVS     R0,R4
   \   0000002E   ........           BL       USB_OTG_EP0_OutStart
    793          }/**
   \   00000032   10BD               POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   ........           DC32     USBD_ep_status

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   ........           DC32     USBD_DeviceDesc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \   00000000   ........           DC32     USBD_StrDesc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_3:
   \   00000000   ........           DC32     ??cfgidx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_4:
   \   00000000   ........           DC32     USBD_default_cfg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_5:
   \   00000000   ........           DC32     USBD_cfg_status

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "STMicroelectronics">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   53544D696372       DC8 83, 84, 77, 105, 99, 114, 111, 101, 108, 101
   \              6F656C65    
   \   0000000A   6374726F6E69       DC8 99, 116, 114, 111, 110, 105, 99, 115, 0, 0
   \              63730000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Mass Storage in FS Mode">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   4D6173732053       DC8 77, 97, 115, 115, 32, 83, 116, 111, 114, 97
   \              746F7261    
   \   0000000A   676520696E20       DC8 103, 101, 32, 105, 110, 32, 70, 83, 32, 77
   \              4653204D    
   \   00000014   6F646500           DC8 111, 100, 101, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "00000000001B">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   303030303030       DC8 48, 48, 48, 48, 48, 48, 48, 48, 48, 48
   \              30303030    
   \   0000000A   314200000000       DC8 49, 66, 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "MSC Config">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   4D534320436F       DC8 77, 83, 67, 32, 67, 111, 110, 102, 105, 103
   \              6E666967    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "MSC Interface">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   4D534320496E       DC8 77, 83, 67, 32, 73, 110, 116, 101, 114, 102
   \              74657266    
   \   0000000A   616365000000       DC8 97, 99, 101, 0, 0, 0
    794            * @}
    795            */ 
    796          
    797          
    798          /**
    799            * @}
    800            */ 
    801          
    802          
    803          /**
    804            * @}
    805            */ 
    806          
    807          /******************* (C) COPYRIGHT 2010 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

     Function               .cstack
     --------               -------
     USBD_ClrFeature             8
     USBD_CtlError               8
     USBD_GetConfig              8
     USBD_GetDescriptor         24
     USBD_GetStatus              8
     USBD_ParseSetupRequest      0
     USBD_SetAddress            16
     USBD_SetConfig              8
     USBD_SetFeature             8
     USBD_StdDevReq              8
     USBD_StdEPReq              16
     USBD_StdItfReq             16


   Section sizes:

     Function/Label                        Bytes
     --------------                        -----
     USBD_ep_status                           4
     USBD_default_cfg                         4
     USBD_cfg_status                          4
     USBD_StdDevReq                          88
     USBD_StdItfReq                          74
     USBD_StdEPReq                          350
     USBD_GetDescriptor                     314
     USBD_SetAddress                         88
     USBD_SetConfig                         192
     cfgidx                                   1
     USBD_GetConfig                          56
     USBD_GetStatus                          50
     USBD_SetFeature                         34
     USBD_ClrFeature                         52
     USBD_ParseSetupRequest                  68
     USBD_CtlError                           52
     ??DataTable9                             4
     ??DataTable9_1                           4
     ??DataTable9_2                           4
     ??DataTable9_3                           4
     ??DataTable9_4                           4
     ??DataTable9_5                           4
     ?<Constant "STMicroelectronics">        20
     ?<Constant "Mass Storage in FS Mode">   24
     ?<Constant "00000000001B">              16
     ?<Constant "MSC Config">                12
     ?<Constant "MSC Interface">             16

 
    13 bytes in section .bss
 1 530 bytes in section .text
 
 1 530 bytes of CODE memory
    13 bytes of DATA memory

Errors: none
Warnings: none
