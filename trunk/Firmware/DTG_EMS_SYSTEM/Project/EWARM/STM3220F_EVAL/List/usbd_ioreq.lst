###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.1.52143/W32 for ARM     08/Jan/2012  13:10:08 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Libraries\STM32_USB_ #
#                    Device_Library\Core\src\usbd_ioreq.c                     #
#    Command line =  E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Libraries\STM32_USB_ #
#                    Device_Library\Core\src\usbd_ioreq.c -D                  #
#                    USE_STDPERIPH_DRIVER -D STM32F2XX -D USE_STM3220F_EVAL   #
#                    -D USE_USB_OTG_FS -D RTC_CLOCK_SOURCE_LSE -lC            #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\STM322 #
#                    0F_EVAL\List\ -lA E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Pr #
#                    oject\EWARM\STM3220F_EVAL\List\ -o                       #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\STM322 #
#                    0F_EVAL\Obj\ --no_cse --no_unroll --no_inline            #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files\IAR        #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWAR #
#                    M\..\ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWA #
#                    RM\..\..\Libraries\CMSIS\CM3\CoreSupport\ -I             #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F2xx\ -I       #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\STM32F2xx_StdPeriph_Driver\inc\ -I             #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Utilities\STM32_EVAL\ -I E:\Work\Firmware\DTG\DTG_EMS_SY #
#                    STEM\Project\EWARM\..\..\Utilities\STM32_EVAL\Common\    #
#                    -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\ #
#                    ..\Utilities\STM32_EVAL\STM3220F_EVAL\ -I                #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\STM32_USB_OTG_Driver\inc\ -I                   #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\STM32_USB_Device_Library\Core\inc\ -I          #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\STM32_USB_Device_Library\Class\msc\inc\ -I     #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\Usb #
#                    \ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\. #
#                    .\Usb\Inc\ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Projec #
#                    t\EWARM\..\Usb\src\ -I E:\Work\Firmware\DTG\DTG_EMS_SYST #
#                    EM\Project\EWARM\..\..\Libraries\STM32_USB_HOST_Library\ #
#                    Core\inc\ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project #
#                    \EWARM\..\..\Libraries\STM32_USB_HOST_Library\Class\MSC\ #
#                    inc\ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWAR #
#                    M\..\..\Libraries\STM32_USB_Device_Library\Class\cdc\inc #
#                    \ -Ol --use_c++_inline                                   #
#    List file    =  E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\STM322 #
#                    0F_EVAL\List\usbd_ioreq.lst                              #
#    Object file  =  E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\STM322 #
#                    0F_EVAL\Obj\usbd_ioreq.o                                 #
#                                                                             #
#                                                                             #
###############################################################################

E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Libraries\STM32_USB_Device_Library\Core\src\usbd_ioreq.c
      1          /**
      2            ******************************************************************************
      3            * @file    usbd_ioreq.c
      4            * @author  MCD Application Team
      5            * @version V0.0.1
      6            * @date    11/12/2010
      7            * @brief   This file provides the IO requests APIs for control endpoints.
      8            ******************************************************************************
      9            * @copy
     10            *
     11            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     12            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     13            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     14            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     15            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     16            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     17            *
     18            * <h2><center>&copy; COPYRIGHT 2010 STMicroelectronics</center></h2>
     19            */ 
     20          
     21          /* Includes ------------------------------------------------------------------*/
     22          #include "usbd_ioreq.h"
     23          /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
     24            * @{
     25            */
     26          
     27          
     28          /** @defgroup USBD_IOREQ 
     29            * @brief control I/O requests module
     30            * @{
     31            */ 
     32          
     33          /** @defgroup USBD_IOREQ_Private_TypesDefinitions
     34            * @{
     35            */ 
     36          /**
     37            * @}
     38            */ 
     39          
     40          
     41          /** @defgroup USBD_IOREQ_Private_Defines
     42            * @{
     43            */ 
     44          
     45          /**
     46            * @}
     47            */ 
     48          
     49          
     50          /** @defgroup USBD_IOREQ_Private_Macros
     51            * @{
     52            */ 
     53          /**
     54            * @}
     55            */ 
     56          
     57          
     58          /** @defgroup USBD_IOREQ_Private_Variables
     59            * @{
     60            */ 
     61          
     62          /**
     63            * @}
     64            */ 
     65          
     66          
     67          /** @defgroup USBD_IOREQ_Private_FunctionPrototypes
     68            * @{
     69            */ 
     70          /**
     71            * @}
     72            */ 
     73          
     74          
     75          /** @defgroup USBD_IOREQ_Private_Functions
     76            * @{
     77            */ 
     78          
     79          /**
     80          * @brief  USBD_CtlSendData
     81          *         send data on the ctl pipe
     82          * @param  pdev: device instance
     83          * @param  buff: pointer to data buffer
     84          * @param  len: length of data to be sent
     85          * @retval status
     86          */

   \                                 In section .text, align 2, keep-with-next
     87          USBD_Status  USBD_CtlSendData (USB_OTG_CORE_HANDLE  *pdev, 
     88                                         uint8_t *pbuf,
     89                                         uint16_t len)
     90          {
   \                     USBD_CtlSendData:
   \   00000000   10B5               PUSH     {R4,LR}
     91            USBD_Status ret = USBD_OK;
   \   00000002   0024               MOVS     R4,#+0
     92            
     93            pdev->dev.in_ep[0].total_data_len = len;
   \   00000004   92B2               UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000006   C0F83821           STR      R2,[R0, #+312]
     94            pdev->dev.in_ep[0].rem_data_len   = len;
   \   0000000A   92B2               UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000000C   C0F83421           STR      R2,[R0, #+308]
     95            pdev->dev.device_state = USB_OTG_EP0_DATA_IN;
   \   00000010   0223               MOVS     R3,#+2
   \   00000012   80F81131           STRB     R3,[R0, #+273]
     96          
     97            DCD_EP_Tx (pdev, 0, pbuf, len);
   \   00000016   92B2               UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000018   1300               MOVS     R3,R2
   \   0000001A   0A00               MOVS     R2,R1
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   ........           BL       DCD_EP_Tx
     98           
     99            return ret;
   \   00000022   2000               MOVS     R0,R4
   \   00000024   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   10BD               POP      {R4,PC}          ;; return
    100          }
    101          
    102          /**
    103          * @brief  USBD_CtlContinueSendData
    104          *         continue sending data on the ctl pipe
    105          * @param  pdev: device instance
    106          * @param  buff: pointer to data buffer
    107          * @param  len: length of data to be sent
    108          * @retval status
    109          */

   \                                 In section .text, align 2, keep-with-next
    110          USBD_Status  USBD_CtlContinueSendData (USB_OTG_CORE_HANDLE  *pdev, 
    111                                                 uint8_t *pbuf,
    112                                                 uint16_t len)
    113          {
   \                     USBD_CtlContinueSendData:
   \   00000000   10B5               PUSH     {R4,LR}
    114            USBD_Status ret = USBD_OK;
   \   00000002   0024               MOVS     R4,#+0
    115            
    116            DCD_EP_Tx (pdev, 0, pbuf, len);
   \   00000004   92B2               UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000006   1300               MOVS     R3,R2
   \   00000008   0A00               MOVS     R2,R1
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   ........           BL       DCD_EP_Tx
    117            
    118            
    119            return ret;
   \   00000010   2000               MOVS     R0,R4
   \   00000012   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000014   10BD               POP      {R4,PC}          ;; return
    120          }
    121          
    122          /**
    123          * @brief  USBD_CtlPrepareRx
    124          *         receive data on the ctl pipe
    125          * @param  pdev: USB OTG device instance
    126          * @param  buff: pointer to data buffer
    127          * @param  len: length of data to be received
    128          * @retval status
    129          */

   \                                 In section .text, align 2, keep-with-next
    130          USBD_Status  USBD_CtlPrepareRx (USB_OTG_CORE_HANDLE  *pdev,
    131                                            uint8_t *pbuf,                                  
    132                                            uint16_t len)
    133          {
   \                     USBD_CtlPrepareRx:
   \   00000000   10B5               PUSH     {R4,LR}
    134            USBD_Status ret = USBD_OK;
   \   00000002   0024               MOVS     R4,#+0
    135            
    136            pdev->dev.in_ep[0].total_data_len = len;
   \   00000004   92B2               UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000006   C0F83821           STR      R2,[R0, #+312]
    137            pdev->dev.in_ep[0].rem_data_len   = len;
   \   0000000A   92B2               UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000000C   C0F83421           STR      R2,[R0, #+308]
    138            pdev->dev.device_state = USB_OTG_EP0_DATA_OUT;
   \   00000010   0323               MOVS     R3,#+3
   \   00000012   80F81131           STRB     R3,[R0, #+273]
    139            
    140            DCD_EP_PrepareRx (pdev,
    141                              0,
    142                              pbuf,
    143                              len);
   \   00000016   1300               MOVS     R3,R2
   \   00000018   9BB2               UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   0000001A   0A00               MOVS     R2,R1
   \   0000001C   0021               MOVS     R1,#+0
   \   0000001E   ........           BL       DCD_EP_PrepareRx
    144            
    145          
    146            return ret;
   \   00000022   2000               MOVS     R0,R4
   \   00000024   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   10BD               POP      {R4,PC}          ;; return
    147          }
    148          
    149          /**
    150          * @brief  USBD_CtlContinueRx
    151          *         continue receive data on the ctl pipe
    152          * @param  pdev: USB OTG device instance
    153          * @param  buff: pointer to data buffer
    154          * @param  len: length of data to be received
    155          * @retval status
    156          */

   \                                 In section .text, align 2, keep-with-next
    157          USBD_Status  USBD_CtlContinueRx (USB_OTG_CORE_HANDLE  *pdev, 
    158                                                    uint8_t *pbuf,                                          
    159                                                    uint16_t len)
    160          {
   \                     USBD_CtlContinueRx:
   \   00000000   10B5               PUSH     {R4,LR}
    161            USBD_Status ret = USBD_OK;
   \   00000002   0024               MOVS     R4,#+0
    162            
    163            DCD_EP_PrepareRx (pdev,
    164                              0,                     
    165                              pbuf,                         
    166                              len);
   \   00000004   1300               MOVS     R3,R2
   \   00000006   9BB2               UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   00000008   0A00               MOVS     R2,R1
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   ........           BL       DCD_EP_PrepareRx
    167            return ret;
   \   00000010   2000               MOVS     R0,R4
   \   00000012   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000014   10BD               POP      {R4,PC}          ;; return
    168          }
    169          /**
    170          * @brief  USBD_CtlSendStatus
    171          *         send zero lzngth packet on the ctl pipe
    172          * @param  pdev: USB OTG device instance
    173          * @retval status
    174          */

   \                                 In section .text, align 2, keep-with-next
    175          USBD_Status  USBD_CtlSendStatus (USB_OTG_CORE_HANDLE  *pdev)
    176          {
   \                     USBD_CtlSendStatus:
   \   00000000   38B5               PUSH     {R3-R5,LR}
   \   00000002   0400               MOVS     R4,R0
    177            USBD_Status ret = USBD_OK;
   \   00000004   0025               MOVS     R5,#+0
    178            pdev->dev.device_state = USB_OTG_EP0_STATUS_IN;
   \   00000006   0420               MOVS     R0,#+4
   \   00000008   84F81101           STRB     R0,[R4, #+273]
    179            DCD_EP_Tx (pdev,
    180                       0,
    181                       NULL, 
    182                       0); 
   \   0000000C   0023               MOVS     R3,#+0
   \   0000000E   0022               MOVS     R2,#+0
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   2000               MOVS     R0,R4
   \   00000014   ........           BL       DCD_EP_Tx
    183            
    184            USB_OTG_EP0_OutStart(pdev);  
   \   00000018   2000               MOVS     R0,R4
   \   0000001A   ........           BL       USB_OTG_EP0_OutStart
    185            
    186            return ret;
   \   0000001E   2800               MOVS     R0,R5
   \   00000020   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000022   32BD               POP      {R1,R4,R5,PC}    ;; return
    187          }
    188          
    189          /**
    190          * @brief  USBD_CtlReceiveStatus
    191          *         receive zero lzngth packet on the ctl pipe
    192          * @param  pdev: USB OTG device instance
    193          * @retval status
    194          */

   \                                 In section .text, align 2, keep-with-next
    195          USBD_Status  USBD_CtlReceiveStatus (USB_OTG_CORE_HANDLE  *pdev)
    196          {
   \                     USBD_CtlReceiveStatus:
   \   00000000   38B5               PUSH     {R3-R5,LR}
   \   00000002   0400               MOVS     R4,R0
    197            USBD_Status ret = USBD_OK;
   \   00000004   0025               MOVS     R5,#+0
    198            pdev->dev.device_state = USB_OTG_EP0_STATUS_OUT;  
   \   00000006   0520               MOVS     R0,#+5
   \   00000008   84F81101           STRB     R0,[R4, #+273]
    199            DCD_EP_PrepareRx ( pdev,
    200                              0,
    201                              NULL,
    202                              0);  
   \   0000000C   0023               MOVS     R3,#+0
   \   0000000E   0022               MOVS     R2,#+0
   \   00000010   0021               MOVS     R1,#+0
   \   00000012   2000               MOVS     R0,R4
   \   00000014   ........           BL       DCD_EP_PrepareRx
    203          
    204            USB_OTG_EP0_OutStart(pdev);
   \   00000018   2000               MOVS     R0,R4
   \   0000001A   ........           BL       USB_OTG_EP0_OutStart
    205            
    206            return ret;
   \   0000001E   2800               MOVS     R0,R5
   \   00000020   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000022   32BD               POP      {R1,R4,R5,PC}    ;; return
    207          }
    208          /**
    209            * @}
    210            */ 
    211          
    212          
    213          /**
    214            * @}
    215            */ 
    216          
    217          
    218          /**
    219            * @}
    220            */ 
    221          
    222          /******************* (C) COPYRIGHT 2010 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

     Function                 .cstack
     --------                 -------
     USBD_CtlContinueRx            8
     USBD_CtlContinueSendData      8
     USBD_CtlPrepareRx             8
     USBD_CtlReceiveStatus        16
     USBD_CtlSendData              8
     USBD_CtlSendStatus           16


   Section sizes:

     Function/Label           Bytes
     --------------           -----
     USBD_CtlSendData           40
     USBD_CtlContinueSendData   22
     USBD_CtlPrepareRx          40
     USBD_CtlContinueRx         22
     USBD_CtlSendStatus         36
     USBD_CtlReceiveStatus      36

 
 196 bytes in section .text
 
 196 bytes of CODE memory

Errors: none
Warnings: none
