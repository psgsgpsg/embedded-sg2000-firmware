###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.1.52143/W32 for ARM     08/Jan/2012  13:10:23 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Libraries\STM32_USB_ #
#                    HOST_Library\Class\MSC\src\usbh_msc_fatfs.c              #
#    Command line =  E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Libraries\STM32_USB_ #
#                    HOST_Library\Class\MSC\src\usbh_msc_fatfs.c -D           #
#                    USE_STDPERIPH_DRIVER -D STM32F2XX -D USE_STM3220F_EVAL   #
#                    -D USE_USB_OTG_FS -D RTC_CLOCK_SOURCE_LSE -lC            #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\STM322 #
#                    0F_EVAL\List\ -lA E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Pr #
#                    oject\EWARM\STM3220F_EVAL\List\ -o                       #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\STM322 #
#                    0F_EVAL\Obj\ --no_cse --no_unroll --no_inline            #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M3  #
#                    -e --fpu=None --dlib_config "C:\Program Files\IAR        #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWAR #
#                    M\..\ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWA #
#                    RM\..\..\Libraries\CMSIS\CM3\CoreSupport\ -I             #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F2xx\ -I       #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\STM32F2xx_StdPeriph_Driver\inc\ -I             #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Utilities\STM32_EVAL\ -I E:\Work\Firmware\DTG\DTG_EMS_SY #
#                    STEM\Project\EWARM\..\..\Utilities\STM32_EVAL\Common\    #
#                    -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\ #
#                    ..\Utilities\STM32_EVAL\STM3220F_EVAL\ -I                #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\STM32_USB_OTG_Driver\inc\ -I                   #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\STM32_USB_Device_Library\Core\inc\ -I          #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\..\ #
#                    Libraries\STM32_USB_Device_Library\Class\msc\inc\ -I     #
#                    E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\..\Usb #
#                    \ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\. #
#                    .\Usb\Inc\ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Projec #
#                    t\EWARM\..\Usb\src\ -I E:\Work\Firmware\DTG\DTG_EMS_SYST #
#                    EM\Project\EWARM\..\..\Libraries\STM32_USB_HOST_Library\ #
#                    Core\inc\ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project #
#                    \EWARM\..\..\Libraries\STM32_USB_HOST_Library\Class\MSC\ #
#                    inc\ -I E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWAR #
#                    M\..\..\Libraries\STM32_USB_Device_Library\Class\cdc\inc #
#                    \ -Ol --use_c++_inline                                   #
#    List file    =  E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\STM322 #
#                    0F_EVAL\List\usbh_msc_fatfs.lst                          #
#    Object file  =  E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Project\EWARM\STM322 #
#                    0F_EVAL\Obj\usbh_msc_fatfs.o                             #
#                                                                             #
#                                                                             #
###############################################################################

E:\Work\Firmware\DTG\DTG_EMS_SYSTEM\Libraries\STM32_USB_HOST_Library\Class\MSC\src\usbh_msc_fatfs.c
      1          
      2          #include "usb_conf.h"
      3          #include "diskio.h"
      4          #include "usbh_msc_core.h"
      5          /*--------------------------------------------------------------------------
      6          
      7             Module Private Functions and Variables
      8          
      9          ---------------------------------------------------------------------------*/
     10          

   \                                 In section .data, align 1
     11          static volatile DSTATUS Stat = STA_NOINIT;	/* Disk status */
   \                     Stat:
   \   00000000   01                 DC8 1
     12          
     13          extern USB_OTG_CORE_HANDLE          USB_OTG_Core;
     14          extern USBH_HOST                     USB_Host;
     15          
     16          /*-----------------------------------------------------------------------*/
     17          /* Initialize Disk Drive                                                 */
     18          /*-----------------------------------------------------------------------*/
     19          

   \                                 In section .text, align 2, keep-with-next
     20          DSTATUS disk_initialize (
     21          	BYTE drv		/* Physical drive number (0) */
     22          )
     23          {
   \                     disk_initialize:
   \   00000000   80B5               PUSH     {R7,LR}
     24            
     25            if(HCD_IsDeviceConnected(&USB_OTG_Core))
   \   00000002   ....               LDR.N    R0,??DataTable4
   \   00000004   ........           BL       HCD_IsDeviceConnected
   \   00000008   0028               CMP      R0,#+0
   \   0000000A   05D0               BEQ.N    ??disk_initialize_0
     26            {  
     27              Stat &= ~STA_NOINIT;
   \   0000000C   ....               LDR.N    R0,??DataTable4_1
   \   0000000E   0078               LDRB     R0,[R0, #+0]
   \   00000010   10F0FE00           ANDS     R0,R0,#0xFE
   \   00000014   ....               LDR.N    R1,??DataTable4_1
   \   00000016   0870               STRB     R0,[R1, #+0]
     28            }
     29            
     30            return Stat;
   \                     ??disk_initialize_0:
   \   00000018   ....               LDR.N    R0,??DataTable4_1
   \   0000001A   0078               LDRB     R0,[R0, #+0]
   \   0000001C   02BD               POP      {R1,PC}          ;; return
     31            
     32            
     33          }
     34          
     35          
     36          
     37          /*-----------------------------------------------------------------------*/
     38          /* Get Disk Status                                                       */
     39          /*-----------------------------------------------------------------------*/
     40          

   \                                 In section .text, align 2, keep-with-next
     41          DSTATUS disk_status (
     42          	BYTE drv		/* Physical drive number (0) */
     43          )
     44          {
     45          	if (drv) return STA_NOINIT;		/* Supports only single drive */
   \                     disk_status:
   \   00000000   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0028               CMP      R0,#+0
   \   00000004   01D0               BEQ.N    ??disk_status_0
   \   00000006   0120               MOVS     R0,#+1
   \   00000008   01E0               B.N      ??disk_status_1
     46          	return Stat;
   \                     ??disk_status_0:
   \   0000000A   ....               LDR.N    R0,??DataTable4_1
   \   0000000C   0078               LDRB     R0,[R0, #+0]
   \                     ??disk_status_1:
   \   0000000E   7047               BX       LR               ;; return
     47          }
     48          
     49          
     50          
     51          /*-----------------------------------------------------------------------*/
     52          /* Read Sector(s)                                                        */
     53          /*-----------------------------------------------------------------------*/
     54          

   \                                 In section .text, align 2, keep-with-next
     55          DRESULT disk_read (
     56          	BYTE drv,			/* Physical drive number (0) */
     57          	BYTE *buff,			/* Pointer to the data buffer to store read data */
     58          	DWORD sector,		/* Start sector number (LBA) */
     59          	BYTE count			/* Sector count (1..255) */
     60          )
     61          {
   \                     disk_read:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0C00               MOVS     R4,R1
   \   00000004   1500               MOVS     R5,R2
     62             BYTE status;
     63          	if (drv || !count) return RES_PARERR;
   \   00000006   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0028               CMP      R0,#+0
   \   0000000A   02D1               BNE.N    ??disk_read_0
   \   0000000C   DBB2               UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000000E   002B               CMP      R3,#+0
   \   00000010   01D1               BNE.N    ??disk_read_1
   \                     ??disk_read_0:
   \   00000012   0420               MOVS     R0,#+4
   \   00000014   1FE0               B.N      ??disk_read_2
     64          	if (Stat & STA_NOINIT) return RES_NOTRDY;
   \                     ??disk_read_1:
   \   00000016   ....               LDR.N    R0,??DataTable4_1
   \   00000018   0078               LDRB     R0,[R0, #+0]
   \   0000001A   C007               LSLS     R0,R0,#+31
   \   0000001C   01D5               BPL.N    ??disk_read_3
   \   0000001E   0320               MOVS     R0,#+3
   \   00000020   19E0               B.N      ??disk_read_2
     65                 
     66          
     67            if(HCD_IsDeviceConnected(&USB_OTG_Core))
   \                     ??disk_read_3:
   \   00000022   ....               LDR.N    R0,??DataTable4
   \   00000024   ........           BL       HCD_IsDeviceConnected
   \   00000028   0028               CMP      R0,#+0
   \   0000002A   0ED0               BEQ.N    ??disk_read_4
     68            {  
     69              
     70              do
     71              {
     72                status = USBH_MSC_Read10(&USB_OTG_Core, buff,sector,512);
   \                     ??disk_read_5:
   \   0000002C   4FF40073           MOV      R3,#+512
   \   00000030   2A00               MOVS     R2,R5
   \   00000032   2100               MOVS     R1,R4
   \   00000034   ....               LDR.N    R0,??DataTable4
   \   00000036   ........           BL       USBH_MSC_Read10
   \   0000003A   0600               MOVS     R6,R0
     73                USBH_MSC_HandleBOTXfer(&USB_OTG_Core ,&USB_Host);
   \   0000003C   ....               LDR.N    R1,??DataTable4_2
   \   0000003E   ....               LDR.N    R0,??DataTable4
   \   00000040   ........           BL       USBH_MSC_HandleBOTXfer
     74              }
     75              while(status == USBH_MSC_BUSY );
   \   00000044   F6B2               UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000046   032E               CMP      R6,#+3
   \   00000048   F0D0               BEQ.N    ??disk_read_5
     76            }
     77            
     78            if(status == USBH_MSC_OK)
   \                     ??disk_read_4:
   \   0000004A   F6B2               UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000004C   002E               CMP      R6,#+0
   \   0000004E   01D1               BNE.N    ??disk_read_6
     79              return RES_OK;
   \   00000050   0020               MOVS     R0,#+0
   \   00000052   00E0               B.N      ??disk_read_2
     80            return RES_ERROR;
   \                     ??disk_read_6:
   \   00000054   0120               MOVS     R0,#+1
   \                     ??disk_read_2:
   \   00000056   70BD               POP      {R4-R6,PC}       ;; return
     81          
     82          }
     83          
     84          
     85          
     86          /*-----------------------------------------------------------------------*/
     87          /* Write Sector(s)                                                       */
     88          /*-----------------------------------------------------------------------*/
     89          
     90          #if _READONLY == 0

   \                                 In section .text, align 2, keep-with-next
     91          DRESULT disk_write (
     92          	BYTE drv,			/* Physical drive number (0) */
     93          	const BYTE *buff,	/* Pointer to the data to be written */
     94          	DWORD sector,		/* Start sector number (LBA) */
     95          	BYTE count			/* Sector count (1..255) */
     96          )
     97          {
   \                     disk_write:
   \   00000000   70B5               PUSH     {R4-R6,LR}
   \   00000002   0C00               MOVS     R4,R1
   \   00000004   1500               MOVS     R5,R2
     98            BYTE status;
     99          	if (drv || !count) return RES_PARERR;
   \   00000006   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0028               CMP      R0,#+0
   \   0000000A   02D1               BNE.N    ??disk_write_0
   \   0000000C   DBB2               UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000000E   002B               CMP      R3,#+0
   \   00000010   01D1               BNE.N    ??disk_write_1
   \                     ??disk_write_0:
   \   00000012   0420               MOVS     R0,#+4
   \   00000014   25E0               B.N      ??disk_write_2
    100          	if (Stat & STA_NOINIT) return RES_NOTRDY;
   \                     ??disk_write_1:
   \   00000016   ....               LDR.N    R0,??DataTable4_1
   \   00000018   0078               LDRB     R0,[R0, #+0]
   \   0000001A   C007               LSLS     R0,R0,#+31
   \   0000001C   01D5               BPL.N    ??disk_write_3
   \   0000001E   0320               MOVS     R0,#+3
   \   00000020   1FE0               B.N      ??disk_write_2
    101          	if (Stat & STA_PROTECT) return RES_WRPRT;
   \                     ??disk_write_3:
   \   00000022   ....               LDR.N    R0,??DataTable4_1
   \   00000024   0078               LDRB     R0,[R0, #+0]
   \   00000026   4007               LSLS     R0,R0,#+29
   \   00000028   01D5               BPL.N    ??disk_write_4
   \   0000002A   0220               MOVS     R0,#+2
   \   0000002C   19E0               B.N      ??disk_write_2
    102          
    103            
    104            if(HCD_IsDeviceConnected(&USB_OTG_Core))
   \                     ??disk_write_4:
   \   0000002E   ....               LDR.N    R0,??DataTable4
   \   00000030   ........           BL       HCD_IsDeviceConnected
   \   00000034   0028               CMP      R0,#+0
   \   00000036   0ED0               BEQ.N    ??disk_write_5
    105            {  
    106              do
    107              {
    108                status = USBH_MSC_Write10(&USB_OTG_Core,(BYTE*)buff,sector,512);
   \                     ??disk_write_6:
   \   00000038   4FF40073           MOV      R3,#+512
   \   0000003C   2A00               MOVS     R2,R5
   \   0000003E   2100               MOVS     R1,R4
   \   00000040   ....               LDR.N    R0,??DataTable4
   \   00000042   ........           BL       USBH_MSC_Write10
   \   00000046   0600               MOVS     R6,R0
    109                USBH_MSC_HandleBOTXfer(&USB_OTG_Core, &USB_Host);
   \   00000048   ....               LDR.N    R1,??DataTable4_2
   \   0000004A   ....               LDR.N    R0,??DataTable4
   \   0000004C   ........           BL       USBH_MSC_HandleBOTXfer
    110              }
    111          
    112                while(status == USBH_MSC_BUSY );
   \   00000050   F6B2               UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000052   032E               CMP      R6,#+3
   \   00000054   F0D0               BEQ.N    ??disk_write_6
    113          
    114            }
    115          
    116            if(status == USBH_MSC_OK)
   \                     ??disk_write_5:
   \   00000056   F6B2               UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000058   002E               CMP      R6,#+0
   \   0000005A   01D1               BNE.N    ??disk_write_7
    117              return RES_OK;
   \   0000005C   0020               MOVS     R0,#+0
   \   0000005E   00E0               B.N      ??disk_write_2
    118            return RES_ERROR;
   \                     ??disk_write_7:
   \   00000060   0120               MOVS     R0,#+1
   \                     ??disk_write_2:
   \   00000062   70BD               POP      {R4-R6,PC}       ;; return
    119          }
    120          #endif /* _READONLY == 0 */
    121          
    122          
    123          
    124          /*-----------------------------------------------------------------------*/
    125          /* Miscellaneous Functions                                               */
    126          /*-----------------------------------------------------------------------*/
    127          
    128          #if _USE_IOCTL != 0

   \                                 In section .text, align 2, keep-with-next
    129          DRESULT disk_ioctl (
    130                              BYTE drv,		/* Physical drive number (0) */
    131                              BYTE ctrl,		/* Control code */
    132                              void *buff		/* Buffer to send/receive control data */
    133                                )
    134          {
    135            DRESULT res;
    136            
    137            if (drv) return RES_PARERR;
   \                     disk_ioctl:
   \   00000000   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0028               CMP      R0,#+0
   \   00000004   01D0               BEQ.N    ??disk_ioctl_0
   \   00000006   0420               MOVS     R0,#+4
   \   00000008   21E0               B.N      ??disk_ioctl_1
    138            
    139            res = RES_ERROR;
   \                     ??disk_ioctl_0:
   \   0000000A   0120               MOVS     R0,#+1
    140            
    141            if (Stat & STA_NOINIT) return RES_NOTRDY;
   \   0000000C   ....               LDR.N    R3,??DataTable4_1
   \   0000000E   1B78               LDRB     R3,[R3, #+0]
   \   00000010   DB07               LSLS     R3,R3,#+31
   \   00000012   01D5               BPL.N    ??disk_ioctl_2
   \   00000014   0320               MOVS     R0,#+3
   \   00000016   1AE0               B.N      ??disk_ioctl_1
    142            
    143            switch (ctrl) {
   \                     ??disk_ioctl_2:
   \   00000018   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000001A   0029               CMP      R1,#+0
   \   0000001C   05D0               BEQ.N    ??disk_ioctl_3
   \   0000001E   0229               CMP      R1,#+2
   \   00000020   0AD0               BEQ.N    ??disk_ioctl_4
   \   00000022   04D3               BCC.N    ??disk_ioctl_5
   \   00000024   0329               CMP      R1,#+3
   \   00000026   0CD0               BEQ.N    ??disk_ioctl_6
   \   00000028   0FE0               B.N      ??disk_ioctl_7
    144            case CTRL_SYNC :		/* Make sure that no pending write process */
    145              
    146              res = RES_OK;
   \                     ??disk_ioctl_3:
   \   0000002A   0020               MOVS     R0,#+0
    147              break;
   \   0000002C   0EE0               B.N      ??disk_ioctl_8
    148              
    149            case GET_SECTOR_COUNT :	/* Get number of sectors on the disk (DWORD) */
    150              
    151              *(DWORD*)buff = (DWORD) USBH_MSC_Param.MSCapacity;
   \                     ??disk_ioctl_5:
   \   0000002E   ....               LDR.N    R0,??DataTable4_3
   \   00000030   0068               LDR      R0,[R0, #+0]
   \   00000032   1060               STR      R0,[R2, #+0]
    152                res = RES_OK;
   \   00000034   0020               MOVS     R0,#+0
    153              break;
   \   00000036   09E0               B.N      ??disk_ioctl_8
    154              
    155            case GET_SECTOR_SIZE :	/* Get R/W sector size (WORD) */
    156              *(WORD*)buff = 512;
   \                     ??disk_ioctl_4:
   \   00000038   4FF40070           MOV      R0,#+512
   \   0000003C   1080               STRH     R0,[R2, #+0]
    157              res = RES_OK;
   \   0000003E   0020               MOVS     R0,#+0
    158              break;
   \   00000040   04E0               B.N      ??disk_ioctl_8
    159              
    160            case GET_BLOCK_SIZE :	/* Get erase block size in unit of sector (DWORD) */
    161              
    162              *(DWORD*)buff = 512;
   \                     ??disk_ioctl_6:
   \   00000042   4FF40071           MOV      R1,#+512
   \   00000046   1160               STR      R1,[R2, #+0]
    163              
    164              break;
   \   00000048   00E0               B.N      ??disk_ioctl_8
    165              
    166              
    167            default:
    168              res = RES_PARERR;
   \                     ??disk_ioctl_7:
   \   0000004A   0420               MOVS     R0,#+4
    169            }
    170            
    171            
    172            
    173            return res;
   \                     ??disk_ioctl_8:
   \   0000004C   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \                     ??disk_ioctl_1:
   \   0000004E   7047               BX       LR               ;; return
    174          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   ........           DC32     USB_OTG_Core

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   ........           DC32     Stat

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   ........           DC32     USB_Host

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   ........           DC32     USBH_MSC_Param
    175          #endif /* _USE_IOCTL != 0 */

   Maximum stack usage in bytes:

     Function        .cstack
     --------        -------
     disk_initialize      8
     disk_ioctl           0
     disk_read           16
     disk_status          0
     disk_write          16


   Section sizes:

     Function/Label  Bytes
     --------------  -----
     Stat               1
     disk_initialize   30
     disk_status       16
     disk_read         88
     disk_write       100
     disk_ioctl        80
     ??DataTable4       4
     ??DataTable4_1     4
     ??DataTable4_2     4
     ??DataTable4_3     4

 
   1 byte  in section .data
 330 bytes in section .text
 
 330 bytes of CODE memory
   1 byte  of DATA memory

Errors: none
Warnings: none
