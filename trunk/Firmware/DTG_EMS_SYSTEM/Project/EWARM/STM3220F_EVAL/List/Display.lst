###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.1.52143/W32 for ARM     19/Jan/2012  23:50:13 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\Display. #
#                    c                                                        #
#    Command line =  F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\Display. #
#                    c -D USE_STDPERIPH_DRIVER -D STM32F2XX -D                #
#                    USE_STM3220F_EVAL -D USE_USB_OTG_FS -D                   #
#                    RTC_CLOCK_SOURCE_LSE -lC F:\Work\S&G2000\Firmware\DTG_EM #
#                    S_SYSTEM\Project\EWARM\STM3220F_EVAL\List\ -lA           #
#                    F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\ST #
#                    M3220F_EVAL\List\ -o F:\Work\S&G2000\Firmware\DTG_EMS_SY #
#                    STEM\Project\EWARM\STM3220F_EVAL\Obj\ --no_cse           #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program  #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    6.0\arm\INC\c\DLib_Config_Full.h" -I                     #
#                    F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\.. #
#                    \ -I F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWA #
#                    RM\..\..\Libraries\CMSIS\CM3\CoreSupport\ -I             #
#                    F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\.. #
#                    \..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F2xx\ -I   #
#                    F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\.. #
#                    \..\Libraries\STM32F2xx_StdPeriph_Driver\inc\ -I         #
#                    F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\.. #
#                    \..\Utilities\STM32_EVAL\ -I                             #
#                    F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\.. #
#                    \..\Utilities\STM32_EVAL\Common\ -I                      #
#                    F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\.. #
#                    \..\Utilities\STM32_EVAL\STM3220F_EVAL\ -I               #
#                    F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\.. #
#                    \..\Libraries\STM32_USB_OTG_Driver\inc\ -I               #
#                    F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\.. #
#                    \..\Libraries\STM32_USB_Device_Library\Core\inc\ -I      #
#                    F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\.. #
#                    \..\Libraries\STM32_USB_Device_Library\Class\msc\inc\    #
#                    -I F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM #
#                    \..\Usb\ -I F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Proj #
#                    ect\EWARM\..\Usb\Inc\ -I F:\Work\S&G2000\Firmware\DTG_EM #
#                    S_SYSTEM\Project\EWARM\..\Usb\src\ -I                    #
#                    F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\.. #
#                    \..\Libraries\STM32_USB_HOST_Library\Core\inc\ -I        #
#                    F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\.. #
#                    \..\Libraries\STM32_USB_HOST_Library\Class\MSC\inc\ -I   #
#                    F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\.. #
#                    \..\Libraries\STM32_USB_Device_Library\Class\cdc\inc\    #
#                    -Ol --use_c++_inline                                     #
#    List file    =  F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\ST #
#                    M3220F_EVAL\List\Display.lst                             #
#    Object file  =  F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\ST #
#                    M3220F_EVAL\Obj\Display.o                                #
#                                                                             #
#                                                                             #
###############################################################################

F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\Display.c
      1          /*////////////////////////////////////////////////////////////////////////////////////
      2          
      3          2011.6.1 작성 - 윤성묵
      4          - Graphic LCD Module : LGM12232A-FL-YBW 
      5          - Font : 8x16 dot / 15 x 2 
      6          - 메인 함수에서 그래픽 루틴 처리 
      7          - 화면 구성에 관련된 전반적인 함수와 변수 처리
      8          
      9          *////////////////////////////////////////////////////////////////////////////////////
     10          #include "main.h"

   \                                 In section .text, align 2
   \   __intrinsic __interwork __softfp void *memset(void *, int, size_t)
   \                     memset:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   1000               MOVS     R0,R2
   \   00000006   0A00               MOVS     R2,R1
   \   00000008   0100               MOVS     R1,R0
   \   0000000A   2000               MOVS     R0,R4
   \   0000000C   ........           BL       __aeabi_memset
   \   00000010   2000               MOVS     R0,R4
   \   00000012   10BD               POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void LED2_OFF(void)
   \                     LED2_OFF:
   \   00000000   80B5               PUSH     {R7,LR}
   \   00000002   4FF40061           MOV      R1,#+2048
   \   00000006   ........           LDR.W    R0,??DataTable168  ;; 0x40021800
   \   0000000A   ........           BL       GPIO_SetBits
   \   0000000E   4FF48051           MOV      R1,#+4096
   \   00000012   ........           LDR.W    R0,??DataTable168  ;; 0x40021800
   \   00000016   ........           BL       GPIO_SetBits
   \   0000001A   01BD               POP      {R0,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void LED2_GREEN(void)
   \                     LED2_GREEN:
   \   00000000   80B5               PUSH     {R7,LR}
   \   00000002   4FF40061           MOV      R1,#+2048
   \   00000006   ........           LDR.W    R0,??DataTable168  ;; 0x40021800
   \   0000000A   ........           BL       GPIO_SetBits
   \   0000000E   4FF48051           MOV      R1,#+4096
   \   00000012   ........           LDR.W    R0,??DataTable168  ;; 0x40021800
   \   00000016   ........           BL       GPIO_ResetBits
   \   0000001A   01BD               POP      {R0,PC}          ;; return
     11          #include "Display.h"
     12          #include "Log.h"
     13          #include "EMS_System.h"
     14          #include "GraphicLcd.h"
     15          #include "Key_Process.h"
     16          #include "Tilt.h"
     17          #include "Memory.h"
     18          #include "History.h"
     19          #include "rtc.h"
     20           

   \                                 In section .bss, align 4
     21          struct _DisplayInfo DisplayInfo;
   \                     DisplayInfo:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
     22          u8 Display_Buff[100];		// 가로 15 세로 2 칸
   \                     Display_Buff:
   \   00000000                      DS8 100
     23          

   \                                 In section .bss, align 1
     24          u8 IOReverse_Count;		// 화면 입력신호 변경 처리
   \                     IOReverse_Count:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     25          u8 GLCD_Refresh_Flag;         // 화면 변경있을경우 바로 처리
   \                     GLCD_Refresh_Flag:
   \   00000000                      DS8 1
     26          

   \                                 In section .bss, align 1
     27          u8 Toogle_Cursor;             // 커서 반전 500ms마다
   \                     Toogle_Cursor:
   \   00000000                      DS8 1
     28          

   \                                 In section .bss, align 1
     29          u8 Wait_x;
   \                     Wait_x:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     30          u8 Wait_y;
   \                     Wait_y:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
     31          u8 LCD_WaitString[50];
   \                     LCD_WaitString:
   \   00000000                      DS8 52
     32          
     33          // 화면 출력에 관련된 그래픽 LCD 처리 메인 함수
     34          // 10ms 마다 진입

   \                                 In section .data, align 4
     35          const u8 *BAKUP_WORD[5]={
   \                     BAKUP_WORD:
   \   00000000   ........           DC32 `?<Constant "- \\277\\300\\264\\303\\271\\351\\276\\367`
   \   00000004   ........           DC32 `?<Constant "- \\307\\317\\267\\347\\271\\351\\276\\367`
   \   00000008   ........           DC32 `?<Constant "- \\300\\317\\301\\326\\300\\317\\271\\351`
   \   0000000C   ........           DC32 `?<Constant "- \\307\\321\\264\\336\\271\\351\\276\\367`
   \   00000010   ........           DC32 `?<Constant "- \\274\\274\\264\\336\\271\\351\\276\\367`
     36               "- 오늘백업  ",
     37               "- 하루백업  ",
     38               "- 일주일백업",
     39               "- 한달백업  ",
     40               "- 세달백업  "
     41          };

   \                                 In section .data, align 4
     42          const u8 *EMS_WORD[3]={
   \                     EMS_WORD:
   \   00000000   ........           DC32 `?<Constant "- \\300\\374\\303\\274\\263\\353\\274\\261`
   \   00000004   ........           DC32 `?<Constant "- \\302\\367\\260\\355\\301\\366\\265\\277`
   \   00000008   ........           DC32 `?<Constant "- \\265\\356\\267\\317\\261\\270\\260\\243`
     43               "- 전체노선동작  ",
     44               "- 차고지동작    ",
     45               "- 등록구간동작  ",
     46          };

   \                                 In section .data, align 4
     47          const u8 *EMS_ON_WORD[13]={
   \                     EMS_ON_WORD:
   \   00000000   ........           DC32 `?<Constant "0.\\275\\303\\265\\277\\277\\302\\265\\277`
   \   00000004   ........           DC32 `?<Constant "1.\\277\\241\\304\\332\\271\\366\\306\\260`
   \   00000008   ........           DC32 `?<Constant "2.\\275\\303\\265\\277\\305\\260\\277\\300`
   \   0000000C   ........           DC32 `?<Constant "3. RPM\\300\\314\\300\\326\\300\\275    `
   \   00000010   ........           DC32 `?<Constant "4. SPEED\\260\\241\\300\\326\\300\\275  `
   \   00000014   ........           DC32 `?<Constant "5. GPS\\277\\241\\274\\323\\265\\265\\260`
   \   00000018   ........           DC32 `?<Constant "6.\\261\\342\\276\\356\\260\\241\\301\\337`
   \   0000001C   ........           DC32 `?<Constant "7. 1\\303\\312\\260\\243\\300\\347\\275\\3`
   \   00000020   ........           DC32 `?<Constant "8.\\275\\303\\265\\277\\300\\347\\275\\303`
   \   00000024   ........           DC32 `?<Constant "9. BREAK\\271\\342\\301\\366\\276\\312\\3`
   \   00000028   ........           DC32 `?<Constant "10.BREAK\\266\\347\\301\\366\\276\\312\\3`
   \   0000002C   ........           DC32 `?<Constant "11. \\270\\360\\265\\347\\301\\266\\260\\3`
   \   00000030   ........           DC32 `?<Constant "12. \\260\\370\\310\\270\\300\\374\\301\\3`
     48               "0.시동온동작중      ",     
     49               "1.에코버튼이오프    ",
     50               "2.시동키오프        ",
     51               "3. RPM이있음        ",
     52               "4. SPEED가있음      ",
     53               "5. GPS에속도가      ",
     54               "6.기어가중립        ",
     55               "7. 1초간재시도실패함",
     56               "8.시동재시도시간 3초",
     57               "9. BREAK밟지않음    ",
     58               "10.BREAK띄지않음    ",
     59               "11. 모든조건완료 1초",
     60               "12. 공회전진입      "
     61          };

   \                                 In section .data, align 4
     62          const u8 *EMS_OFF_WORD[18]={
   \                     EMS_OFF_WORD:
   \   00000000   ........           DC32 `?<Constant "0.\\275\\303\\265\\277\\277\\300\\307\\301`
   \   00000004   ........           DC32 `?<Constant "1.\\277\\241\\304\\332\\271\\366\\306\\260`
   \   00000008   ........           DC32 `?<Constant "2.\\275\\303\\265\\277\\305\\260\\277\\300`
   \   0000000C   ........           DC32 `?<Constant "3. RPM\\300\\314\\276\\370\\300\\275    `
   \   00000010   ........           DC32 `?<Constant "4. SPEED\\260\\241\\300\\326\\300\\275  `
   \   00000014   ........           DC32 `?<Constant "5. GPS\\277\\241\\274\\323\\265\\265\\260_1`
   \   00000018   ........           DC32 `?<Constant "6.\\261\\342\\276\\356\\260\\241\\301\\337`
   \   0000001C   ........           DC32 `?<Constant "7.\\277\\356\\307\\340\\301\\337\\271\\350`
   \   00000020   ........           DC32 `?<Constant "8.\\261\\342\\301\\330\\271\\350\\305\\315`
   \   00000024   ........           DC32 `?<Constant "9.\\263\\303\\260\\242\\274\\366\\260\\241`
   \   00000028   ........           DC32 `?<Constant "10. \\277\\241\\276\\356\\276\\320\\300\\3`
   \   0000002C   ........           DC32 `?<Constant "11. \\261\\342\\277\\357\\261\\342 X\\277`
   \   00000030   ........           DC32 `?<Constant "12. \\261\\342\\277\\357\\261\\342 Y\\277`
   \   00000034   ........           DC32 `?<Constant "13.GPS\\271\\374\\300\\247\\271\\376\\276`
   \   00000038   ........           DC32 `?<Constant "14. \\306\\304\\305\\267\\272\\352\\267\\2`
   \   0000003C   ........           DC32 `?<Constant "15. \\303\\312\\261\\342 3\\272\\320\\264`
   \   00000040   ........           DC32 `?<Constant "16. \\270\\360\\265\\347\\270\\270\\301\\2`
   \   00000044   ........           DC32 `?<Constant "17. \\260\\370\\310\\270\\300\\374\\270\\3`
     63               "0.시동오프동작중    ",     
     64               "1.에코버튼이오프    ",
     65               "2.시동키오프        ",
     66               "3. RPM이없음        ",
     67               "4. SPEED가있음      ",
     68               "5. GPS에속도가있음  ",
     69               "6.기어가중립        ",     
     70               "7.운행중배터리낮음  ",
     71               "8.기준배터리낮음    ",
     72               "9.냉각수가전압높음  ",
     73               "10. 에어압이전압낮음",
     74               "11. 기울기 X오버    ",
     75               "12. 기울기 Y오버    ",
     76               "13.GPS범위벗어남    ",     
     77               "14. 파킹브레이크없음",
     78               "15. 초기 3분대기    ",
     79               "16. 모든만족 3초대기",
     80               "17. 공회전모드진입  "     
     81          };
     82          
     83          

   \                                 In section .data, align 4
     84          const u8 *DISP_WORD[10]={
   \                     DISP_WORD:
   \   00000000   ........           DC32 `?<Constant "- USB \\276\\370\\300\\275          ">`
   \   00000004   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000014   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000        
     85               "- USB 없음          "
     86          };
     87          

   \                                 In section .text, align 2, keep-with-next
     88          void EMS_View_Mode(void)
     89          {     
   \                     EMS_View_Mode:
   \   00000000   80B5               PUSH     {R7,LR}
     90               sprintf( (char *)Display_Buff,"%s ",EMS_ON_WORD[EMSOn_Check] );
   \   00000002   ........           LDR.W    R0,??DataTable168_1
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   ........           LDR.W    R1,??DataTable168_2
   \   0000000C   51F82020           LDR      R2,[R1, R0, LSL #+2]
   \   00000010   ....               ADR.N    R1,??DataTable165  ;; "%s "
   \   00000012   ........           LDR.W    R0,??DataTable168_3
   \   00000016   ........           BL       sprintf
     91               GLcd_PutString(0,0,Display_Buff,1);  
   \   0000001A   0123               MOVS     R3,#+1
   \   0000001C   ........           LDR.W    R2,??DataTable168_3
   \   00000020   0021               MOVS     R1,#+0
   \   00000022   0020               MOVS     R0,#+0
   \   00000024   ........           BL       GLcd_PutString
     92               sprintf( (char *)Display_Buff,"%s ",EMS_OFF_WORD[EMSOff_Check] );
   \   00000028   ........           LDR.W    R0,??DataTable168_4
   \   0000002C   0078               LDRB     R0,[R0, #+0]
   \   0000002E   ........           LDR.W    R1,??DataTable168_5
   \   00000032   51F82020           LDR      R2,[R1, R0, LSL #+2]
   \   00000036   ....               ADR.N    R1,??DataTable165  ;; "%s "
   \   00000038   ........           LDR.W    R0,??DataTable168_3
   \   0000003C   ........           BL       sprintf
     93               GLcd_PutString(0,16,Display_Buff,1);             
   \   00000040   0123               MOVS     R3,#+1
   \   00000042   ........           LDR.W    R2,??DataTable168_3
   \   00000046   1021               MOVS     R1,#+16
   \   00000048   0020               MOVS     R0,#+0
   \   0000004A   ........           BL       GLcd_PutString
     94          }
   \   0000004E   01BD               POP      {R0,PC}          ;; return
     95          

   \                                 In section .text, align 2, keep-with-next
     96          void InputIO_View(void)
     97          {
   \                     InputIO_View:
   \   00000000   80B5               PUSH     {R7,LR}
     98          	if ( (Info.Input_Status & INPUT_BREAK_FLAG)  )    // 브레이크를 밟고 있는가?
   \   00000002   ........           LDR.W    R0,??DataTable168_6
   \   00000006   90F85500           LDRB     R0,[R0, #+85]
   \   0000000A   C007               LSLS     R0,R0,#+31
   \   0000000C   08D5               BPL.N    ??InputIO_View_0
     99          		GLcd_SmallPutchar(0,0,0x02,0,1);	// 채워진 네모 // 입력중
   \   0000000E   0120               MOVS     R0,#+1
   \   00000010   0090               STR      R0,[SP, #+0]
   \   00000012   0023               MOVS     R3,#+0
   \   00000014   0222               MOVS     R2,#+2
   \   00000016   0021               MOVS     R1,#+0
   \   00000018   0020               MOVS     R0,#+0
   \   0000001A   ........           BL       GLcd_SmallPutchar
   \   0000001E   07E0               B.N      ??InputIO_View_1
    100          	else
    101          		GLcd_SmallPutchar(0,0,0x01,0,1);	// 빈 네모
   \                     ??InputIO_View_0:
   \   00000020   0120               MOVS     R0,#+1
   \   00000022   0090               STR      R0,[SP, #+0]
   \   00000024   0023               MOVS     R3,#+0
   \   00000026   0122               MOVS     R2,#+1
   \   00000028   0021               MOVS     R1,#+0
   \   0000002A   0020               MOVS     R0,#+0
   \   0000002C   ........           BL       GLcd_SmallPutchar
    102          	
    103          	GLcd_SmallPutString(1,0,"BREAK ",1);           
   \                     ??InputIO_View_1:
   \   00000030   0123               MOVS     R3,#+1
   \   00000032   ........           LDR.W    R2,??DataTable168_7
   \   00000036   0021               MOVS     R1,#+0
   \   00000038   0120               MOVS     R0,#+1
   \   0000003A   ........           BL       GLcd_SmallPutString
    104          	
    105          	if ( (Info.Input_Status & INPUT_GEAR_FLAG)  )    // 키어가 중립인가>?
   \   0000003E   ........           LDR.W    R0,??DataTable168_6
   \   00000042   90F85500           LDRB     R0,[R0, #+85]
   \   00000046   8007               LSLS     R0,R0,#+30
   \   00000048   08D5               BPL.N    ??InputIO_View_2
    106          		GLcd_SmallPutchar(5,0,0x02,0,1);	// 채워진 네모 // 입력중
   \   0000004A   0120               MOVS     R0,#+1
   \   0000004C   0090               STR      R0,[SP, #+0]
   \   0000004E   0023               MOVS     R3,#+0
   \   00000050   0222               MOVS     R2,#+2
   \   00000052   0021               MOVS     R1,#+0
   \   00000054   0520               MOVS     R0,#+5
   \   00000056   ........           BL       GLcd_SmallPutchar
   \   0000005A   07E0               B.N      ??InputIO_View_3
    107          	else
    108          		GLcd_SmallPutchar(5,0,0x01,0,1);	// 빈 네모
   \                     ??InputIO_View_2:
   \   0000005C   0120               MOVS     R0,#+1
   \   0000005E   0090               STR      R0,[SP, #+0]
   \   00000060   0023               MOVS     R3,#+0
   \   00000062   0122               MOVS     R2,#+1
   \   00000064   0021               MOVS     R1,#+0
   \   00000066   0520               MOVS     R0,#+5
   \   00000068   ........           BL       GLcd_SmallPutchar
    109          	
    110          	GLcd_SmallPutString(6,0,"GEAR  ",1);
   \                     ??InputIO_View_3:
   \   0000006C   0123               MOVS     R3,#+1
   \   0000006E   ........           LDR.W    R2,??DataTable168_8
   \   00000072   0021               MOVS     R1,#+0
   \   00000074   0620               MOVS     R0,#+6
   \   00000076   ........           BL       GLcd_SmallPutString
    111          	
    112          	if ( (Info.Input_Status & INPUT_PARKING_BREAK_FLAG)  )    // 파킹 브레이크 중인가?
   \   0000007A   ........           LDR.W    R0,??DataTable168_6
   \   0000007E   90F85500           LDRB     R0,[R0, #+85]
   \   00000082   4007               LSLS     R0,R0,#+29
   \   00000084   08D5               BPL.N    ??InputIO_View_4
    113          		GLcd_SmallPutchar(0,8,0x02,0,1);	// 채워진 네모 // 입력중
   \   00000086   0120               MOVS     R0,#+1
   \   00000088   0090               STR      R0,[SP, #+0]
   \   0000008A   0023               MOVS     R3,#+0
   \   0000008C   0222               MOVS     R2,#+2
   \   0000008E   0821               MOVS     R1,#+8
   \   00000090   0020               MOVS     R0,#+0
   \   00000092   ........           BL       GLcd_SmallPutchar
   \   00000096   07E0               B.N      ??InputIO_View_5
    114          	else
    115          		GLcd_SmallPutchar(0,8,0x01,0,1);	// 빈 네모
   \                     ??InputIO_View_4:
   \   00000098   0120               MOVS     R0,#+1
   \   0000009A   0090               STR      R0,[SP, #+0]
   \   0000009C   0023               MOVS     R3,#+0
   \   0000009E   0122               MOVS     R2,#+1
   \   000000A0   0821               MOVS     R1,#+8
   \   000000A2   0020               MOVS     R0,#+0
   \   000000A4   ........           BL       GLcd_SmallPutchar
    116          	
    117          	GLcd_SmallPutString(1,8,"PARKING",1);
   \                     ??InputIO_View_5:
   \   000000A8   0123               MOVS     R3,#+1
   \   000000AA   ........           LDR.W    R2,??DataTable168_9
   \   000000AE   0821               MOVS     R1,#+8
   \   000000B0   0120               MOVS     R0,#+1
   \   000000B2   ........           BL       GLcd_SmallPutString
    118          	
    119          	if ( (Info.Input_Status & INPUT_RLIGHT_FLAG)  )    // 오른쪽 전조등이 켜져 있는가?
   \   000000B6   ........           LDR.W    R0,??DataTable168_6
   \   000000BA   90F85500           LDRB     R0,[R0, #+85]
   \   000000BE   0007               LSLS     R0,R0,#+28
   \   000000C0   08D5               BPL.N    ??InputIO_View_6
    120          		GLcd_SmallPutchar(5,8,0x02,0,1);	// 채워진 네모 // 입력중
   \   000000C2   0120               MOVS     R0,#+1
   \   000000C4   0090               STR      R0,[SP, #+0]
   \   000000C6   0023               MOVS     R3,#+0
   \   000000C8   0222               MOVS     R2,#+2
   \   000000CA   0821               MOVS     R1,#+8
   \   000000CC   0520               MOVS     R0,#+5
   \   000000CE   ........           BL       GLcd_SmallPutchar
   \   000000D2   07E0               B.N      ??InputIO_View_7
    121          	else
    122          		GLcd_SmallPutchar(5,8,0x01,0,1);	// 빈 네모
   \                     ??InputIO_View_6:
   \   000000D4   0120               MOVS     R0,#+1
   \   000000D6   0090               STR      R0,[SP, #+0]
   \   000000D8   0023               MOVS     R3,#+0
   \   000000DA   0122               MOVS     R2,#+1
   \   000000DC   0821               MOVS     R1,#+8
   \   000000DE   0520               MOVS     R0,#+5
   \   000000E0   ........           BL       GLcd_SmallPutchar
    123          	
    124          	GLcd_SmallPutString(6,8,"RLIGHT",1);
   \                     ??InputIO_View_7:
   \   000000E4   0123               MOVS     R3,#+1
   \   000000E6   ........           LDR.W    R2,??DataTable168_10
   \   000000EA   0821               MOVS     R1,#+8
   \   000000EC   0620               MOVS     R0,#+6
   \   000000EE   ........           BL       GLcd_SmallPutString
    125          	
    126          	if ( (Info.Input_Status & INPUT_LLIGHT_FLAG)  )    // 왼쪽 전조등이 켜져 있는가?
   \   000000F2   ........           LDR.W    R0,??DataTable168_6
   \   000000F6   90F85500           LDRB     R0,[R0, #+85]
   \   000000FA   C006               LSLS     R0,R0,#+27
   \   000000FC   08D5               BPL.N    ??InputIO_View_8
    127          		GLcd_SmallPutchar(0,16,0x02,0,1);	// 채워진 네모 // 입력중
   \   000000FE   0120               MOVS     R0,#+1
   \   00000100   0090               STR      R0,[SP, #+0]
   \   00000102   0023               MOVS     R3,#+0
   \   00000104   0222               MOVS     R2,#+2
   \   00000106   1021               MOVS     R1,#+16
   \   00000108   0020               MOVS     R0,#+0
   \   0000010A   ........           BL       GLcd_SmallPutchar
   \   0000010E   07E0               B.N      ??InputIO_View_9
    128          	else
    129          		GLcd_SmallPutchar(0,16,0x01,0,1);	// 빈 네모
   \                     ??InputIO_View_8:
   \   00000110   0120               MOVS     R0,#+1
   \   00000112   0090               STR      R0,[SP, #+0]
   \   00000114   0023               MOVS     R3,#+0
   \   00000116   0122               MOVS     R2,#+1
   \   00000118   1021               MOVS     R1,#+16
   \   0000011A   0020               MOVS     R0,#+0
   \   0000011C   ........           BL       GLcd_SmallPutchar
    130          	
    131          	GLcd_SmallPutString(1,16,"LLIGHT",1);
   \                     ??InputIO_View_9:
   \   00000120   0123               MOVS     R3,#+1
   \   00000122   ........           LDR.W    R2,??DataTable168_11
   \   00000126   1021               MOVS     R1,#+16
   \   00000128   0120               MOVS     R0,#+1
   \   0000012A   ........           BL       GLcd_SmallPutString
    132          	
    133          	if ( (Info.Input_Status & INPUT_F_DOOR_FLAG)  )    // 앞문이 열려있는가?
   \   0000012E   ........           LDR.W    R0,??DataTable168_6
   \   00000132   90F85500           LDRB     R0,[R0, #+85]
   \   00000136   8006               LSLS     R0,R0,#+26
   \   00000138   08D5               BPL.N    ??InputIO_View_10
    134          		GLcd_SmallPutchar(5,16,0x02,0,1);	// 채워진 네모 // 입력중
   \   0000013A   0120               MOVS     R0,#+1
   \   0000013C   0090               STR      R0,[SP, #+0]
   \   0000013E   0023               MOVS     R3,#+0
   \   00000140   0222               MOVS     R2,#+2
   \   00000142   1021               MOVS     R1,#+16
   \   00000144   0520               MOVS     R0,#+5
   \   00000146   ........           BL       GLcd_SmallPutchar
   \   0000014A   07E0               B.N      ??InputIO_View_11
    135          	else
    136          		GLcd_SmallPutchar(5,16,0x01,0,1);	// 빈 네모
   \                     ??InputIO_View_10:
   \   0000014C   0120               MOVS     R0,#+1
   \   0000014E   0090               STR      R0,[SP, #+0]
   \   00000150   0023               MOVS     R3,#+0
   \   00000152   0122               MOVS     R2,#+1
   \   00000154   1021               MOVS     R1,#+16
   \   00000156   0520               MOVS     R0,#+5
   \   00000158   ........           BL       GLcd_SmallPutchar
    137          	
    138          	GLcd_SmallPutString(6,16,"F_DOOR",1);      
   \                     ??InputIO_View_11:
   \   0000015C   0123               MOVS     R3,#+1
   \   0000015E   ........           LDR.W    R2,??DataTable168_12
   \   00000162   1021               MOVS     R1,#+16
   \   00000164   0620               MOVS     R0,#+6
   \   00000166   ........           BL       GLcd_SmallPutString
    139          	
    140          	if ( (Info.Input_Status & INPUT_R_DOOR_FLAG)  )    // 뒷문이 열려 있는가?
   \   0000016A   ........           LDR.W    R0,??DataTable168_6
   \   0000016E   90F85500           LDRB     R0,[R0, #+85]
   \   00000172   4006               LSLS     R0,R0,#+25
   \   00000174   08D5               BPL.N    ??InputIO_View_12
    141          		GLcd_SmallPutchar(0,24,0x02,0,1);	// 채워진 네모 // 입력중
   \   00000176   0120               MOVS     R0,#+1
   \   00000178   0090               STR      R0,[SP, #+0]
   \   0000017A   0023               MOVS     R3,#+0
   \   0000017C   0222               MOVS     R2,#+2
   \   0000017E   1821               MOVS     R1,#+24
   \   00000180   0020               MOVS     R0,#+0
   \   00000182   ........           BL       GLcd_SmallPutchar
   \   00000186   07E0               B.N      ??InputIO_View_13
    142          	else
    143          		GLcd_SmallPutchar(0,24,0x01,0,1);	// 빈 네모
   \                     ??InputIO_View_12:
   \   00000188   0120               MOVS     R0,#+1
   \   0000018A   0090               STR      R0,[SP, #+0]
   \   0000018C   0023               MOVS     R3,#+0
   \   0000018E   0122               MOVS     R2,#+1
   \   00000190   1821               MOVS     R1,#+24
   \   00000192   0020               MOVS     R0,#+0
   \   00000194   ........           BL       GLcd_SmallPutchar
    144          	
    145          	GLcd_SmallPutString(1,24,"R_DOOR",1);  
   \                     ??InputIO_View_13:
   \   00000198   0123               MOVS     R3,#+1
   \   0000019A   ........           LDR.W    R2,??DataTable168_13
   \   0000019E   1821               MOVS     R1,#+24
   \   000001A0   0120               MOVS     R0,#+1
   \   000001A2   ........           BL       GLcd_SmallPutString
    146          	if ( (Info.Input_Status & INPUT_KEYON_FLAG)  )    // 뒷문이 열려 있는가?
   \   000001A6   ........           LDR.W    R0,??DataTable168_6
   \   000001AA   90F85500           LDRB     R0,[R0, #+85]
   \   000001AE   0006               LSLS     R0,R0,#+24
   \   000001B0   08D5               BPL.N    ??InputIO_View_14
    147          		GLcd_SmallPutchar(5,24,0x02,0,1);	// 채워진 네모 // 입력중
   \   000001B2   0120               MOVS     R0,#+1
   \   000001B4   0090               STR      R0,[SP, #+0]
   \   000001B6   0023               MOVS     R3,#+0
   \   000001B8   0222               MOVS     R2,#+2
   \   000001BA   1821               MOVS     R1,#+24
   \   000001BC   0520               MOVS     R0,#+5
   \   000001BE   ........           BL       GLcd_SmallPutchar
   \   000001C2   07E0               B.N      ??InputIO_View_15
    148          	else
    149          		GLcd_SmallPutchar(5,24,0x01,0,1);	// 빈 네모
   \                     ??InputIO_View_14:
   \   000001C4   0120               MOVS     R0,#+1
   \   000001C6   0090               STR      R0,[SP, #+0]
   \   000001C8   0023               MOVS     R3,#+0
   \   000001CA   0122               MOVS     R2,#+1
   \   000001CC   1821               MOVS     R1,#+24
   \   000001CE   0520               MOVS     R0,#+5
   \   000001D0   ........           BL       GLcd_SmallPutchar
    150          	
    151          	GLcd_SmallPutString(6,24,"KEY_ON",1);  
   \                     ??InputIO_View_15:
   \   000001D4   0123               MOVS     R3,#+1
   \   000001D6   ........           LDR.W    R2,??DataTable168_14
   \   000001DA   1821               MOVS     R1,#+24
   \   000001DC   0620               MOVS     R0,#+6
   \   000001DE   ........           BL       GLcd_SmallPutString
    152               
    153          }
   \   000001E2   01BD               POP      {R0,PC}          ;; return
    154          

   \                                 In section .text, align 2, keep-with-next
    155          void InputIO_Reverse_View(void)
    156          {
   \                     InputIO_Reverse_View:
   \   00000000   80B5               PUSH     {R7,LR}
    157          
    158          	if ( (INPUT_REVERSE_DATA & INPUT_BREAK_FLAG)  )    // 브레이크를 밟고 있는가?
   \   00000002   ........           LDR.W    R0,??DataTable168_15
   \   00000006   0078               LDRB     R0,[R0, #+0]
   \   00000008   C007               LSLS     R0,R0,#+31
   \   0000000A   08D5               BPL.N    ??InputIO_Reverse_View_0
    159          		GLcd_SmallPutchar(0,0,0x02,0,1);	// 채워진 네모 // 입력중
   \   0000000C   0120               MOVS     R0,#+1
   \   0000000E   0090               STR      R0,[SP, #+0]
   \   00000010   0023               MOVS     R3,#+0
   \   00000012   0222               MOVS     R2,#+2
   \   00000014   0021               MOVS     R1,#+0
   \   00000016   0020               MOVS     R0,#+0
   \   00000018   ........           BL       GLcd_SmallPutchar
   \   0000001C   07E0               B.N      ??InputIO_Reverse_View_1
    160          	else
    161          		GLcd_SmallPutchar(0,0,0x01,0,1);	// 빈 네모
   \                     ??InputIO_Reverse_View_0:
   \   0000001E   0120               MOVS     R0,#+1
   \   00000020   0090               STR      R0,[SP, #+0]
   \   00000022   0023               MOVS     R3,#+0
   \   00000024   0122               MOVS     R2,#+1
   \   00000026   0021               MOVS     R1,#+0
   \   00000028   0020               MOVS     R0,#+0
   \   0000002A   ........           BL       GLcd_SmallPutchar
    162          	if(IOReverse_Count == 0)
   \                     ??InputIO_Reverse_View_1:
   \   0000002E   ........           LDR.W    R0,??DataTable168_16
   \   00000032   0078               LDRB     R0,[R0, #+0]
   \   00000034   0028               CMP      R0,#+0
   \   00000036   14D1               BNE.N    ??InputIO_Reverse_View_2
    163               {
    164                    if(Toogle_Cursor == 0)
   \   00000038   ........           LDR.W    R0,??DataTable168_17
   \   0000003C   0078               LDRB     R0,[R0, #+0]
   \   0000003E   0028               CMP      R0,#+0
   \   00000040   07D1               BNE.N    ??InputIO_Reverse_View_3
    165                         GLcd_SmallPutString(1,0,"BREAK ",1);          
   \   00000042   0123               MOVS     R3,#+1
   \   00000044   ........           LDR.W    R2,??DataTable168_7
   \   00000048   0021               MOVS     R1,#+0
   \   0000004A   0120               MOVS     R0,#+1
   \   0000004C   ........           BL       GLcd_SmallPutString
   \   00000050   0EE0               B.N      ??InputIO_Reverse_View_4
    166                    else
    167                         GLcd_SmallPutString(1,0,"BREAK ",2);          
   \                     ??InputIO_Reverse_View_3:
   \   00000052   0223               MOVS     R3,#+2
   \   00000054   ........           LDR.W    R2,??DataTable168_7
   \   00000058   0021               MOVS     R1,#+0
   \   0000005A   0120               MOVS     R0,#+1
   \   0000005C   ........           BL       GLcd_SmallPutString
   \   00000060   06E0               B.N      ??InputIO_Reverse_View_4
    168               }else
    169                    GLcd_SmallPutString(1,0,"BREAK ",1);          
   \                     ??InputIO_Reverse_View_2:
   \   00000062   0123               MOVS     R3,#+1
   \   00000064   ........           LDR.W    R2,??DataTable168_7
   \   00000068   0021               MOVS     R1,#+0
   \   0000006A   0120               MOVS     R0,#+1
   \   0000006C   ........           BL       GLcd_SmallPutString
    170          	
    171          	if ( (INPUT_REVERSE_DATA & INPUT_GEAR_FLAG)  )    // 키어가 중립인가>?
   \                     ??InputIO_Reverse_View_4:
   \   00000070   ........           LDR.W    R0,??DataTable168_15
   \   00000074   0078               LDRB     R0,[R0, #+0]
   \   00000076   8007               LSLS     R0,R0,#+30
   \   00000078   08D5               BPL.N    ??InputIO_Reverse_View_5
    172          		GLcd_SmallPutchar(5,0,0x02,0,1);	// 채워진 네모 // 입력중
   \   0000007A   0120               MOVS     R0,#+1
   \   0000007C   0090               STR      R0,[SP, #+0]
   \   0000007E   0023               MOVS     R3,#+0
   \   00000080   0222               MOVS     R2,#+2
   \   00000082   0021               MOVS     R1,#+0
   \   00000084   0520               MOVS     R0,#+5
   \   00000086   ........           BL       GLcd_SmallPutchar
   \   0000008A   07E0               B.N      ??InputIO_Reverse_View_6
    173          	else
    174          		GLcd_SmallPutchar(5,0,0x01,0,1);	// 빈 네모
   \                     ??InputIO_Reverse_View_5:
   \   0000008C   0120               MOVS     R0,#+1
   \   0000008E   0090               STR      R0,[SP, #+0]
   \   00000090   0023               MOVS     R3,#+0
   \   00000092   0122               MOVS     R2,#+1
   \   00000094   0021               MOVS     R1,#+0
   \   00000096   0520               MOVS     R0,#+5
   \   00000098   ........           BL       GLcd_SmallPutchar
    175          	
    176          	if(IOReverse_Count == 1)
   \                     ??InputIO_Reverse_View_6:
   \   0000009C   ........           LDR.W    R0,??DataTable168_16
   \   000000A0   0078               LDRB     R0,[R0, #+0]
   \   000000A2   0128               CMP      R0,#+1
   \   000000A4   14D1               BNE.N    ??InputIO_Reverse_View_7
    177               {
    178                    if(Toogle_Cursor == 0)
   \   000000A6   ........           LDR.W    R0,??DataTable168_17
   \   000000AA   0078               LDRB     R0,[R0, #+0]
   \   000000AC   0028               CMP      R0,#+0
   \   000000AE   07D1               BNE.N    ??InputIO_Reverse_View_8
    179                         GLcd_SmallPutString(6,0,"GEAR  ",1);
   \   000000B0   0123               MOVS     R3,#+1
   \   000000B2   ........           LDR.W    R2,??DataTable168_8
   \   000000B6   0021               MOVS     R1,#+0
   \   000000B8   0620               MOVS     R0,#+6
   \   000000BA   ........           BL       GLcd_SmallPutString
   \   000000BE   0EE0               B.N      ??InputIO_Reverse_View_9
    180                    else
    181                         GLcd_SmallPutString(6,0,"GEAR  ",2);
   \                     ??InputIO_Reverse_View_8:
   \   000000C0   0223               MOVS     R3,#+2
   \   000000C2   ........           LDR.W    R2,??DataTable168_8
   \   000000C6   0021               MOVS     R1,#+0
   \   000000C8   0620               MOVS     R0,#+6
   \   000000CA   ........           BL       GLcd_SmallPutString
   \   000000CE   06E0               B.N      ??InputIO_Reverse_View_9
    182               }else
    183                     GLcd_SmallPutString(6,0,"GEAR  ",1);
   \                     ??InputIO_Reverse_View_7:
   \   000000D0   0123               MOVS     R3,#+1
   \   000000D2   ........           LDR.W    R2,??DataTable168_8
   \   000000D6   0021               MOVS     R1,#+0
   \   000000D8   0620               MOVS     R0,#+6
   \   000000DA   ........           BL       GLcd_SmallPutString
    184          	
    185          	if ( (INPUT_REVERSE_DATA & INPUT_PARKING_BREAK_FLAG)  )    // 파킹 브레이크 중인가?
   \                     ??InputIO_Reverse_View_9:
   \   000000DE   ........           LDR.W    R0,??DataTable168_15
   \   000000E2   0078               LDRB     R0,[R0, #+0]
   \   000000E4   4007               LSLS     R0,R0,#+29
   \   000000E6   08D5               BPL.N    ??InputIO_Reverse_View_10
    186          		GLcd_SmallPutchar(0,8,0x02,0,1);	// 채워진 네모 // 입력중
   \   000000E8   0120               MOVS     R0,#+1
   \   000000EA   0090               STR      R0,[SP, #+0]
   \   000000EC   0023               MOVS     R3,#+0
   \   000000EE   0222               MOVS     R2,#+2
   \   000000F0   0821               MOVS     R1,#+8
   \   000000F2   0020               MOVS     R0,#+0
   \   000000F4   ........           BL       GLcd_SmallPutchar
   \   000000F8   07E0               B.N      ??InputIO_Reverse_View_11
    187          	else
    188          		GLcd_SmallPutchar(0,8,0x01,0,1);	// 빈 네모
   \                     ??InputIO_Reverse_View_10:
   \   000000FA   0120               MOVS     R0,#+1
   \   000000FC   0090               STR      R0,[SP, #+0]
   \   000000FE   0023               MOVS     R3,#+0
   \   00000100   0122               MOVS     R2,#+1
   \   00000102   0821               MOVS     R1,#+8
   \   00000104   0020               MOVS     R0,#+0
   \   00000106   ........           BL       GLcd_SmallPutchar
    189          	if(IOReverse_Count == 2)
   \                     ??InputIO_Reverse_View_11:
   \   0000010A   ........           LDR.W    R0,??DataTable168_16
   \   0000010E   0078               LDRB     R0,[R0, #+0]
   \   00000110   0228               CMP      R0,#+2
   \   00000112   14D1               BNE.N    ??InputIO_Reverse_View_12
    190               {
    191                    if(Toogle_Cursor == 0)               
   \   00000114   ........           LDR.W    R0,??DataTable168_17
   \   00000118   0078               LDRB     R0,[R0, #+0]
   \   0000011A   0028               CMP      R0,#+0
   \   0000011C   07D1               BNE.N    ??InputIO_Reverse_View_13
    192                         GLcd_SmallPutString(1,8,"PARKING",1);
   \   0000011E   0123               MOVS     R3,#+1
   \   00000120   ........           ADR.W    R2,`?<Constant "PARKING">`
   \   00000124   0821               MOVS     R1,#+8
   \   00000126   0120               MOVS     R0,#+1
   \   00000128   ........           BL       GLcd_SmallPutString
   \   0000012C   0EE0               B.N      ??InputIO_Reverse_View_14
    193                    else
    194                         GLcd_SmallPutString(1,8,"PARKING",2);
   \                     ??InputIO_Reverse_View_13:
   \   0000012E   0223               MOVS     R3,#+2
   \   00000130   ........           ADR.W    R2,`?<Constant "PARKING">`
   \   00000134   0821               MOVS     R1,#+8
   \   00000136   0120               MOVS     R0,#+1
   \   00000138   ........           BL       GLcd_SmallPutString
   \   0000013C   06E0               B.N      ??InputIO_Reverse_View_14
    195               }else
    196                    GLcd_SmallPutString(1,8,"PARKING",1);
   \                     ??InputIO_Reverse_View_12:
   \   0000013E   0123               MOVS     R3,#+1
   \   00000140   ........           ADR.W    R2,`?<Constant "PARKING">`
   \   00000144   0821               MOVS     R1,#+8
   \   00000146   0120               MOVS     R0,#+1
   \   00000148   ........           BL       GLcd_SmallPutString
    197          	if ( (INPUT_REVERSE_DATA & INPUT_RLIGHT_FLAG)  )    // 오른쪽 전조등이 켜져 있는가?
   \                     ??InputIO_Reverse_View_14:
   \   0000014C   ........           LDR.W    R0,??DataTable168_15
   \   00000150   0078               LDRB     R0,[R0, #+0]
   \   00000152   0007               LSLS     R0,R0,#+28
   \   00000154   08D5               BPL.N    ??InputIO_Reverse_View_15
    198          		GLcd_SmallPutchar(5,8,0x02,0,1);	// 채워진 네모 // 입력중
   \   00000156   0120               MOVS     R0,#+1
   \   00000158   0090               STR      R0,[SP, #+0]
   \   0000015A   0023               MOVS     R3,#+0
   \   0000015C   0222               MOVS     R2,#+2
   \   0000015E   0821               MOVS     R1,#+8
   \   00000160   0520               MOVS     R0,#+5
   \   00000162   ........           BL       GLcd_SmallPutchar
   \   00000166   07E0               B.N      ??InputIO_Reverse_View_16
    199          	else
    200          		GLcd_SmallPutchar(5,8,0x01,0,1);	// 빈 네모
   \                     ??InputIO_Reverse_View_15:
   \   00000168   0120               MOVS     R0,#+1
   \   0000016A   0090               STR      R0,[SP, #+0]
   \   0000016C   0023               MOVS     R3,#+0
   \   0000016E   0122               MOVS     R2,#+1
   \   00000170   0821               MOVS     R1,#+8
   \   00000172   0520               MOVS     R0,#+5
   \   00000174   ........           BL       GLcd_SmallPutchar
    201          	if(IOReverse_Count == 3)
   \                     ??InputIO_Reverse_View_16:
   \   00000178   ....               LDR.N    R0,??DataTable168_16
   \   0000017A   0078               LDRB     R0,[R0, #+0]
   \   0000017C   0328               CMP      R0,#+3
   \   0000017E   13D1               BNE.N    ??InputIO_Reverse_View_17
    202               {
    203                    if(Toogle_Cursor == 0)                  
   \   00000180   ....               LDR.N    R0,??DataTable168_17
   \   00000182   0078               LDRB     R0,[R0, #+0]
   \   00000184   0028               CMP      R0,#+0
   \   00000186   07D1               BNE.N    ??InputIO_Reverse_View_18
    204                         GLcd_SmallPutString(6,8,"RLIGHT",1);
   \   00000188   0123               MOVS     R3,#+1
   \   0000018A   ........           ADR.W    R2,`?<Constant "RLIGHT">`
   \   0000018E   0821               MOVS     R1,#+8
   \   00000190   0620               MOVS     R0,#+6
   \   00000192   ........           BL       GLcd_SmallPutString
   \   00000196   0EE0               B.N      ??InputIO_Reverse_View_19
    205                    else
    206                         GLcd_SmallPutString(6,8,"RLIGHT",2);               
   \                     ??InputIO_Reverse_View_18:
   \   00000198   0223               MOVS     R3,#+2
   \   0000019A   ........           ADR.W    R2,`?<Constant "RLIGHT">`
   \   0000019E   0821               MOVS     R1,#+8
   \   000001A0   0620               MOVS     R0,#+6
   \   000001A2   ........           BL       GLcd_SmallPutString
   \   000001A6   06E0               B.N      ??InputIO_Reverse_View_19
    207               }else
    208                    GLcd_SmallPutString(6,8,"RLIGHT",1);
   \                     ??InputIO_Reverse_View_17:
   \   000001A8   0123               MOVS     R3,#+1
   \   000001AA   ........           ADR.W    R2,`?<Constant "RLIGHT">`
   \   000001AE   0821               MOVS     R1,#+8
   \   000001B0   0620               MOVS     R0,#+6
   \   000001B2   ........           BL       GLcd_SmallPutString
    209          	
    210          	if ( (INPUT_REVERSE_DATA & INPUT_LLIGHT_FLAG)  )    // 왼쪽 전조등이 켜져 있는가?
   \                     ??InputIO_Reverse_View_19:
   \   000001B6   ....               LDR.N    R0,??DataTable168_15
   \   000001B8   0078               LDRB     R0,[R0, #+0]
   \   000001BA   C006               LSLS     R0,R0,#+27
   \   000001BC   08D5               BPL.N    ??InputIO_Reverse_View_20
    211          		GLcd_SmallPutchar(0,16,0x02,0,1);	// 채워진 네모 // 입력중
   \   000001BE   0120               MOVS     R0,#+1
   \   000001C0   0090               STR      R0,[SP, #+0]
   \   000001C2   0023               MOVS     R3,#+0
   \   000001C4   0222               MOVS     R2,#+2
   \   000001C6   1021               MOVS     R1,#+16
   \   000001C8   0020               MOVS     R0,#+0
   \   000001CA   ........           BL       GLcd_SmallPutchar
   \   000001CE   07E0               B.N      ??InputIO_Reverse_View_21
    212          	else
    213          		GLcd_SmallPutchar(0,16,0x01,0,1);	// 빈 네모
   \                     ??InputIO_Reverse_View_20:
   \   000001D0   0120               MOVS     R0,#+1
   \   000001D2   0090               STR      R0,[SP, #+0]
   \   000001D4   0023               MOVS     R3,#+0
   \   000001D6   0122               MOVS     R2,#+1
   \   000001D8   1021               MOVS     R1,#+16
   \   000001DA   0020               MOVS     R0,#+0
   \   000001DC   ........           BL       GLcd_SmallPutchar
    214          	if(IOReverse_Count == 4)
   \                     ??InputIO_Reverse_View_21:
   \   000001E0   ....               LDR.N    R0,??DataTable168_16
   \   000001E2   0078               LDRB     R0,[R0, #+0]
   \   000001E4   0428               CMP      R0,#+4
   \   000001E6   13D1               BNE.N    ??InputIO_Reverse_View_22
    215               {
    216                    if(Toogle_Cursor == 0)                  
   \   000001E8   ....               LDR.N    R0,??DataTable168_17
   \   000001EA   0078               LDRB     R0,[R0, #+0]
   \   000001EC   0028               CMP      R0,#+0
   \   000001EE   07D1               BNE.N    ??InputIO_Reverse_View_23
    217                         GLcd_SmallPutString(1,16,"LLIGHT",1);
   \   000001F0   0123               MOVS     R3,#+1
   \   000001F2   ........           ADR.W    R2,`?<Constant "LLIGHT">`
   \   000001F6   1021               MOVS     R1,#+16
   \   000001F8   0120               MOVS     R0,#+1
   \   000001FA   ........           BL       GLcd_SmallPutString
   \   000001FE   0EE0               B.N      ??InputIO_Reverse_View_24
    218                    else
    219                         GLcd_SmallPutString(1,16,"LLIGHT",2);
   \                     ??InputIO_Reverse_View_23:
   \   00000200   0223               MOVS     R3,#+2
   \   00000202   ........           ADR.W    R2,`?<Constant "LLIGHT">`
   \   00000206   1021               MOVS     R1,#+16
   \   00000208   0120               MOVS     R0,#+1
   \   0000020A   ........           BL       GLcd_SmallPutString
   \   0000020E   06E0               B.N      ??InputIO_Reverse_View_24
    220               }
    221               else
    222                    GLcd_SmallPutString(1,16,"LLIGHT",1);
   \                     ??InputIO_Reverse_View_22:
   \   00000210   0123               MOVS     R3,#+1
   \   00000212   ........           ADR.W    R2,`?<Constant "LLIGHT">`
   \   00000216   1021               MOVS     R1,#+16
   \   00000218   0120               MOVS     R0,#+1
   \   0000021A   ........           BL       GLcd_SmallPutString
    223          	
    224          	if ( (INPUT_REVERSE_DATA & INPUT_F_DOOR_FLAG)  )    // 앞문이 열려있는가?
   \                     ??InputIO_Reverse_View_24:
   \   0000021E   ....               LDR.N    R0,??DataTable168_15
   \   00000220   0078               LDRB     R0,[R0, #+0]
   \   00000222   8006               LSLS     R0,R0,#+26
   \   00000224   08D5               BPL.N    ??InputIO_Reverse_View_25
    225          		GLcd_SmallPutchar(5,16,0x02,0,1);	// 채워진 네모 // 입력중
   \   00000226   0120               MOVS     R0,#+1
   \   00000228   0090               STR      R0,[SP, #+0]
   \   0000022A   0023               MOVS     R3,#+0
   \   0000022C   0222               MOVS     R2,#+2
   \   0000022E   1021               MOVS     R1,#+16
   \   00000230   0520               MOVS     R0,#+5
   \   00000232   ........           BL       GLcd_SmallPutchar
   \   00000236   07E0               B.N      ??InputIO_Reverse_View_26
    226          	else
    227          		GLcd_SmallPutchar(5,16,0x01,0,1);	// 빈 네모
   \                     ??InputIO_Reverse_View_25:
   \   00000238   0120               MOVS     R0,#+1
   \   0000023A   0090               STR      R0,[SP, #+0]
   \   0000023C   0023               MOVS     R3,#+0
   \   0000023E   0122               MOVS     R2,#+1
   \   00000240   1021               MOVS     R1,#+16
   \   00000242   0520               MOVS     R0,#+5
   \   00000244   ........           BL       GLcd_SmallPutchar
    228          	if(IOReverse_Count == 5)
   \                     ??InputIO_Reverse_View_26:
   \   00000248   ....               LDR.N    R0,??DataTable168_16
   \   0000024A   0078               LDRB     R0,[R0, #+0]
   \   0000024C   0528               CMP      R0,#+5
   \   0000024E   13D1               BNE.N    ??InputIO_Reverse_View_27
    229               {
    230                    if(Toogle_Cursor == 0)                    
   \   00000250   ....               LDR.N    R0,??DataTable168_17
   \   00000252   0078               LDRB     R0,[R0, #+0]
   \   00000254   0028               CMP      R0,#+0
   \   00000256   07D1               BNE.N    ??InputIO_Reverse_View_28
    231                         GLcd_SmallPutString(6,16,"F_DOOR",1);         
   \   00000258   0123               MOVS     R3,#+1
   \   0000025A   ........           ADR.W    R2,`?<Constant "F_DOOR">`
   \   0000025E   1021               MOVS     R1,#+16
   \   00000260   0620               MOVS     R0,#+6
   \   00000262   ........           BL       GLcd_SmallPutString
   \   00000266   0EE0               B.N      ??InputIO_Reverse_View_29
    232                    else
    233                         GLcd_SmallPutString(6,16,"F_DOOR",2);                        
   \                     ??InputIO_Reverse_View_28:
   \   00000268   0223               MOVS     R3,#+2
   \   0000026A   ........           ADR.W    R2,`?<Constant "F_DOOR">`
   \   0000026E   1021               MOVS     R1,#+16
   \   00000270   0620               MOVS     R0,#+6
   \   00000272   ........           BL       GLcd_SmallPutString
   \   00000276   06E0               B.N      ??InputIO_Reverse_View_29
    234               }else
    235                    GLcd_SmallPutString(6,16,"F_DOOR",1);
   \                     ??InputIO_Reverse_View_27:
   \   00000278   0123               MOVS     R3,#+1
   \   0000027A   ........           ADR.W    R2,`?<Constant "F_DOOR">`
   \   0000027E   1021               MOVS     R1,#+16
   \   00000280   0620               MOVS     R0,#+6
   \   00000282   ........           BL       GLcd_SmallPutString
    236          	
    237          	if ( (INPUT_REVERSE_DATA & INPUT_R_DOOR_FLAG)  )    // 뒷문이 열려 있는가?
   \                     ??InputIO_Reverse_View_29:
   \   00000286   ....               LDR.N    R0,??DataTable168_15
   \   00000288   0078               LDRB     R0,[R0, #+0]
   \   0000028A   4006               LSLS     R0,R0,#+25
   \   0000028C   08D5               BPL.N    ??InputIO_Reverse_View_30
    238          		GLcd_SmallPutchar(0,24,0x02,0,1);	// 채워진 네모 // 입력중
   \   0000028E   0120               MOVS     R0,#+1
   \   00000290   0090               STR      R0,[SP, #+0]
   \   00000292   0023               MOVS     R3,#+0
   \   00000294   0222               MOVS     R2,#+2
   \   00000296   1821               MOVS     R1,#+24
   \   00000298   0020               MOVS     R0,#+0
   \   0000029A   ........           BL       GLcd_SmallPutchar
   \   0000029E   07E0               B.N      ??InputIO_Reverse_View_31
    239          	else
    240          		GLcd_SmallPutchar(0,24,0x01,0,1);	// 빈 네모
   \                     ??InputIO_Reverse_View_30:
   \   000002A0   0120               MOVS     R0,#+1
   \   000002A2   0090               STR      R0,[SP, #+0]
   \   000002A4   0023               MOVS     R3,#+0
   \   000002A6   0122               MOVS     R2,#+1
   \   000002A8   1821               MOVS     R1,#+24
   \   000002AA   0020               MOVS     R0,#+0
   \   000002AC   ........           BL       GLcd_SmallPutchar
    241               
    242          	if(IOReverse_Count == 6)
   \                     ??InputIO_Reverse_View_31:
   \   000002B0   ....               LDR.N    R0,??DataTable168_16
   \   000002B2   0078               LDRB     R0,[R0, #+0]
   \   000002B4   0628               CMP      R0,#+6
   \   000002B6   13D1               BNE.N    ??InputIO_Reverse_View_32
    243               {
    244                    if(Toogle_Cursor == 0) 	
   \   000002B8   ....               LDR.N    R0,??DataTable168_17
   \   000002BA   0078               LDRB     R0,[R0, #+0]
   \   000002BC   0028               CMP      R0,#+0
   \   000002BE   07D1               BNE.N    ??InputIO_Reverse_View_33
    245                         GLcd_SmallPutString(1,24,"R_DOOR",1);  
   \   000002C0   0123               MOVS     R3,#+1
   \   000002C2   ........           ADR.W    R2,`?<Constant "R_DOOR">`
   \   000002C6   1821               MOVS     R1,#+24
   \   000002C8   0120               MOVS     R0,#+1
   \   000002CA   ........           BL       GLcd_SmallPutString
   \   000002CE   0EE0               B.N      ??InputIO_Reverse_View_34
    246                    else
    247                         GLcd_SmallPutString(1,24,"R_DOOR",2);
   \                     ??InputIO_Reverse_View_33:
   \   000002D0   0223               MOVS     R3,#+2
   \   000002D2   ........           ADR.W    R2,`?<Constant "R_DOOR">`
   \   000002D6   1821               MOVS     R1,#+24
   \   000002D8   0120               MOVS     R0,#+1
   \   000002DA   ........           BL       GLcd_SmallPutString
   \   000002DE   06E0               B.N      ??InputIO_Reverse_View_34
    248               }
    249               else
    250                    GLcd_SmallPutString(1,24,"R_DOOR",1);
   \                     ??InputIO_Reverse_View_32:
   \   000002E0   0123               MOVS     R3,#+1
   \   000002E2   ........           ADR.W    R2,`?<Constant "R_DOOR">`
   \   000002E6   1821               MOVS     R1,#+24
   \   000002E8   0120               MOVS     R0,#+1
   \   000002EA   ........           BL       GLcd_SmallPutString
    251          	if ( (INPUT_REVERSE_DATA & INPUT_KEYON_FLAG)  )    // 뒷문이 열려 있는가?
   \                     ??InputIO_Reverse_View_34:
   \   000002EE   ....               LDR.N    R0,??DataTable168_15
   \   000002F0   0078               LDRB     R0,[R0, #+0]
   \   000002F2   0006               LSLS     R0,R0,#+24
   \   000002F4   08D5               BPL.N    ??InputIO_Reverse_View_35
    252          		GLcd_SmallPutchar(5,24,0x02,0,1);	// 채워진 네모 // 입력중
   \   000002F6   0120               MOVS     R0,#+1
   \   000002F8   0090               STR      R0,[SP, #+0]
   \   000002FA   0023               MOVS     R3,#+0
   \   000002FC   0222               MOVS     R2,#+2
   \   000002FE   1821               MOVS     R1,#+24
   \   00000300   0520               MOVS     R0,#+5
   \   00000302   ........           BL       GLcd_SmallPutchar
   \   00000306   07E0               B.N      ??InputIO_Reverse_View_36
    253          	else
    254          		GLcd_SmallPutchar(5,24,0x01,0,1);	// 빈 네모
   \                     ??InputIO_Reverse_View_35:
   \   00000308   0120               MOVS     R0,#+1
   \   0000030A   0090               STR      R0,[SP, #+0]
   \   0000030C   0023               MOVS     R3,#+0
   \   0000030E   0122               MOVS     R2,#+1
   \   00000310   1821               MOVS     R1,#+24
   \   00000312   0520               MOVS     R0,#+5
   \   00000314   ........           BL       GLcd_SmallPutchar
    255               
    256          	if(IOReverse_Count == 7)
   \                     ??InputIO_Reverse_View_36:
   \   00000318   ....               LDR.N    R0,??DataTable168_16
   \   0000031A   0078               LDRB     R0,[R0, #+0]
   \   0000031C   0728               CMP      R0,#+7
   \   0000031E   13D1               BNE.N    ??InputIO_Reverse_View_37
    257               {
    258                    if(Toogle_Cursor == 0) 		
   \   00000320   ....               LDR.N    R0,??DataTable168_17
   \   00000322   0078               LDRB     R0,[R0, #+0]
   \   00000324   0028               CMP      R0,#+0
   \   00000326   07D1               BNE.N    ??InputIO_Reverse_View_38
    259                         GLcd_SmallPutString(6,24,"KEY_ON",1);  
   \   00000328   0123               MOVS     R3,#+1
   \   0000032A   ........           ADR.W    R2,`?<Constant "KEY_ON">`
   \   0000032E   1821               MOVS     R1,#+24
   \   00000330   0620               MOVS     R0,#+6
   \   00000332   ........           BL       GLcd_SmallPutString
   \   00000336   0EE0               B.N      ??InputIO_Reverse_View_39
    260                    else
    261                         GLcd_SmallPutString(6,24,"KEY_ON",2);  
   \                     ??InputIO_Reverse_View_38:
   \   00000338   0223               MOVS     R3,#+2
   \   0000033A   ........           ADR.W    R2,`?<Constant "KEY_ON">`
   \   0000033E   1821               MOVS     R1,#+24
   \   00000340   0620               MOVS     R0,#+6
   \   00000342   ........           BL       GLcd_SmallPutString
   \   00000346   06E0               B.N      ??InputIO_Reverse_View_39
    262               }else
    263                    GLcd_SmallPutString(6,24,"KEY_ON",1);  
   \                     ??InputIO_Reverse_View_37:
   \   00000348   0123               MOVS     R3,#+1
   \   0000034A   ........           ADR.W    R2,`?<Constant "KEY_ON">`
   \   0000034E   1821               MOVS     R1,#+24
   \   00000350   0620               MOVS     R0,#+6
   \   00000352   ........           BL       GLcd_SmallPutString
    264               
    265          }
   \                     ??InputIO_Reverse_View_39:
   \   00000356   01BD               POP      {R0,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
    266          void Input_View(void)
    267          {
   \                     Input_View:
   \   00000000   80B5               PUSH     {R7,LR}
    268          
    269          	sprintf((char *)Buffer,"LPGP %04.1f",(float)Info.EMS_Data.LPG_PWM_Value/10);
   \   00000002   ....               LDR.N    R0,??DataTable168_6
   \   00000004   B0F84900           LDRH     R0,[R0, #+73]
   \   00000008   ........           BL       __aeabi_ui2f
   \   0000000C   ....               LDR.N    R1,??DataTable168_18  ;; 0x41200000
   \   0000000E   ........           BL       __aeabi_fdiv
   \   00000012   ........           BL       __aeabi_f2d
   \   00000016   0200               MOVS     R2,R0
   \   00000018   0B00               MOVS     R3,R1
   \   0000001A   ........           ADR.W    R1,`?<Constant "LPGP %04.1f">`
   \   0000001E   ....               LDR.N    R0,??DataTable168_19
   \   00000020   ........           BL       sprintf
    270          	GLcd_SmallPutString(0,0,Buffer,1);          
   \   00000024   0123               MOVS     R3,#+1
   \   00000026   ....               LDR.N    R2,??DataTable168_19
   \   00000028   0021               MOVS     R1,#+0
   \   0000002A   0020               MOVS     R0,#+0
   \   0000002C   ........           BL       GLcd_SmallPutString
    271          	
    272          	sprintf((char *)Buffer,"AirP %04.1f",(float)Info.EMS_Data.AirPressure_Volt/1000);
   \   00000030   ....               LDR.N    R0,??DataTable168_6
   \   00000032   B0F84300           LDRH     R0,[R0, #+67]
   \   00000036   ........           BL       __aeabi_ui2f
   \   0000003A   ....               LDR.N    R1,??DataTable168_20  ;; 0x447a0000
   \   0000003C   ........           BL       __aeabi_fdiv
   \   00000040   ........           BL       __aeabi_f2d
   \   00000044   0200               MOVS     R2,R0
   \   00000046   0B00               MOVS     R3,R1
   \   00000048   ........           ADR.W    R1,`?<Constant "AirP %04.1f">`
   \   0000004C   ....               LDR.N    R0,??DataTable168_19
   \   0000004E   ........           BL       sprintf
    273          	GLcd_SmallPutString(5,0,Buffer,1);               
   \   00000052   0123               MOVS     R3,#+1
   \   00000054   ....               LDR.N    R2,??DataTable168_19
   \   00000056   0021               MOVS     R1,#+0
   \   00000058   0520               MOVS     R0,#+5
   \   0000005A   ........           BL       GLcd_SmallPutString
    274          	
    275          	sprintf((char *)Buffer,"WTmp %04.1f",(float)Info.EMS_Data.CoolWaterTemp_Volt/1000);
   \   0000005E   ....               LDR.N    R0,??DataTable168_6
   \   00000060   B0F84500           LDRH     R0,[R0, #+69]
   \   00000064   ........           BL       __aeabi_ui2f
   \   00000068   ....               LDR.N    R1,??DataTable168_20  ;; 0x447a0000
   \   0000006A   ........           BL       __aeabi_fdiv
   \   0000006E   ........           BL       __aeabi_f2d
   \   00000072   0200               MOVS     R2,R0
   \   00000074   0B00               MOVS     R3,R1
   \   00000076   ........           ADR.W    R1,`?<Constant "WTmp %04.1f">`
   \   0000007A   ....               LDR.N    R0,??DataTable168_19
   \   0000007C   ........           BL       sprintf
    276          	GLcd_SmallPutString(0,12,Buffer,1);
   \   00000080   0123               MOVS     R3,#+1
   \   00000082   ....               LDR.N    R2,??DataTable168_19
   \   00000084   0C21               MOVS     R1,#+12
   \   00000086   0020               MOVS     R0,#+0
   \   00000088   ........           BL       GLcd_SmallPutString
    277          	
    278          	sprintf((char *)Buffer,"Batt %04.1f",(float)Info.EMS_Data.Battery_Volt/1000);
   \   0000008C   ....               LDR.N    R0,??DataTable168_6
   \   0000008E   B0F84100           LDRH     R0,[R0, #+65]
   \   00000092   ........           BL       __aeabi_ui2f
   \   00000096   ....               LDR.N    R1,??DataTable168_20  ;; 0x447a0000
   \   00000098   ........           BL       __aeabi_fdiv
   \   0000009C   ........           BL       __aeabi_f2d
   \   000000A0   0200               MOVS     R2,R0
   \   000000A2   0B00               MOVS     R3,R1
   \   000000A4   ........           ADR.W    R1,`?<Constant "Batt %04.1f">`
   \   000000A8   ....               LDR.N    R0,??DataTable168_19
   \   000000AA   ........           BL       sprintf
    279          	GLcd_SmallPutString(5,12,Buffer,1);
   \   000000AE   0123               MOVS     R3,#+1
   \   000000B0   ....               LDR.N    R2,??DataTable168_19
   \   000000B2   0C21               MOVS     R1,#+12
   \   000000B4   0520               MOVS     R0,#+5
   \   000000B6   ........           BL       GLcd_SmallPutString
    280          	
    281          	sprintf((char *)Buffer,"Fuel %04.1f",(float)Info.EMS_Data.Fuel_Volt/1000);
   \   000000BA   ....               LDR.N    R0,??DataTable168_6
   \   000000BC   B0F83F00           LDRH     R0,[R0, #+63]
   \   000000C0   ........           BL       __aeabi_ui2f
   \   000000C4   ....               LDR.N    R1,??DataTable168_20  ;; 0x447a0000
   \   000000C6   ........           BL       __aeabi_fdiv
   \   000000CA   ........           BL       __aeabi_f2d
   \   000000CE   0200               MOVS     R2,R0
   \   000000D0   0B00               MOVS     R3,R1
   \   000000D2   ........           ADR.W    R1,`?<Constant "Fuel %04.1f">`
   \   000000D6   ....               LDR.N    R0,??DataTable168_19
   \   000000D8   ........           BL       sprintf
    282          	GLcd_SmallPutString(0,24,Buffer,1);			
   \   000000DC   0123               MOVS     R3,#+1
   \   000000DE   ....               LDR.N    R2,??DataTable168_19
   \   000000E0   1821               MOVS     R1,#+24
   \   000000E2   0020               MOVS     R0,#+0
   \   000000E4   ........           BL       GLcd_SmallPutString
    283          	
    284          	sprintf((char *)Buffer,"Accl %04.1f",(float)Info.EMS_Data.Acceller_Volt/1000);
   \   000000E8   ....               LDR.N    R0,??DataTable168_6
   \   000000EA   B0F84700           LDRH     R0,[R0, #+71]
   \   000000EE   ........           BL       __aeabi_ui2f
   \   000000F2   ....               LDR.N    R1,??DataTable168_20  ;; 0x447a0000
   \   000000F4   ........           BL       __aeabi_fdiv
   \   000000F8   ........           BL       __aeabi_f2d
   \   000000FC   0200               MOVS     R2,R0
   \   000000FE   0B00               MOVS     R3,R1
   \   00000100   ........           ADR.W    R1,`?<Constant "Accl %04.1f">`
   \   00000104   ....               LDR.N    R0,??DataTable168_19
   \   00000106   ........           BL       sprintf
    285          	GLcd_SmallPutString(5,24,Buffer,1);			    
   \   0000010A   0123               MOVS     R3,#+1
   \   0000010C   ....               LDR.N    R2,??DataTable168_19
   \   0000010E   1821               MOVS     R1,#+24
   \   00000110   0520               MOVS     R0,#+5
   \   00000112   ........           BL       GLcd_SmallPutString
    286          }
   \   00000116   01BD               POP      {R0,PC}          ;; return
    287          
    288          

   \                                 In section .text, align 2, keep-with-next
    289          void Write_Word(unsigned char x, unsigned char y, char *string)
    290          {
   \                     Write_Word:
   \   00000000   80B5               PUSH     {R7,LR}
    291               Wait_x = x;
   \   00000002   ....               LDR.N    R3,??DataTable168_21
   \   00000004   1870               STRB     R0,[R3, #+0]
    292               Wait_y = y;
   \   00000006   ....               LDR.N    R0,??DataTable168_22
   \   00000008   0170               STRB     R1,[R0, #+0]
    293               strcpy((char*)LCD_WaitString,string);
   \   0000000A   1100               MOVS     R1,R2
   \   0000000C   ....               LDR.N    R0,??DataTable168_23
   \   0000000E   ........           BL       strcpy
    294          
    295          }
   \   00000012   01BD               POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
    296          void Display(void)
    297          {
   \                     Display:
   \   00000000   00B5               PUSH     {LR}
   \   00000002   87B0               SUB      SP,SP,#+28
    298          	static u16 Display_Time;
    299          	static u8 Led_Flag = 0;
    300               u8 i;
    301               u8 PasswordBuffer[5];
    302          	//////////////////////////////////////////////////////////////////////
    303          	if(GLCD_Refresh_Flag == 0)
   \   00000004   DFF8880D           LDR.W    R0,??Display_0
   \   00000008   0078               LDRB     R0,[R0, #+0]
   \   0000000A   0028               CMP      R0,#+0
   \   0000000C   09D1               BNE.N    ??Display_1
    304               {
    305                    if(!CheckTimeOver(500,Display_Time))		// 500ms 마다 진입               
   \   0000000E   DFF8840D           LDR.W    R0,??Display_0+0x4
   \   00000012   0188               LDRH     R1,[R0, #+0]
   \   00000014   4FF4FA70           MOV      R0,#+500
   \   00000018   ........           BL       CheckTimeOver
   \   0000001C   0028               CMP      R0,#+0
   \   0000001E   01F05A83           BEQ.W    ??Display_2
    306                         return;              
    307               }
    308               
    309               ///////////////////////////////////////////////////////////////////////
    310                
    311               GLCD_Refresh_Flag = 0;
   \                     ??Display_1:
   \   00000022   DFF86C0D           LDR.W    R0,??Display_0
   \   00000026   0021               MOVS     R1,#+0
   \   00000028   0170               STRB     R1,[R0, #+0]
    312               memset(GLCD_Data,0,sizeof(GLCD_Data));
   \   0000002A   4FF4FA62           MOV      R2,#+2000
   \   0000002E   0021               MOVS     R1,#+0
   \   00000030   DFF8640D           LDR.W    R0,??Display_0+0x8
   \   00000034   ........           BL       memset
    313               memset(GLCD_Buffer,0,sizeof(GLCD_Buffer));
   \   00000038   4FF4FA62           MOV      R2,#+2000
   \   0000003C   0021               MOVS     R1,#+0
   \   0000003E   DFF85C0D           LDR.W    R0,??Display_0+0xC
   \   00000042   ........           BL       memset
    314          	Display_Time = MS_TIMER;  	
   \   00000046   DFF8580D           LDR.W    R0,??Display_0+0x10  ;; 0x40000c00
   \   0000004A   ........           BL       TIM_GetCounter
   \   0000004E   DFF8441D           LDR.W    R1,??Display_0+0x4
   \   00000052   0880               STRH     R0,[R1, #+0]
    315               if(Led_Flag == 1)
   \   00000054   DFF84C0D           LDR.W    R0,??Display_0+0x14
   \   00000058   0078               LDRB     R0,[R0, #+0]
   \   0000005A   0128               CMP      R0,#+1
   \   0000005C   0AD1               BNE.N    ??Display_3
    316               {
    317                    Led_Flag = 0;
   \   0000005E   DFF8440D           LDR.W    R0,??Display_0+0x14
   \   00000062   0021               MOVS     R1,#+0
   \   00000064   0170               STRB     R1,[R0, #+0]
    318                    Toogle_Cursor = 0;   
   \   00000066   DFF8400D           LDR.W    R0,??Display_0+0x18
   \   0000006A   0021               MOVS     R1,#+0
   \   0000006C   0170               STRB     R1,[R0, #+0]
    319                    LED2_GREEN();
   \   0000006E   ........           BL       LED2_GREEN
   \   00000072   09E0               B.N      ??Display_4
    320               }
    321               else
    322               {
    323                    Led_Flag = 1;
   \                     ??Display_3:
   \   00000074   DFF82C0D           LDR.W    R0,??Display_0+0x14
   \   00000078   0121               MOVS     R1,#+1
   \   0000007A   0170               STRB     R1,[R0, #+0]
    324                    Toogle_Cursor = 1;   
   \   0000007C   DFF8280D           LDR.W    R0,??Display_0+0x18
   \   00000080   0121               MOVS     R1,#+1
   \   00000082   0170               STRB     R1,[R0, #+0]
    325                    LED2_OFF();
   \   00000084   ........           BL       LED2_OFF
    326               }	
    327               GLCD_OUT_Flag = 1;       //화면 출력 선택
   \                     ??Display_4:
   \   00000088   DFF8200D           LDR.W    R0,??Display_0+0x1C
   \   0000008C   0121               MOVS     R1,#+1
   \   0000008E   0170               STRB     R1,[R0, #+0]
    328               GLCD_Buffer_Cnt = 0;
   \   00000090   DFF81C0D           LDR.W    R0,??Display_0+0x20
   \   00000094   0021               MOVS     R1,#+0
   \   00000096   0180               STRH     R1,[R0, #+0]
    329          	/////////////////////////////////////////////////////////////////////         
    330          	
    331          	switch(DisplayInfo.Now_View)
   \   00000098   DFF8180D           LDR.W    R0,??Display_0+0x24
   \   0000009C   4079               LDRB     R0,[R0, #+5]
   \   0000009E   0128               CMP      R0,#+1
   \   000000A0   00F0B780           BEQ.W    ??Display_5
   \   000000A4   0228               CMP      R0,#+2
   \   000000A6   00F0D980           BEQ.W    ??Display_6
   \   000000AA   0328               CMP      R0,#+3
   \   000000AC   00F00581           BEQ.W    ??Display_7
   \   000000B0   0428               CMP      R0,#+4
   \   000000B2   00F04981           BEQ.W    ??Display_8
   \   000000B6   0528               CMP      R0,#+5
   \   000000B8   00F07481           BEQ.W    ??Display_9
   \   000000BC   0628               CMP      R0,#+6
   \   000000BE   00F09381           BEQ.W    ??Display_10
   \   000000C2   0728               CMP      R0,#+7
   \   000000C4   00F0BA81           BEQ.W    ??Display_11
   \   000000C8   0828               CMP      R0,#+8
   \   000000CA   00F0DB81           BEQ.W    ??Display_12
   \   000000CE   0928               CMP      R0,#+9
   \   000000D0   00F0DC81           BEQ.W    ??Display_13
   \   000000D4   0A28               CMP      R0,#+10
   \   000000D6   00F0DD81           BEQ.W    ??Display_14
   \   000000DA   0B28               CMP      R0,#+11
   \   000000DC   00F0F981           BEQ.W    ??Display_15
   \   000000E0   0C28               CMP      R0,#+12
   \   000000E2   00F03282           BEQ.W    ??Display_16
   \   000000E6   0D28               CMP      R0,#+13
   \   000000E8   00F04D82           BEQ.W    ??Display_17
   \   000000EC   0E28               CMP      R0,#+14
   \   000000EE   00F06882           BEQ.W    ??Display_18
   \   000000F2   0F28               CMP      R0,#+15
   \   000000F4   00F08980           BEQ.W    ??Display_19
   \   000000F8   1028               CMP      R0,#+16
   \   000000FA   6AD0               BEQ.N    ??Display_20
   \   000000FC   1128               CMP      R0,#+17
   \   000000FE   00F08182           BEQ.W    ??Display_21
   \   00000102   1228               CMP      R0,#+18
   \   00000104   00F09E82           BEQ.W    ??Display_22
   \   00000108   1328               CMP      R0,#+19
   \   0000010A   00F0BB82           BEQ.W    ??Display_23
   \   0000010E   1428               CMP      R0,#+20
   \   00000110   00F0D882           BEQ.W    ??Display_24
   \   00000114   1528               CMP      R0,#+21
   \   00000116   00F0F582           BEQ.W    ??Display_25
   \   0000011A   1628               CMP      R0,#+22
   \   0000011C   00F04983           BEQ.W    ??Display_26
   \   00000120   1728               CMP      R0,#+23
   \   00000122   00F0C383           BEQ.W    ??Display_27
   \   00000126   1828               CMP      R0,#+24
   \   00000128   01F0BE82           BEQ.W    ??Display_28
   \   0000012C   1A28               CMP      R0,#+26
   \   0000012E   00F05884           BEQ.W    ??Display_29
   \   00000132   1B28               CMP      R0,#+27
   \   00000134   00F0E984           BEQ.W    ??Display_30
   \   00000138   1C28               CMP      R0,#+28
   \   0000013A   00F06A85           BEQ.W    ??Display_31
   \   0000013E   1D28               CMP      R0,#+29
   \   00000140   00F0DE85           BEQ.W    ??Display_32
   \   00000144   1E28               CMP      R0,#+30
   \   00000146   00F06686           BEQ.W    ??Display_33
   \   0000014A   1F28               CMP      R0,#+31
   \   0000014C   00F08786           BEQ.W    ??Display_34
   \   00000150   2028               CMP      R0,#+32
   \   00000152   00F0A886           BEQ.W    ??Display_35
   \   00000156   2128               CMP      R0,#+33
   \   00000158   00F0C386           BEQ.W    ??Display_36
   \   0000015C   2228               CMP      R0,#+34
   \   0000015E   00F0FF86           BEQ.W    ??Display_37
   \   00000162   2328               CMP      R0,#+35
   \   00000164   00F0B687           BEQ.W    ??Display_38
   \   00000168   2428               CMP      R0,#+36
   \   0000016A   01F06680           BEQ.W    ??Display_39
   \   0000016E   2528               CMP      R0,#+37
   \   00000170   01F09380           BEQ.W    ??Display_40
   \   00000174   2628               CMP      R0,#+38
   \   00000176   01F0C080           BEQ.W    ??Display_41
   \   0000017A   2728               CMP      R0,#+39
   \   0000017C   01F0EB80           BEQ.W    ??Display_42
   \   00000180   2828               CMP      R0,#+40
   \   00000182   01F01681           BEQ.W    ??Display_43
   \   00000186   2928               CMP      R0,#+41
   \   00000188   01F04181           BEQ.W    ??Display_44
   \   0000018C   2A28               CMP      R0,#+42
   \   0000018E   01F06881           BEQ.W    ??Display_45
   \   00000192   2B28               CMP      R0,#+43
   \   00000194   01F08281           BEQ.W    ??Display_46
   \   00000198   2C28               CMP      R0,#+44
   \   0000019A   01F09B81           BEQ.W    ??Display_47
   \   0000019E   2D28               CMP      R0,#+45
   \   000001A0   01F0B381           BEQ.W    ??Display_48
   \   000001A4   2E28               CMP      R0,#+46
   \   000001A6   01F0C881           BEQ.W    ??Display_49
   \   000001AA   3028               CMP      R0,#+48
   \   000001AC   01F0E981           BEQ.W    ??Display_50
   \   000001B0   3128               CMP      R0,#+49
   \   000001B2   01F01082           BEQ.W    ??Display_51
   \   000001B6   3228               CMP      R0,#+50
   \   000001B8   01F02282           BEQ.W    ??Display_52
   \   000001BC   3328               CMP      R0,#+51
   \   000001BE   01F03A82           BEQ.W    ??Display_53
   \   000001C2   3428               CMP      R0,#+52
   \   000001C4   01F05882           BEQ.W    ??Display_54
   \   000001C8   3528               CMP      R0,#+53
   \   000001CA   00F0EA83           BEQ.W    ??Display_55
   \   000001CE   01F082BA           B.W      ??Display_56
    332          	{
    333               case DISP_MENU_USECOM:
    334                    {
    335          			sprintf( (char *)Display_Buff," COMMNUNICATION MODE  " );
   \                     ??Display_20:
   \   000001D2   DFF8701D           LDR.W    R1,??Display_57
   \   000001D6   DFF8700D           LDR.W    R0,??Display_57+0x4
   \   000001DA   ........           BL       sprintf
    336          			GLcd_PutString(0,0,Display_Buff,1);
   \   000001DE   0123               MOVS     R3,#+1
   \   000001E0   DFF8642D           LDR.W    R2,??Display_57+0x4
   \   000001E4   0021               MOVS     R1,#+0
   \   000001E6   0020               MOVS     R0,#+0
   \   000001E8   ........           BL       GLcd_PutString
    337          			sprintf( (char *)Display_Buff,"  CONNECT USE CABLE   " );		        
   \   000001EC   DFF85C1D           LDR.W    R1,??Display_57+0x8
   \   000001F0   DFF8540D           LDR.W    R0,??Display_57+0x4
   \   000001F4   ........           BL       sprintf
    338          			GLcd_PutString(0,16,Display_Buff,1);
   \   000001F8   0123               MOVS     R3,#+1
   \   000001FA   DFF84C2D           LDR.W    R2,??Display_57+0x4
   \   000001FE   1021               MOVS     R1,#+16
   \   00000200   0020               MOVS     R0,#+0
   \   00000202   ........           BL       GLcd_PutString
    339                                       
    340                    }break;
   \   00000206   01F066BA           B.W      ??Display_56
    341               case DISP_ENGINER:
    342                    {
    343                         EMS_View_Mode();               
   \                     ??Display_19:
   \   0000020A   ........           BL       EMS_View_Mode
    344                    }break;
   \   0000020E   01F062BA           B.W      ??Display_56
    345                    
    346          	case DISP_WAIT:
    347          		{
    348          
    349                         sprintf( (char *)Display_Buff,"%s",LCD_WaitString );
   \                     ??Display_5:
   \   00000212   DFF83C2D           LDR.W    R2,??Display_57+0xC
   \   00000216   ECA1               ADR.N    R1,??Display_58  ;; 0x25, 0x73, 0x00, 0x00
   \   00000218   DFF82C0D           LDR.W    R0,??Display_57+0x4
   \   0000021C   ........           BL       sprintf
    350          			GLcd_PutString(Wait_x,Wait_y,Display_Buff,1);
   \   00000220   0123               MOVS     R3,#+1
   \   00000222   DFF8242D           LDR.W    R2,??Display_57+0x4
   \   00000226   DFF82C0D           LDR.W    R0,??Display_57+0x10
   \   0000022A   0178               LDRB     R1,[R0, #+0]
   \   0000022C   DFF8280D           LDR.W    R0,??Display_57+0x14
   \   00000230   0078               LDRB     R0,[R0, #+0]
   \   00000232   ........           BL       GLcd_PutString
    351                         
    352          			if(!CheckTimeOver(DisplayInfo.HoldingTime,DisplayInfo.TimeOut))		
   \   00000236   DFF87C0B           LDR.W    R0,??Display_0+0x24
   \   0000023A   4188               LDRH     R1,[R0, #+2]
   \   0000023C   DFF8740B           LDR.W    R0,??Display_0+0x24
   \   00000240   0088               LDRH     R0,[R0, #+0]
   \   00000242   ........           BL       CheckTimeOver
   \   00000246   0028               CMP      R0,#+0
   \   00000248   01F04582           BEQ.W    ??Display_2
    353          				return;   				
    354          			DisplayInfo.Now_View = DisplayInfo.Next_View ;
   \                     ??Display_59:
   \   0000024C   DFF8640B           LDR.W    R0,??Display_0+0x24
   \   00000250   DFF8601B           LDR.W    R1,??Display_0+0x24
   \   00000254   0979               LDRB     R1,[R1, #+4]
   \   00000256   4171               STRB     R1,[R0, #+5]
    355          		}  // end of DISP_WAIT
    356          		break;
   \   00000258   01F03DBA           B.W      ??Display_56
    357          	case DISP_INTRO:
    358          		{	
    359          
    360          			sprintf( (char *)Display_Buff,Title1 );
   \                     ??Display_6:
   \   0000025C   DFF8FC1C           LDR.W    R1,??Display_57+0x18
   \   00000260   DFF8E40C           LDR.W    R0,??Display_57+0x4
   \   00000264   ........           BL       sprintf
    361          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000268   0123               MOVS     R3,#+1
   \   0000026A   DFF8DC2C           LDR.W    R2,??Display_57+0x4
   \   0000026E   0021               MOVS     R1,#+0
   \   00000270   0020               MOVS     R0,#+0
   \   00000272   ........           BL       GLcd_PutString
    362          			sprintf( (char *)Display_Buff,Title2 );		        
   \   00000276   DFF8701D           LDR.W    R1,??Display_60
   \   0000027A   DFF8CC0C           LDR.W    R0,??Display_57+0x4
   \   0000027E   ........           BL       sprintf
    363          			GLcd_PutString(0,16,Display_Buff,1);
   \   00000282   0123               MOVS     R3,#+1
   \   00000284   DFF8C02C           LDR.W    R2,??Display_57+0x4
   \   00000288   1021               MOVS     R1,#+16
   \   0000028A   0020               MOVS     R0,#+0
   \   0000028C   ........           BL       GLcd_PutString
    364                        
    365          			DisplayInfo.Now_View = DISP_WAIT;		
   \   00000290   DFF8200B           LDR.W    R0,??Display_0+0x24
   \   00000294   0121               MOVS     R1,#+1
   \   00000296   4171               STRB     R1,[R0, #+5]
    366          			DisplayInfo.Next_View = DISP_IDLE;	// 대기화면으로 이동		
   \   00000298   DFF8180B           LDR.W    R0,??Display_0+0x24
   \   0000029C   0321               MOVS     R1,#+3
   \   0000029E   0171               STRB     R1,[R0, #+4]
    367          			DisplayInfo.HoldingTime = 100;		// 3초후에		
   \   000002A0   DFF8100B           LDR.W    R0,??Display_0+0x24
   \   000002A4   6421               MOVS     R1,#+100
   \   000002A6   0180               STRH     R1,[R0, #+0]
    368          			DisplayInfo.TimeOut = MS_TIMER ;
   \   000002A8   DFF8F40A           LDR.W    R0,??Display_0+0x10  ;; 0x40000c00
   \   000002AC   ........           BL       TIM_GetCounter
   \   000002B0   DFF8001B           LDR.W    R1,??Display_0+0x24
   \   000002B4   4880               STRH     R0,[R1, #+2]
    369          			
    370          			
    371          		}  // end DISP_INTRO
    372          		break;
   \   000002B6   01F00EBA           B.W      ??Display_56
    373          	case DISP_IDLE:       // 대기화면 / 시간, 속도, RPM
    374          		{
    375          			sprintf( (char *)Display_Buff,"%02d/%02d/%02d %02d:%02d:%02d",SYSTEM_TIME.tm_year,SYSTEM_TIME.tm_mon,SYSTEM_TIME.tm_mday, SYSTEM_TIME.tm_hour,SYSTEM_TIME.tm_min,SYSTEM_TIME.tm_sec);
   \                     ??Display_7:
   \   000002BA   DFF8300D           LDR.W    R0,??Display_60+0x4
   \   000002BE   0068               LDR      R0,[R0, #+0]
   \   000002C0   0390               STR      R0,[SP, #+12]
   \   000002C2   DFF8280D           LDR.W    R0,??Display_60+0x4
   \   000002C6   4068               LDR      R0,[R0, #+4]
   \   000002C8   0290               STR      R0,[SP, #+8]
   \   000002CA   DFF8200D           LDR.W    R0,??Display_60+0x4
   \   000002CE   8068               LDR      R0,[R0, #+8]
   \   000002D0   0190               STR      R0,[SP, #+4]
   \   000002D2   DFF8180D           LDR.W    R0,??Display_60+0x4
   \   000002D6   C068               LDR      R0,[R0, #+12]
   \   000002D8   0090               STR      R0,[SP, #+0]
   \   000002DA   DFF8100D           LDR.W    R0,??Display_60+0x4
   \   000002DE   0369               LDR      R3,[R0, #+16]
   \   000002E0   DFF8080D           LDR.W    R0,??Display_60+0x4
   \   000002E4   4269               LDR      R2,[R0, #+20]
   \   000002E6   DFF8081D           LDR.W    R1,??Display_60+0x8
   \   000002EA   DFF85C0C           LDR.W    R0,??Display_57+0x4
   \   000002EE   ........           BL       sprintf
    376          			GLcd_PutString(0,0,Display_Buff,1);
   \   000002F2   0123               MOVS     R3,#+1
   \   000002F4   DFF8502C           LDR.W    R2,??Display_57+0x4
   \   000002F8   0021               MOVS     R1,#+0
   \   000002FA   0020               MOVS     R0,#+0
   \   000002FC   ........           BL       GLcd_PutString
    377          			sprintf( (char *)Display_Buff,"%4d RPM %3d km %c%02d",Info.RPM_Value,Info.SPEED_Value,Flag.GPS_Check,Info.MachineStatus);
   \   00000300   DFF8F00C           LDR.W    R0,??Display_60+0xC
   \   00000304   90F83E00           LDRB     R0,[R0, #+62]
   \   00000308   0190               STR      R0,[SP, #+4]
   \   0000030A   DFF8EC0C           LDR.W    R0,??Display_60+0x10
   \   0000030E   C078               LDRB     R0,[R0, #+3]
   \   00000310   0090               STR      R0,[SP, #+0]
   \   00000312   DFF8E00C           LDR.W    R0,??Display_60+0xC
   \   00000316   90F82C30           LDRB     R3,[R0, #+44]
   \   0000031A   DFF8D80C           LDR.W    R0,??Display_60+0xC
   \   0000031E   B0F82D20           LDRH     R2,[R0, #+45]
   \   00000322   DFF8D81C           LDR.W    R1,??Display_60+0x14
   \   00000326   DFF8200C           LDR.W    R0,??Display_57+0x4
   \   0000032A   ........           BL       sprintf
    378          			GLcd_PutString(0,16,Display_Buff,1);
   \   0000032E   0123               MOVS     R3,#+1
   \   00000330   DFF8142C           LDR.W    R2,??Display_57+0x4
   \   00000334   1021               MOVS     R1,#+16
   \   00000336   0020               MOVS     R0,#+0
   \   00000338   ........           BL       GLcd_PutString
    379          
    380          			DisplayInfo.Mode = DISPMODE_VIEW;
   \   0000033C   DFF8740A           LDR.W    R0,??Display_0+0x24
   \   00000340   0121               MOVS     R1,#+1
   \   00000342   8171               STRB     R1,[R0, #+6]
    381          		}  // end of DIS_IDLE
    382          		break;
   \   00000344   01F0C7B9           B.W      ??Display_56
    383          	case DISP_TODAY_DISTANCE:   // 일운행 거리, 시간
    384          		{
    385          			sprintf( (char *)Display_Buff,"  < 일일운행시간 >  ");
   \                     ??Display_8:
   \   00000348   DFF8B41C           LDR.W    R1,??Display_60+0x18
   \   0000034C   DFF8F80B           LDR.W    R0,??Display_57+0x4
   \   00000350   ........           BL       sprintf
    386          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000354   0123               MOVS     R3,#+1
   \   00000356   DFF8F02B           LDR.W    R2,??Display_57+0x4
   \   0000035A   0021               MOVS     R1,#+0
   \   0000035C   0020               MOVS     R0,#+0
   \   0000035E   ........           BL       GLcd_PutString
    387          			sprintf( (char *)Display_Buff,"      [ %02d:%02d ]      ",(unsigned int)(EMS_Drive_Value.Drive_Time/3600), (unsigned int)(EMS_Drive_Value.Drive_Time/60) % 60 );
   \   00000362   DFF8A00C           LDR.W    R0,??Display_60+0x1C
   \   00000366   4068               LDR      R0,[R0, #+4]
   \   00000368   3C21               MOVS     R1,#+60
   \   0000036A   B0FBF1F0           UDIV     R0,R0,R1
   \   0000036E   3C21               MOVS     R1,#+60
   \   00000370   B0FBF1F2           UDIV     R2,R0,R1
   \   00000374   01FB1203           MLS      R3,R1,R2,R0
   \   00000378   DFF8880C           LDR.W    R0,??Display_60+0x1C
   \   0000037C   4068               LDR      R0,[R0, #+4]
   \   0000037E   4FF46161           MOV      R1,#+3600
   \   00000382   B0FBF1F2           UDIV     R2,R0,R1
   \   00000386   DFF8801C           LDR.W    R1,??Display_60+0x20
   \   0000038A   DFF8BC0B           LDR.W    R0,??Display_57+0x4
   \   0000038E   ........           BL       sprintf
    388          			GLcd_PutString(0,16,Display_Buff,1);					
   \   00000392   0123               MOVS     R3,#+1
   \   00000394   DFF8B02B           LDR.W    R2,??Display_57+0x4
   \   00000398   1021               MOVS     R1,#+16
   \   0000039A   0020               MOVS     R0,#+0
   \   0000039C   ........           BL       GLcd_PutString
    389          		}  // end of DISP_TODAY_DISTANCE
    390          		break;
   \   000003A0   01F099B9           B.W      ??Display_56
    391          	case DISP_TOTAL_DISTANCE:   // 총주행 거리, 시간
    392          		{
    393          			
    394          			sprintf( (char *)Display_Buff,"일주행      %05d km", Info.DayDriveLength );
   \                     ??Display_9:
   \   000003A4   DFF84C0C           LDR.W    R0,??Display_60+0xC
   \   000003A8   428B               LDRH     R2,[R0, #+26]
   \   000003AA   DFF8601C           LDR.W    R1,??Display_60+0x24
   \   000003AE   DFF8980B           LDR.W    R0,??Display_57+0x4
   \   000003B2   ........           BL       sprintf
    395          			GLcd_PutString(0,0,Display_Buff,1);
   \   000003B6   0123               MOVS     R3,#+1
   \   000003B8   DFF88C2B           LDR.W    R2,??Display_57+0x4
   \   000003BC   0021               MOVS     R1,#+0
   \   000003BE   0020               MOVS     R0,#+0
   \   000003C0   ........           BL       GLcd_PutString
    396          			sprintf( (char *)Display_Buff,"총주행    %07d km", Info.TotalDriveLength );               
   \   000003C4   DFF82C0C           LDR.W    R0,??Display_60+0xC
   \   000003C8   C269               LDR      R2,[R0, #+28]
   \   000003CA   DFF8441C           LDR.W    R1,??Display_60+0x28
   \   000003CE   DFF8780B           LDR.W    R0,??Display_57+0x4
   \   000003D2   ........           BL       sprintf
    397          			GLcd_PutString(0,16,Display_Buff,1);	
   \   000003D6   0123               MOVS     R3,#+1
   \   000003D8   DFF86C2B           LDR.W    R2,??Display_57+0x4
   \   000003DC   1021               MOVS     R1,#+16
   \   000003DE   0020               MOVS     R0,#+0
   \   000003E0   ........           BL       GLcd_PutString
    398          			
    399          		}  // end of DISP_TOTAL_DISTANCE
    400          		break;
   \   000003E4   01F077B9           B.W      ??Display_56
    401          	case DISP_DRIVER_VIEW:    // 운전자 코드
    402          		{
    403          			
    404          			sprintf( (char *)Display_Buff,"  < 운전자코드 >  ");
   \                     ??Display_10:
   \   000003E8   DFF8281C           LDR.W    R1,??Display_60+0x2C
   \   000003EC   DFF8580B           LDR.W    R0,??Display_57+0x4
   \   000003F0   ........           BL       sprintf
    405          			GLcd_PutString(0,0,Display_Buff,1);
   \   000003F4   0123               MOVS     R3,#+1
   \   000003F6   DFF8502B           LDR.W    R2,??Display_57+0x4
   \   000003FA   0021               MOVS     R1,#+0
   \   000003FC   0020               MOVS     R0,#+0
   \   000003FE   ........           BL       GLcd_PutString
    406                         if(Info.Driver_Index == NO_DRIVER)
   \   00000402   DFF8F00B           LDR.W    R0,??Display_60+0xC
   \   00000406   0078               LDRB     R0,[R0, #+0]
   \   00000408   FF28               CMP      R0,#+255
   \   0000040A   06D1               BNE.N    ??Display_61
    407                         {
    408                              sprintf( (char *)Display_Buff,"  운전자선택안됨     ");
   \   0000040C   DFF8081C           LDR.W    R1,??Display_60+0x30
   \   00000410   DFF8340B           LDR.W    R0,??Display_57+0x4
   \   00000414   ........           BL       sprintf
   \   00000418   07E0               B.N      ??Display_62
    409                         }else
    410                         {
    411                              sprintf( (char *)Display_Buff,"[%018s]",Info.Driver_Num );//SFLASH_Memory.Driver[SFLASH_Memory.Driver_Index]);
   \                     ??Display_61:
   \   0000041A   DFF8002C           LDR.W    R2,??Display_60+0x34
   \   0000041E   DFF8001C           LDR.W    R1,??Display_60+0x38
   \   00000422   DFF8240B           LDR.W    R0,??Display_57+0x4
   \   00000426   ........           BL       sprintf
    412                         }
    413          			GLcd_PutString(0,16,Display_Buff,1);	
   \                     ??Display_62:
   \   0000042A   0123               MOVS     R3,#+1
   \   0000042C   DFF8182B           LDR.W    R2,??Display_57+0x4
   \   00000430   1021               MOVS     R1,#+16
   \   00000432   0020               MOVS     R0,#+0
   \   00000434   ........           BL       GLcd_PutString
    414          			
    415          		}  // end of DISP_DRIVER_VIEW
    416          		break;
   \   00000438   01F04DB9           B.W      ??Display_56
    417          		
    418          	case DISP_MEMS_VIEW:
    419          		{
    420          			sprintf( (char *)Display_Buff,"  < 기울기세팅 >  " );
   \                     ??Display_11:
   \   0000043C   DFF8E41B           LDR.W    R1,??Display_60+0x3C
   \   00000440   DFF8040B           LDR.W    R0,??Display_57+0x4
   \   00000444   ........           BL       sprintf
    421          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000448   0123               MOVS     R3,#+1
   \   0000044A   DFF8FC2A           LDR.W    R2,??Display_57+0x4
   \   0000044E   0021               MOVS     R1,#+0
   \   00000450   0020               MOVS     R0,#+0
   \   00000452   ........           BL       GLcd_PutString
    422          			sprintf( (char *)Display_Buff,"   [ X=%-2d  Y=%-2d ]  ",TiltInfo.DegX,TiltInfo.DegY );	        
   \   00000456   DFF8D00B           LDR.W    R0,??Display_60+0x40
   \   0000045A   B0F91230           LDRSH    R3,[R0, #+18]
   \   0000045E   DFF8C80B           LDR.W    R0,??Display_60+0x40
   \   00000462   B0F91020           LDRSH    R2,[R0, #+16]
   \   00000466   DFF8C41B           LDR.W    R1,??Display_60+0x44
   \   0000046A   DFF8DC0A           LDR.W    R0,??Display_57+0x4
   \   0000046E   ........           BL       sprintf
    423          			GLcd_PutString(0,16,Display_Buff,1);          
   \   00000472   0123               MOVS     R3,#+1
   \   00000474   DFF8D02A           LDR.W    R2,??Display_57+0x4
   \   00000478   1021               MOVS     R1,#+16
   \   0000047A   0020               MOVS     R0,#+0
   \   0000047C   ........           BL       GLcd_PutString
    424          		}break;
   \   00000480   01F029B9           B.W      ??Display_56
    425          	case DISP_IO_VIEW:		// IO 뷰어
    426          		{
    427                         InputIO_View();			
   \                     ??Display_12:
   \   00000484   ........           BL       InputIO_View
    428          		}break;
   \   00000488   01F025B9           B.W      ??Display_56
    429          	case DISP_INPUT_VIEW:	// 각종 입력 화면 뷰어
    430          		{
    431          			Input_View();
   \                     ??Display_13:
   \   0000048C   ........           BL       Input_View
    432          		}break;
   \   00000490   01F021B9           B.W      ??Display_56
    433               case DISP_STARTMOTOR_VIEW:         // 스타트 모터 뷰어
    434                    {
    435          			sprintf( (char *)Display_Buff,"< 시동모터누적횟수 >" );
   \                     ??Display_14:
   \   00000494   DFF8981B           LDR.W    R1,??Display_60+0x48
   \   00000498   DFF8AC0A           LDR.W    R0,??Display_57+0x4
   \   0000049C   ........           BL       sprintf
    436          			GLcd_PutString(0,0,Display_Buff,1);
   \   000004A0   0123               MOVS     R3,#+1
   \   000004A2   DFF8A42A           LDR.W    R2,??Display_57+0x4
   \   000004A6   0021               MOVS     R1,#+0
   \   000004A8   0020               MOVS     R0,#+0
   \   000004AA   ........           BL       GLcd_PutString
    437          			sprintf( (char *)Display_Buff,"     [ %06d ]   ",ACC_Drive_Value.Total_StartMotor);	        
   \   000004AE   DFF8840B           LDR.W    R0,??Display_60+0x4C
   \   000004B2   0288               LDRH     R2,[R0, #+0]
   \   000004B4   DFF8801B           LDR.W    R1,??Display_60+0x50
   \   000004B8   DFF88C0A           LDR.W    R0,??Display_57+0x4
   \   000004BC   ........           BL       sprintf
    438          			GLcd_PutString(0,16,Display_Buff,1);                
   \   000004C0   0123               MOVS     R3,#+1
   \   000004C2   DFF8842A           LDR.W    R2,??Display_57+0x4
   \   000004C6   1021               MOVS     R1,#+16
   \   000004C8   0020               MOVS     R0,#+0
   \   000004CA   ........           BL       GLcd_PutString
    439                    }break;
   \   000004CE   01F002B9           B.W      ??Display_56
    440                       
    441               case DISP_GPS_VIEW:         // 스타트 모터 뷰어
    442                    {
    443          			sprintf( (char *)Display_Buff,"GPS-X %03d.%06d",Info.GPSX/ 1000000,Info.GPSX% 1000000 );
   \                     ??Display_15:
   \   000004D2   DFF8200B           LDR.W    R0,??Display_60+0xC
   \   000004D6   006B               LDR      R0,[R0, #+48]
   \   000004D8   DFF8601B           LDR.W    R1,??Display_60+0x54  ;; 0xf4240
   \   000004DC   B0FBF1F2           UDIV     R2,R0,R1
   \   000004E0   01FB1203           MLS      R3,R1,R2,R0
   \   000004E4   DFF80C0B           LDR.W    R0,??Display_60+0xC
   \   000004E8   006B               LDR      R0,[R0, #+48]
   \   000004EA   DFF8501B           LDR.W    R1,??Display_60+0x54  ;; 0xf4240
   \   000004EE   B0FBF1F2           UDIV     R2,R0,R1
   \   000004F2   DFF84C1B           LDR.W    R1,??Display_60+0x58
   \   000004F6   DFF8500A           LDR.W    R0,??Display_57+0x4
   \   000004FA   ........           BL       sprintf
    444          			GLcd_PutString(0,0,Display_Buff,1);
   \   000004FE   0123               MOVS     R3,#+1
   \   00000500   DFF8442A           LDR.W    R2,??Display_57+0x4
   \   00000504   0021               MOVS     R1,#+0
   \   00000506   0020               MOVS     R0,#+0
   \   00000508   ........           BL       GLcd_PutString
    445          			sprintf( (char *)Display_Buff,"GPS-Y %03d.%06d",Info.GPSY/ 1000000,Info.GPSY% 1000000);	        
   \   0000050C   DFF8E40A           LDR.W    R0,??Display_60+0xC
   \   00000510   406B               LDR      R0,[R0, #+52]
   \   00000512   DFF8281B           LDR.W    R1,??Display_60+0x54  ;; 0xf4240
   \   00000516   B0FBF1F2           UDIV     R2,R0,R1
   \   0000051A   01FB1203           MLS      R3,R1,R2,R0
   \   0000051E   DFF8D40A           LDR.W    R0,??Display_60+0xC
   \   00000522   406B               LDR      R0,[R0, #+52]
   \   00000524   DFF8141B           LDR.W    R1,??Display_60+0x54  ;; 0xf4240
   \   00000528   B0FBF1F2           UDIV     R2,R0,R1
   \   0000052C   DFF8141B           LDR.W    R1,??Display_60+0x5C
   \   00000530   DFF8140A           LDR.W    R0,??Display_57+0x4
   \   00000534   ........           BL       sprintf
    446          			GLcd_PutString(0,16,Display_Buff,1);                
   \   00000538   0123               MOVS     R3,#+1
   \   0000053A   DFF80C2A           LDR.W    R2,??Display_57+0x4
   \   0000053E   1021               MOVS     R1,#+16
   \   00000540   0020               MOVS     R0,#+0
   \   00000542   ........           BL       GLcd_PutString
    447                    }break;               
   \   00000546   01F0C6B8           B.W      ??Display_56
    448               case DISP_VERSION1:         // 펌웨어 버젼
    449                    {
    450          			sprintf( (char *)Display_Buff,"  < 펌웨어버젼 >  " );
   \                     ??Display_16:
   \   0000054A   DFF8FC1A           LDR.W    R1,??Display_60+0x60
   \   0000054E   DFF8F809           LDR.W    R0,??Display_57+0x4
   \   00000552   ........           BL       sprintf
    451          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000556   0123               MOVS     R3,#+1
   \   00000558   DFF8EC29           LDR.W    R2,??Display_57+0x4
   \   0000055C   0021               MOVS     R1,#+0
   \   0000055E   0020               MOVS     R0,#+0
   \   00000560   ........           BL       GLcd_PutString
    452          			sprintf( (char *)Display_Buff,"   [ %09s ]   ",FirmVersion);	        
   \   00000564   DFF8E42A           LDR.W    R2,??Display_60+0x64
   \   00000568   DFF8E41A           LDR.W    R1,??Display_60+0x68
   \   0000056C   DFF8D809           LDR.W    R0,??Display_57+0x4
   \   00000570   ........           BL       sprintf
    453          			GLcd_PutString(0,16,Display_Buff,1);                
   \   00000574   0123               MOVS     R3,#+1
   \   00000576   DFF8D029           LDR.W    R2,??Display_57+0x4
   \   0000057A   1021               MOVS     R1,#+16
   \   0000057C   0020               MOVS     R0,#+0
   \   0000057E   ........           BL       GLcd_PutString
    454                    }break;
   \   00000582   01F0A8B8           B.W      ??Display_56
    455               case DISP_VERSION2:         // 형식승인번호
    456                    {
    457          			sprintf( (char *)Display_Buff,"  < 형식승인번호 >  " );
   \                     ??Display_17:
   \   00000586   DFF8CC1A           LDR.W    R1,??Display_60+0x6C
   \   0000058A   DFF8BC09           LDR.W    R0,??Display_57+0x4
   \   0000058E   ........           BL       sprintf
    458          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000592   0123               MOVS     R3,#+1
   \   00000594   DFF8B029           LDR.W    R2,??Display_57+0x4
   \   00000598   0021               MOVS     R1,#+0
   \   0000059A   0020               MOVS     R0,#+0
   \   0000059C   ........           BL       GLcd_PutString
    459          			sprintf( (char *)Display_Buff,"   [ %010s ]   ",SFLASH_CarInfo.Recognition);	        
   \   000005A0   DFF8B42A           LDR.W    R2,??Display_60+0x70
   \   000005A4   DFF8B41A           LDR.W    R1,??Display_60+0x74
   \   000005A8   DFF89C09           LDR.W    R0,??Display_57+0x4
   \   000005AC   ........           BL       sprintf
    460          			GLcd_PutString(0,16,Display_Buff,1);                
   \   000005B0   0123               MOVS     R3,#+1
   \   000005B2   DFF89429           LDR.W    R2,??Display_57+0x4
   \   000005B6   1021               MOVS     R1,#+16
   \   000005B8   0020               MOVS     R0,#+0
   \   000005BA   ........           BL       GLcd_PutString
    461                    }break;
   \   000005BE   01F08AB8           B.W      ??Display_56
    462               case DISP_VERSION3:         // 제품일련번호
    463                    {
    464          			sprintf( (char *)Display_Buff,"  < 제품일련번호 >  " );
   \                     ??Display_18:
   \   000005C2   DFF89C1A           LDR.W    R1,??Display_60+0x78
   \   000005C6   01E0               B.N      ??Display_63
   \                     ??Display_58:
   \   000005C8   25730000           DC8      0x25, 0x73, 0x00, 0x00
   \                     ??Display_63:
   \   000005CC   DFF87809           LDR.W    R0,??Display_57+0x4
   \   000005D0   ........           BL       sprintf
    465          			GLcd_PutString(0,0,Display_Buff,1);
   \   000005D4   0123               MOVS     R3,#+1
   \   000005D6   DFF87029           LDR.W    R2,??Display_57+0x4
   \   000005DA   0021               MOVS     R1,#+0
   \   000005DC   0020               MOVS     R0,#+0
   \   000005DE   ........           BL       GLcd_PutString
    466          			sprintf( (char *)Display_Buff," [ %014s ]   ",SFLASH_CarInfo.SerialNumber);	        
   \   000005E2   DFF8802A           LDR.W    R2,??Display_60+0x7C
   \   000005E6   DFF8801A           LDR.W    R1,??Display_60+0x80
   \   000005EA   DFF85C09           LDR.W    R0,??Display_57+0x4
   \   000005EE   ........           BL       sprintf
    467          			GLcd_PutString(0,16,Display_Buff,1);                
   \   000005F2   0123               MOVS     R3,#+1
   \   000005F4   DFF85029           LDR.W    R2,??Display_57+0x4
   \   000005F8   1021               MOVS     R1,#+16
   \   000005FA   0020               MOVS     R0,#+0
   \   000005FC   ........           BL       GLcd_PutString
    468                    }break;          
   \   00000600   01F069B8           B.W      ??Display_56
    469                    
    470               // ------------------------------------------------------------------------------------------          
    471          	case DISP_MENU1:
    472          		{
    473          			
    474          			sprintf( (char *)Display_Buff,"  < 사용자메뉴 >   ");
   \                     ??Display_21:
   \   00000604   DFF8641A           LDR.W    R1,??Display_60+0x84
   \   00000608   DFF83C09           LDR.W    R0,??Display_57+0x4
   \   0000060C   ........           BL       sprintf
    475          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000610   0123               MOVS     R3,#+1
   \   00000612   DFF83429           LDR.W    R2,??Display_57+0x4
   \   00000616   0021               MOVS     R1,#+0
   \   00000618   0020               MOVS     R0,#+0
   \   0000061A   ........           BL       GLcd_PutString
    476          			sprintf( (char *)Display_Buff," 1. 자료저장       ");
   \   0000061E   DFF8501A           LDR.W    R1,??Display_60+0x88
   \   00000622   DFF82409           LDR.W    R0,??Display_57+0x4
   \   00000626   ........           BL       sprintf
    477          			GLcd_PutString(0,16,Display_Buff,1);	
   \   0000062A   0123               MOVS     R3,#+1
   \   0000062C   DFF81829           LDR.W    R2,??Display_57+0x4
   \   00000630   1021               MOVS     R1,#+16
   \   00000632   0020               MOVS     R0,#+0
   \   00000634   ........           BL       GLcd_PutString
    478          			DisplayInfo.Mode = DISPMODE_MENU;		
   \   00000638   DFF87807           LDR.W    R0,??Display_0+0x24
   \   0000063C   0221               MOVS     R1,#+2
   \   0000063E   8171               STRB     R1,[R0, #+6]
    479          		}  // end of DISP_MENU1
    480          		break;
   \   00000640   01F049B8           B.W      ??Display_56
    481          	case DISP_MENU2:
    482          		{
    483          			sprintf( (char *)Display_Buff,"  < 사용자메뉴 >   ");
   \                     ??Display_22:
   \   00000644   DFF8241A           LDR.W    R1,??Display_60+0x84
   \   00000648   DFF8FC08           LDR.W    R0,??Display_57+0x4
   \   0000064C   ........           BL       sprintf
    484          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000650   0123               MOVS     R3,#+1
   \   00000652   DFF8F428           LDR.W    R2,??Display_57+0x4
   \   00000656   0021               MOVS     R1,#+0
   \   00000658   0020               MOVS     R0,#+0
   \   0000065A   ........           BL       GLcd_PutString
    485          			sprintf( (char *)Display_Buff," 2. 운전자선택     ");
   \   0000065E   DFF8141A           LDR.W    R1,??Display_60+0x8C
   \   00000662   DFF8E408           LDR.W    R0,??Display_57+0x4
   \   00000666   ........           BL       sprintf
    486          			GLcd_PutString(0,16,Display_Buff,1);	
   \   0000066A   0123               MOVS     R3,#+1
   \   0000066C   DFF8D828           LDR.W    R2,??Display_57+0x4
   \   00000670   1021               MOVS     R1,#+16
   \   00000672   0020               MOVS     R0,#+0
   \   00000674   ........           BL       GLcd_PutString
    487          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   00000678   DFF83807           LDR.W    R0,??Display_0+0x24
   \   0000067C   0221               MOVS     R1,#+2
   \   0000067E   8171               STRB     R1,[R0, #+6]
    488          			
    489          		}  // end of DISP_MENU2
    490          		break;
   \   00000680   01F029B8           B.W      ??Display_56
    491          	case DISP_MENU3:
    492          		{
    493          			
    494          			sprintf( (char *)Display_Buff,"  < 사용자메뉴 >   ");
   \                     ??Display_23:
   \   00000684   DFF8E419           LDR.W    R1,??Display_60+0x84
   \   00000688   DFF8BC08           LDR.W    R0,??Display_57+0x4
   \   0000068C   ........           BL       sprintf
    495          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000690   0123               MOVS     R3,#+1
   \   00000692   DFF8B428           LDR.W    R2,??Display_57+0x4
   \   00000696   0021               MOVS     R1,#+0
   \   00000698   0020               MOVS     R0,#+0
   \   0000069A   ........           BL       GLcd_PutString
    496          			sprintf( (char *)Display_Buff," 3. 차량번호       ");
   \   0000069E   DFF8D819           LDR.W    R1,??Display_60+0x90
   \   000006A2   DFF8A408           LDR.W    R0,??Display_57+0x4
   \   000006A6   ........           BL       sprintf
    497          			GLcd_PutString(0,16,Display_Buff,1);	
   \   000006AA   0123               MOVS     R3,#+1
   \   000006AC   DFF89828           LDR.W    R2,??Display_57+0x4
   \   000006B0   1021               MOVS     R1,#+16
   \   000006B2   0020               MOVS     R0,#+0
   \   000006B4   ........           BL       GLcd_PutString
    498          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   000006B8   DFF8F806           LDR.W    R0,??Display_0+0x24
   \   000006BC   0221               MOVS     R1,#+2
   \   000006BE   8171               STRB     R1,[R0, #+6]
    499          			
    500          		}  // end of DISP_MENU3
    501          		break;
   \   000006C0   01F009B8           B.W      ??Display_56
    502          	case DISP_MENU4:
    503          		{
    504          			
    505          			sprintf( (char *)Display_Buff,"  < 사용자메뉴 >    ");
   \                     ??Display_24:
   \   000006C4   DFF8B419           LDR.W    R1,??Display_60+0x94
   \   000006C8   DFF87C08           LDR.W    R0,??Display_57+0x4
   \   000006CC   ........           BL       sprintf
    506          			GLcd_PutString(0,0,Display_Buff,1);
   \   000006D0   0123               MOVS     R3,#+1
   \   000006D2   DFF87428           LDR.W    R2,??Display_57+0x4
   \   000006D6   0021               MOVS     R1,#+0
   \   000006D8   0020               MOVS     R0,#+0
   \   000006DA   ........           BL       GLcd_PutString
    507          			sprintf( (char *)Display_Buff," 4. 환경설정        ");
   \   000006DE   DFF8A019           LDR.W    R1,??Display_60+0x98
   \   000006E2   DFF86408           LDR.W    R0,??Display_57+0x4
   \   000006E6   ........           BL       sprintf
    508          			GLcd_PutString(0,16,Display_Buff,1);	
   \   000006EA   0123               MOVS     R3,#+1
   \   000006EC   DFF85828           LDR.W    R2,??Display_57+0x4
   \   000006F0   1021               MOVS     R1,#+16
   \   000006F2   0020               MOVS     R0,#+0
   \   000006F4   ........           BL       GLcd_PutString
    509          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   000006F8   DFF8B806           LDR.W    R0,??Display_0+0x24
   \   000006FC   0221               MOVS     R1,#+2
   \   000006FE   8171               STRB     R1,[R0, #+6]
    510          			
    511          		}  // end of DISP_MENU4
    512          		break; 
   \   00000700   00F0E9BF           B.W      ??Display_56
    513          	case DISP_MENU5:
    514          		{
    515          			//               GLcd_Clear();
    516          			sprintf( (char *)Display_Buff,"  < 사용자메뉴 >   ");
   \                     ??Display_25:
   \   00000704   DFF86419           LDR.W    R1,??Display_60+0x84
   \   00000708   DFF83C08           LDR.W    R0,??Display_57+0x4
   \   0000070C   ........           BL       sprintf
    517          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000710   0123               MOVS     R3,#+1
   \   00000712   DFF83428           LDR.W    R2,??Display_57+0x4
   \   00000716   0021               MOVS     R1,#+0
   \   00000718   0020               MOVS     R0,#+0
   \   0000071A   ........           BL       GLcd_PutString
    518          
    519          			if( Input_Mode == 0 )
   \   0000071E   DFF86409           LDR.W    R0,??Display_60+0x9C
   \   00000722   0078               LDRB     R0,[R0, #+0]
   \   00000724   0028               CMP      R0,#+0
   \   00000726   06D1               BNE.N    ??Display_64
    520          			{
    521               			sprintf( (char *)Display_Buff," 5. 펌웨어업데이트  ");
   \   00000728   DFF85C19           LDR.W    R1,??Display_60+0xA0
   \   0000072C   DFF81808           LDR.W    R0,??Display_57+0x4
   \   00000730   ........           BL       sprintf
   \   00000734   30E0               B.N      ??Display_65
    522          			}
    523          			else if( Input_Mode == 1)
   \                     ??Display_64:
   \   00000736   DFF84C09           LDR.W    R0,??Display_60+0x9C
   \   0000073A   0078               LDRB     R0,[R0, #+0]
   \   0000073C   0128               CMP      R0,#+1
   \   0000073E   06D1               BNE.N    ??Display_66
    524          			{
    525          				sprintf( (char *)Display_Buff, "[OK]버튼을누르면시작"	);
   \   00000740   DFF84819           LDR.W    R1,??Display_60+0xA4
   \   00000744   DFF80008           LDR.W    R0,??Display_57+0x4
   \   00000748   ........           BL       sprintf
   \   0000074C   24E0               B.N      ??Display_65
    526          			}
    527                         else if( Input_Mode == 2 )
   \                     ??Display_66:
   \   0000074E   DFF83409           LDR.W    R0,??Display_60+0x9C
   \   00000752   0078               LDRB     R0,[R0, #+0]
   \   00000754   0228               CMP      R0,#+2
   \   00000756   1FD1               BNE.N    ??Display_65
    528                         {
    529                              sprintf( (char *)Display_Buff, "업데이트실패"	);
   \   00000758   DFF83419           LDR.W    R1,??Display_60+0xA8
   \   0000075C   DFF8E807           LDR.W    R0,??Display_57+0x4
   \   00000760   ........           BL       sprintf
    530                              DisplayInfo.TimeOut = MS_TIMER;
   \   00000764   DFF83806           LDR.W    R0,??Display_0+0x10  ;; 0x40000c00
   \   00000768   ........           BL       TIM_GetCounter
   \   0000076C   DFF84416           LDR.W    R1,??Display_0+0x24
   \   00000770   4880               STRH     R0,[R1, #+2]
    531                              DisplayInfo.HoldingTime = 2000;
   \   00000772   DFF84006           LDR.W    R0,??Display_0+0x24
   \   00000776   4FF4FA61           MOV      R1,#+2000
   \   0000077A   0180               STRH     R1,[R0, #+0]
    532                              DisplayInfo.Next_View = DisplayInfo.Now_View;
   \   0000077C   DFF83406           LDR.W    R0,??Display_0+0x24
   \   00000780   DFF83016           LDR.W    R1,??Display_0+0x24
   \   00000784   4979               LDRB     R1,[R1, #+5]
   \   00000786   0171               STRB     R1,[R0, #+4]
    533                              DisplayInfo.Now_View = DISP_WAIT;            
   \   00000788   DFF82806           LDR.W    R0,??Display_0+0x24
   \   0000078C   0121               MOVS     R1,#+1
   \   0000078E   4171               STRB     R1,[R0, #+5]
    534                              Input_Mode = 0;           
   \   00000790   DFF8F008           LDR.W    R0,??Display_60+0x9C
   \   00000794   0021               MOVS     R1,#+0
   \   00000796   0170               STRB     R1,[R0, #+0]
    535                         }    
    536          			GLcd_PutString(0,16,Display_Buff,1);	
   \                     ??Display_65:
   \   00000798   0123               MOVS     R3,#+1
   \   0000079A   DFF8AC27           LDR.W    R2,??Display_57+0x4
   \   0000079E   1021               MOVS     R1,#+16
   \   000007A0   0020               MOVS     R0,#+0
   \   000007A2   ........           BL       GLcd_PutString
    537          			DisplayInfo.Mode = DISPMODE_MENU;	               
   \   000007A6   DFF80C06           LDR.W    R0,??Display_0+0x24
   \   000007AA   0221               MOVS     R1,#+2
   \   000007AC   8171               STRB     R1,[R0, #+6]
    538          			
    539          		}  // end of DISP_MENU2
    540          		break;
   \   000007AE   00F092BF           B.W      ??Display_56
    541          	case DISP_MENU6:
    542          		{
    543          			//               GLcd_Clear();
    544          			sprintf( (char *)Display_Buff,"  < 사용자메뉴 >   ");
   \                     ??Display_26:
   \   000007B2   DFF8B818           LDR.W    R1,??Display_60+0x84
   \   000007B6   DFF89007           LDR.W    R0,??Display_57+0x4
   \   000007BA   ........           BL       sprintf
    545          			GLcd_PutString(0,0,Display_Buff,1);
   \   000007BE   0123               MOVS     R3,#+1
   \   000007C0   DFF88427           LDR.W    R2,??Display_57+0x4
   \   000007C4   0021               MOVS     R1,#+0
   \   000007C6   0020               MOVS     R0,#+0
   \   000007C8   ........           BL       GLcd_PutString
    546          
    547          			if( Input_Mode == 0 )
   \   000007CC   DFF8B408           LDR.W    R0,??Display_60+0x9C
   \   000007D0   0078               LDRB     R0,[R0, #+0]
   \   000007D2   0028               CMP      R0,#+0
   \   000007D4   06D1               BNE.N    ??Display_67
    548          			{
    549               			sprintf( (char *)Display_Buff," 6. 사운드업데이트   ");
   \   000007D6   DFF8BC18           LDR.W    R1,??Display_60+0xAC
   \   000007DA   DFF86C07           LDR.W    R0,??Display_57+0x4
   \   000007DE   ........           BL       sprintf
   \   000007E2   56E0               B.N      ??Display_68
    550          			}
    551          			else if( Input_Mode == 1)
   \                     ??Display_67:
   \   000007E4   DFF89C08           LDR.W    R0,??Display_60+0x9C
   \   000007E8   0078               LDRB     R0,[R0, #+0]
   \   000007EA   0128               CMP      R0,#+1
   \   000007EC   06D1               BNE.N    ??Display_69
    552          			{
    553          				sprintf( (char *)Display_Buff, "[OK]버튼을누르면시작"	);
   \   000007EE   DFF89C18           LDR.W    R1,??Display_60+0xA4
   \   000007F2   DFF85407           LDR.W    R0,??Display_57+0x4
   \   000007F6   ........           BL       sprintf
   \   000007FA   4AE0               B.N      ??Display_68
    554          			}
    555                         else if( Input_Mode == 2 )
   \                     ??Display_69:
   \   000007FC   DFF88408           LDR.W    R0,??Display_60+0x9C
   \   00000800   0078               LDRB     R0,[R0, #+0]
   \   00000802   0228               CMP      R0,#+2
   \   00000804   20D1               BNE.N    ??Display_70
    556                         {
    557                              sprintf( (char *)Display_Buff,"- 저장완료했습니다.    ");                      
   \   00000806   DFF89018           LDR.W    R1,??Display_60+0xB0
   \   0000080A   DFF83C07           LDR.W    R0,??Display_57+0x4
   \   0000080E   ........           BL       sprintf
    558                              DisplayInfo.TimeOut = MS_TIMER;
   \   00000812   DFF88C05           LDR.W    R0,??Display_0+0x10  ;; 0x40000c00
   \   00000816   ........           BL       TIM_GetCounter
   \   0000081A   DFF89815           LDR.W    R1,??Display_0+0x24
   \   0000081E   4880               STRH     R0,[R1, #+2]
    559                              DisplayInfo.HoldingTime = 2000;
   \   00000820   DFF89005           LDR.W    R0,??Display_0+0x24
   \   00000824   4FF4FA61           MOV      R1,#+2000
   \   00000828   0180               STRH     R1,[R0, #+0]
    560                              DisplayInfo.Next_View = DisplayInfo.Now_View;
   \   0000082A   DFF88805           LDR.W    R0,??Display_0+0x24
   \   0000082E   DFF88415           LDR.W    R1,??Display_0+0x24
   \   00000832   4979               LDRB     R1,[R1, #+5]
   \   00000834   0171               STRB     R1,[R0, #+4]
    561                              DisplayInfo.Now_View = DISP_WAIT;            
   \   00000836   DFF87C05           LDR.W    R0,??Display_0+0x24
   \   0000083A   0121               MOVS     R1,#+1
   \   0000083C   4171               STRB     R1,[R0, #+5]
    562                              Input_Mode = 0;                    
   \   0000083E   DFF84408           LDR.W    R0,??Display_60+0x9C
   \   00000842   0021               MOVS     R1,#+0
   \   00000844   0170               STRB     R1,[R0, #+0]
   \   00000846   24E0               B.N      ??Display_68
    563                         }
    564                         else if( Input_Mode == 3 )
   \                     ??Display_70:
   \   00000848   DFF83808           LDR.W    R0,??Display_60+0x9C
   \   0000084C   0078               LDRB     R0,[R0, #+0]
   \   0000084E   0328               CMP      R0,#+3
   \   00000850   1FD1               BNE.N    ??Display_68
    565                         {
    566                              sprintf( (char *)Display_Buff, "업데이트실패"	);
   \   00000852   DFF83C18           LDR.W    R1,??Display_60+0xA8
   \   00000856   DFF8F006           LDR.W    R0,??Display_57+0x4
   \   0000085A   ........           BL       sprintf
    567                              DisplayInfo.TimeOut = MS_TIMER;
   \   0000085E   DFF84005           LDR.W    R0,??Display_0+0x10  ;; 0x40000c00
   \   00000862   ........           BL       TIM_GetCounter
   \   00000866   DFF84C15           LDR.W    R1,??Display_0+0x24
   \   0000086A   4880               STRH     R0,[R1, #+2]
    568                              DisplayInfo.HoldingTime = 2000;
   \   0000086C   DFF84405           LDR.W    R0,??Display_0+0x24
   \   00000870   4FF4FA61           MOV      R1,#+2000
   \   00000874   0180               STRH     R1,[R0, #+0]
    569                              DisplayInfo.Next_View = DisplayInfo.Now_View;
   \   00000876   DFF83C05           LDR.W    R0,??Display_0+0x24
   \   0000087A   DFF83815           LDR.W    R1,??Display_0+0x24
   \   0000087E   4979               LDRB     R1,[R1, #+5]
   \   00000880   0171               STRB     R1,[R0, #+4]
    570                              DisplayInfo.Now_View = DISP_WAIT;            
   \   00000882   DFF83005           LDR.W    R0,??Display_0+0x24
   \   00000886   0121               MOVS     R1,#+1
   \   00000888   4171               STRB     R1,[R0, #+5]
    571                              Input_Mode = 0;                           
   \   0000088A   DFF8F807           LDR.W    R0,??Display_60+0x9C
   \   0000088E   0021               MOVS     R1,#+0
   \   00000890   0170               STRB     R1,[R0, #+0]
    572                         }               
    573          			GLcd_PutString(0,16,Display_Buff,1);	
   \                     ??Display_68:
   \   00000892   0123               MOVS     R3,#+1
   \   00000894   DFF8B026           LDR.W    R2,??Display_57+0x4
   \   00000898   1021               MOVS     R1,#+16
   \   0000089A   0020               MOVS     R0,#+0
   \   0000089C   ........           BL       GLcd_PutString
    574          			DisplayInfo.Mode = DISPMODE_MENU;	               
   \   000008A0   DFF81005           LDR.W    R0,??Display_0+0x24
   \   000008A4   0221               MOVS     R1,#+2
   \   000008A6   8171               STRB     R1,[R0, #+6]
    575          			
    576          		}  // end of DISP_MENU2
    577          		break;
   \   000008A8   00F015BF           B.W      ??Display_56
    578          	case DISP_MENU7:
    579          		{
    580          			//               GLcd_Clear();
    581          			sprintf( (char *)Display_Buff,"  < 사용자메뉴 >   ");
   \                     ??Display_27:
   \   000008AC   DFF8BC17           LDR.W    R1,??Display_60+0x84
   \   000008B0   DFF89406           LDR.W    R0,??Display_57+0x4
   \   000008B4   ........           BL       sprintf
    582          			GLcd_PutString(0,0,Display_Buff,1);
   \   000008B8   0123               MOVS     R3,#+1
   \   000008BA   DFF88C26           LDR.W    R2,??Display_57+0x4
   \   000008BE   0021               MOVS     R1,#+0
   \   000008C0   0020               MOVS     R0,#+0
   \   000008C2   ........           BL       GLcd_PutString
    583          
    584          			if( Input_Mode == 0 )
   \   000008C6   DFF8BC07           LDR.W    R0,??Display_60+0x9C
   \   000008CA   0078               LDRB     R0,[R0, #+0]
   \   000008CC   0028               CMP      R0,#+0
   \   000008CE   06D1               BNE.N    ??Display_71
    585          			{
    586               			sprintf( (char *)Display_Buff," 7. 파라미터업데이트");
   \   000008D0   DFF8E81C           LDR.W    R1,??Display_72
   \   000008D4   DFF87006           LDR.W    R0,??Display_57+0x4
   \   000008D8   ........           BL       sprintf
   \   000008DC   54E0               B.N      ??Display_73
    587          			}
    588          			else if( Input_Mode == 1)
   \                     ??Display_71:
   \   000008DE   DFF8A407           LDR.W    R0,??Display_60+0x9C
   \   000008E2   0078               LDRB     R0,[R0, #+0]
   \   000008E4   0128               CMP      R0,#+1
   \   000008E6   06D1               BNE.N    ??Display_74
    589          			{
    590          				sprintf( (char *)Display_Buff, "[OK]누르면시작   "	);
   \   000008E8   DFF8D41C           LDR.W    R1,??Display_72+0x4
   \   000008EC   DFF85806           LDR.W    R0,??Display_57+0x4
   \   000008F0   ........           BL       sprintf
   \   000008F4   48E0               B.N      ??Display_73
    591          			}
    592                         else if( Input_Mode == 2 )
   \                     ??Display_74:
   \   000008F6   DFF88C07           LDR.W    R0,??Display_60+0x9C
   \   000008FA   0078               LDRB     R0,[R0, #+0]
   \   000008FC   0228               CMP      R0,#+2
   \   000008FE   06D1               BNE.N    ??Display_75
    593                         {
    594                              sprintf( (char *)Display_Buff, "업데이트중입니다"	);
   \   00000900   DFF8C01C           LDR.W    R1,??Display_72+0x8
   \   00000904   DFF84006           LDR.W    R0,??Display_57+0x4
   \   00000908   ........           BL       sprintf
   \   0000090C   3CE0               B.N      ??Display_73
    595                         }
    596                         else if( Input_Mode == 3 )
   \                     ??Display_75:
   \   0000090E   DFF87407           LDR.W    R0,??Display_60+0x9C
   \   00000912   0078               LDRB     R0,[R0, #+0]
   \   00000914   0328               CMP      R0,#+3
   \   00000916   20D1               BNE.N    ??Display_76
    597                         {
    598                              sprintf( (char *)Display_Buff,"- 저장완료했습니다.    ");                      
   \   00000918   DFF87C17           LDR.W    R1,??Display_60+0xB0
   \   0000091C   DFF82806           LDR.W    R0,??Display_57+0x4
   \   00000920   ........           BL       sprintf
    599                              DisplayInfo.TimeOut = MS_TIMER;
   \   00000924   DFF8A00C           LDR.W    R0,??Display_72+0xC  ;; 0x40000c00
   \   00000928   ........           BL       TIM_GetCounter
   \   0000092C   DFF88414           LDR.W    R1,??Display_0+0x24
   \   00000930   4880               STRH     R0,[R1, #+2]
    600                              DisplayInfo.HoldingTime = 2000;
   \   00000932   DFF88004           LDR.W    R0,??Display_0+0x24
   \   00000936   4FF4FA61           MOV      R1,#+2000
   \   0000093A   0180               STRH     R1,[R0, #+0]
    601                              DisplayInfo.Next_View = DisplayInfo.Now_View;
   \   0000093C   DFF87404           LDR.W    R0,??Display_0+0x24
   \   00000940   DFF87014           LDR.W    R1,??Display_0+0x24
   \   00000944   4979               LDRB     R1,[R1, #+5]
   \   00000946   0171               STRB     R1,[R0, #+4]
    602                              DisplayInfo.Now_View = DISP_WAIT;            
   \   00000948   DFF86804           LDR.W    R0,??Display_0+0x24
   \   0000094C   0121               MOVS     R1,#+1
   \   0000094E   4171               STRB     R1,[R0, #+5]
    603                              Input_Mode = 0;                    
   \   00000950   DFF83007           LDR.W    R0,??Display_60+0x9C
   \   00000954   0021               MOVS     R1,#+0
   \   00000956   0170               STRB     R1,[R0, #+0]
   \   00000958   16E0               B.N      ??Display_73
    604                         }
    605                         else if( Input_Mode == 4 )
   \                     ??Display_76:
   \   0000095A   DFF82807           LDR.W    R0,??Display_60+0x9C
   \   0000095E   0078               LDRB     R0,[R0, #+0]
   \   00000960   0428               CMP      R0,#+4
   \   00000962   06D1               BNE.N    ??Display_77
    606                         {
    607                              sprintf( (char *)Display_Buff, "업데이트실패"	);                    
   \   00000964   DFF82817           LDR.W    R1,??Display_60+0xA8
   \   00000968   DFF8DC05           LDR.W    R0,??Display_57+0x4
   \   0000096C   ........           BL       sprintf
   \   00000970   0AE0               B.N      ??Display_73
    608                         }
    609                         else if( Input_Mode == 5 )                    
   \                     ??Display_77:
   \   00000972   DFF81007           LDR.W    R0,??Display_60+0x9C
   \   00000976   0078               LDRB     R0,[R0, #+0]
   \   00000978   0528               CMP      R0,#+5
   \   0000097A   05D1               BNE.N    ??Display_73
    610                         {
    611                              sprintf( (char *)Display_Buff, "WIFI업데이트중입니다."	);     
   \   0000097C   DFF84C1C           LDR.W    R1,??Display_72+0x10
   \   00000980   DFF8C405           LDR.W    R0,??Display_57+0x4
   \   00000984   ........           BL       sprintf
    612                         }                     
    613          			GLcd_PutString(0,16,Display_Buff,1);	
   \                     ??Display_73:
   \   00000988   0123               MOVS     R3,#+1
   \   0000098A   DFF8BC25           LDR.W    R2,??Display_57+0x4
   \   0000098E   1021               MOVS     R1,#+16
   \   00000990   0020               MOVS     R0,#+0
   \   00000992   ........           BL       GLcd_PutString
    614          			DisplayInfo.Mode = DISPMODE_MENU;	               
   \   00000996   DFF81C04           LDR.W    R0,??Display_0+0x24
   \   0000099A   0221               MOVS     R1,#+2
   \   0000099C   8171               STRB     R1,[R0, #+6]
    615          			
    616          		}  // end of DISP_MENU2
    617          		break;        
   \   0000099E   00F09ABE           B.W      ??Display_56
    618          	case DISP_MENU5_1:
    619          		{			
    620          			sprintf( (char *)Display_Buff,"  < 스피커볼륨 >       " );
   \                     ??Display_55:
   \   000009A2   DFF8381D           LDR.W    R1,??Display_78
   \   000009A6   DFF8A005           LDR.W    R0,??Display_57+0x4
   \   000009AA   ........           BL       sprintf
    621          			GLcd_PutString(0,0,Display_Buff,1);
   \   000009AE   0123               MOVS     R3,#+1
   \   000009B0   DFF89425           LDR.W    R2,??Display_57+0x4
   \   000009B4   0021               MOVS     R1,#+0
   \   000009B6   0020               MOVS     R0,#+0
   \   000009B8   ........           BL       GLcd_PutString
    622          			sprintf( (char *)Display_Buff,"    [ %03d %% ]      ",SFLASH_Memory.Voice_Volume );		  
   \   000009BC   DFF8200D           LDR.W    R0,??Display_78+0x4
   \   000009C0   90F8A320           LDRB     R2,[R0, #+163]
   \   000009C4   DFF81C1D           LDR.W    R1,??Display_78+0x8
   \   000009C8   DFF87C05           LDR.W    R0,??Display_57+0x4
   \   000009CC   ........           BL       sprintf
    623          			GLcd_PutString(0,16,Display_Buff,1);          
   \   000009D0   0123               MOVS     R3,#+1
   \   000009D2   DFF87425           LDR.W    R2,??Display_57+0x4
   \   000009D6   1021               MOVS     R1,#+16
   \   000009D8   0020               MOVS     R0,#+0
   \   000009DA   ........           BL       GLcd_PutString
    624          			
    625          		}  	// end of DIS_MENU4_14
    626          		break;	            
   \   000009DE   00F07ABE           B.W      ??Display_56
    627          	case DISP_MENU1_1:
    628          		{
    629          			
    630          			sprintf( (char *)Display_Buff,"  < 저장  메뉴 >  ");
   \                     ??Display_29:
   \   000009E2   DFF8041D           LDR.W    R1,??Display_78+0xC
   \   000009E6   DFF86005           LDR.W    R0,??Display_57+0x4
   \   000009EA   ........           BL       sprintf
    631          			GLcd_PutString(0,0,Display_Buff,1);
   \   000009EE   0123               MOVS     R3,#+1
   \   000009F0   DFF85425           LDR.W    R2,??Display_57+0x4
   \   000009F4   0021               MOVS     R1,#+0
   \   000009F6   0020               MOVS     R0,#+0
   \   000009F8   ........           BL       GLcd_PutString
    632                         
    633          			if( Input_Mode == 0 )
   \   000009FC   DFF88406           LDR.W    R0,??Display_60+0x9C
   \   00000A00   0078               LDRB     R0,[R0, #+0]
   \   00000A02   0028               CMP      R0,#+0
   \   00000A04   06D1               BNE.N    ??Display_79
    634          			{
    635               			sprintf( (char *)Display_Buff,"- 선택백업          ");                    				
   \   00000A06   DFF8E41C           LDR.W    R1,??Display_78+0x10
   \   00000A0A   DFF83C05           LDR.W    R0,??Display_57+0x4
   \   00000A0E   ........           BL       sprintf
   \   00000A12   6EE0               B.N      ??Display_80
    636          			}
    637          			else if(Input_Mode == 1)
   \                     ??Display_79:
   \   00000A14   DFF86C06           LDR.W    R0,??Display_60+0x9C
   \   00000A18   0078               LDRB     R0,[R0, #+0]
   \   00000A1A   0128               CMP      R0,#+1
   \   00000A1C   14D1               BNE.N    ??Display_81
    638          			{
    639                              
    640          				sprintf( (char *)Display_Buff," [%03d]-%02d%02d%02d ",VIEW_Header.Start_Index,
    641                                      VIEW_Header.Header.Date[0],
    642                                      VIEW_Header.Header.Date[1],
    643                                      VIEW_Header.Header.Date[2]
    644                                     );
   \   00000A1E   DFF8D00C           LDR.W    R0,??Display_78+0x14
   \   00000A22   807A               LDRB     R0,[R0, #+10]
   \   00000A24   0190               STR      R0,[SP, #+4]
   \   00000A26   DFF8C80C           LDR.W    R0,??Display_78+0x14
   \   00000A2A   407A               LDRB     R0,[R0, #+9]
   \   00000A2C   0090               STR      R0,[SP, #+0]
   \   00000A2E   DFF8C00C           LDR.W    R0,??Display_78+0x14
   \   00000A32   037A               LDRB     R3,[R0, #+8]
   \   00000A34   DFF8B80C           LDR.W    R0,??Display_78+0x14
   \   00000A38   0268               LDR      R2,[R0, #+0]
   \   00000A3A   DFF8B81C           LDR.W    R1,??Display_78+0x18
   \   00000A3E   DFF80805           LDR.W    R0,??Display_57+0x4
   \   00000A42   ........           BL       sprintf
   \   00000A46   54E0               B.N      ??Display_80
    645          			}else if(Input_Mode == 2)
   \                     ??Display_81:
   \   00000A48   DFF83806           LDR.W    R0,??Display_60+0x9C
   \   00000A4C   0078               LDRB     R0,[R0, #+0]
   \   00000A4E   0228               CMP      R0,#+2
   \   00000A50   0DD1               BNE.N    ??Display_82
    646                         {
    647                              sprintf( (char *)Display_Buff,"- DataSave        "); 
   \   00000A52   DFF8A41C           LDR.W    R1,??Display_78+0x1C
   \   00000A56   DFF8F004           LDR.W    R0,??Display_57+0x4
   \   00000A5A   ........           BL       sprintf
    648                              GLcd_PutString2(0,16,Display_Buff,1);	
   \   00000A5E   0123               MOVS     R3,#+1
   \   00000A60   DFF8E424           LDR.W    R2,??Display_57+0x4
   \   00000A64   1021               MOVS     R1,#+16
   \   00000A66   0020               MOVS     R0,#+0
   \   00000A68   ........           BL       GLcd_PutString2
   \   00000A6C   41E0               B.N      ??Display_80
    649                         }else if(Input_Mode == 3)
   \                     ??Display_82:
   \   00000A6E   DFF81406           LDR.W    R0,??Display_60+0x9C
   \   00000A72   0078               LDRB     R0,[R0, #+0]
   \   00000A74   0328               CMP      R0,#+3
   \   00000A76   1BD1               BNE.N    ??Display_83
    650                         {
    651                              sprintf( (char *)Display_Buff,"- 저장완료했습니다.    ");                      
   \   00000A78   DFF81C16           LDR.W    R1,??Display_60+0xB0
   \   00000A7C   DFF8C804           LDR.W    R0,??Display_57+0x4
   \   00000A80   ........           BL       sprintf
    652                              DisplayInfo.TimeOut = MS_TIMER;
   \   00000A84   DFF8400B           LDR.W    R0,??Display_72+0xC  ;; 0x40000c00
   \   00000A88   ........           BL       TIM_GetCounter
   \   00000A8C   C949               LDR.N    R1,??Display_0+0x24
   \   00000A8E   4880               STRH     R0,[R1, #+2]
    653                              DisplayInfo.HoldingTime = 2000;
   \   00000A90   C848               LDR.N    R0,??Display_0+0x24
   \   00000A92   4FF4FA61           MOV      R1,#+2000
   \   00000A96   0180               STRH     R1,[R0, #+0]
    654                              DisplayInfo.Next_View = DisplayInfo.Now_View;
   \   00000A98   C648               LDR.N    R0,??Display_0+0x24
   \   00000A9A   C649               LDR.N    R1,??Display_0+0x24
   \   00000A9C   4979               LDRB     R1,[R1, #+5]
   \   00000A9E   0171               STRB     R1,[R0, #+4]
    655                              DisplayInfo.Now_View = DISP_WAIT;            
   \   00000AA0   C448               LDR.N    R0,??Display_0+0x24
   \   00000AA2   0121               MOVS     R1,#+1
   \   00000AA4   4171               STRB     R1,[R0, #+5]
    656                              Input_Mode = 0;
   \   00000AA6   DFF8DC05           LDR.W    R0,??Display_60+0x9C
   \   00000AAA   0021               MOVS     R1,#+0
   \   00000AAC   0170               STRB     R1,[R0, #+0]
   \   00000AAE   20E0               B.N      ??Display_80
    657                         }else if(Input_Mode == 4)
   \                     ??Display_83:
   \   00000AB0   DFF8D005           LDR.W    R0,??Display_60+0x9C
   \   00000AB4   0078               LDRB     R0,[R0, #+0]
   \   00000AB6   0428               CMP      R0,#+4
   \   00000AB8   1BD1               BNE.N    ??Display_80
    658                         {
    659                              sprintf( (char *)Display_Buff,( char * )DISP_WORD[0]);           // USB 없음                        
   \   00000ABA   ........           LDR.W    R0,??DataTable169
   \   00000ABE   0168               LDR      R1,[R0, #+0]
   \   00000AC0   DFF88404           LDR.W    R0,??Display_57+0x4
   \   00000AC4   ........           BL       sprintf
    660                              DisplayInfo.TimeOut = MS_TIMER;
   \   00000AC8   DFF8FC0A           LDR.W    R0,??Display_72+0xC  ;; 0x40000c00
   \   00000ACC   ........           BL       TIM_GetCounter
   \   00000AD0   B849               LDR.N    R1,??Display_0+0x24
   \   00000AD2   4880               STRH     R0,[R1, #+2]
    661                              DisplayInfo.HoldingTime = 2000;
   \   00000AD4   B748               LDR.N    R0,??Display_0+0x24
   \   00000AD6   4FF4FA61           MOV      R1,#+2000
   \   00000ADA   0180               STRH     R1,[R0, #+0]
    662                              DisplayInfo.Next_View = DisplayInfo.Now_View;
   \   00000ADC   B548               LDR.N    R0,??Display_0+0x24
   \   00000ADE   B549               LDR.N    R1,??Display_0+0x24
   \   00000AE0   4979               LDRB     R1,[R1, #+5]
   \   00000AE2   0171               STRB     R1,[R0, #+4]
    663                              DisplayInfo.Now_View = DISP_WAIT;            
   \   00000AE4   B348               LDR.N    R0,??Display_0+0x24
   \   00000AE6   0121               MOVS     R1,#+1
   \   00000AE8   4171               STRB     R1,[R0, #+5]
    664                              Input_Mode = 0;
   \   00000AEA   DFF89805           LDR.W    R0,??Display_60+0x9C
   \   00000AEE   0021               MOVS     R1,#+0
   \   00000AF0   0170               STRB     R1,[R0, #+0]
    665                         }
    666                         GLcd_PutString(0,16,Display_Buff,1);	
   \                     ??Display_80:
   \   00000AF2   0123               MOVS     R3,#+1
   \   00000AF4   DFF85024           LDR.W    R2,??Display_57+0x4
   \   00000AF8   1021               MOVS     R1,#+16
   \   00000AFA   0020               MOVS     R0,#+0
   \   00000AFC   ........           BL       GLcd_PutString
    667          			DisplayInfo.Mode = DISPMODE_MENU;		
   \   00000B00   AC48               LDR.N    R0,??Display_0+0x24
   \   00000B02   0221               MOVS     R1,#+2
   \   00000B04   8171               STRB     R1,[R0, #+6]
    668          		}  // end of DISP_MENU1_1
    669          		break;          
   \   00000B06   00F0E6BD           B.W      ??Display_56
    670          	case DISP_MENU1_2:
    671          		{
    672          			
    673          			sprintf( (char *)Display_Buff,"  < 저장  메뉴 >");
   \                     ??Display_30:
   \   00000B0A   ........           LDR.W    R1,??DataTable169_1
   \   00000B0E   DFF83804           LDR.W    R0,??Display_57+0x4
   \   00000B12   ........           BL       sprintf
    674          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000B16   0123               MOVS     R3,#+1
   \   00000B18   DFF82C24           LDR.W    R2,??Display_57+0x4
   \   00000B1C   0021               MOVS     R1,#+0
   \   00000B1E   0020               MOVS     R0,#+0
   \   00000B20   ........           BL       GLcd_PutString
    675                         if(Input_Mode == 0)
   \   00000B24   DFF85C05           LDR.W    R0,??Display_60+0x9C
   \   00000B28   0078               LDRB     R0,[R0, #+0]
   \   00000B2A   0028               CMP      R0,#+0
   \   00000B2C   06D1               BNE.N    ??Display_84
    676                         {
    677                              sprintf( (char *)Display_Buff,"- 기간백업             ");
   \   00000B2E   ........           LDR.W    R1,??DataTable169_2
   \   00000B32   DFF81404           LDR.W    R0,??Display_57+0x4
   \   00000B36   ........           BL       sprintf
   \   00000B3A   5EE0               B.N      ??Display_85
    678                         }
    679          			else if(Input_Mode == 1)
   \                     ??Display_84:
   \   00000B3C   DFF84405           LDR.W    R0,??Display_60+0x9C
   \   00000B40   0078               LDRB     R0,[R0, #+0]
   \   00000B42   0128               CMP      R0,#+1
   \   00000B44   0BD1               BNE.N    ??Display_86
    680          			{
    681                              sprintf( (char *)Display_Buff, (char *)BAKUP_WORD[Input_Index_1]);
   \   00000B46   ........           LDR.W    R0,??DataTable169_3
   \   00000B4A   0078               LDRB     R0,[R0, #+0]
   \   00000B4C   ........           LDR.W    R1,??DataTable169_4
   \   00000B50   51F82010           LDR      R1,[R1, R0, LSL #+2]
   \   00000B54   DFF8F003           LDR.W    R0,??Display_57+0x4
   \   00000B58   ........           BL       sprintf
   \   00000B5C   4DE0               B.N      ??Display_85
    682                         }
    683                         else if(Input_Mode == 2)
   \                     ??Display_86:
   \   00000B5E   DFF82405           LDR.W    R0,??Display_60+0x9C
   \   00000B62   0078               LDRB     R0,[R0, #+0]
   \   00000B64   0228               CMP      R0,#+2
   \   00000B66   06D1               BNE.N    ??Display_87
    684                         {
    685                              sprintf( (char *)Display_Buff,"- 저장중입니다.        ");  
   \   00000B68   ........           LDR.W    R1,??DataTable169_5
   \   00000B6C   DFF8D803           LDR.W    R0,??Display_57+0x4
   \   00000B70   ........           BL       sprintf
   \   00000B74   41E0               B.N      ??Display_85
    686                         }else if(Input_Mode == 3)
   \                     ??Display_87:
   \   00000B76   DFF80C05           LDR.W    R0,??Display_60+0x9C
   \   00000B7A   0078               LDRB     R0,[R0, #+0]
   \   00000B7C   0328               CMP      R0,#+3
   \   00000B7E   1BD1               BNE.N    ??Display_88
    687                         {
    688                              sprintf( (char *)Display_Buff,"- 저장완료했습니다.    ");                      
   \   00000B80   DFF81415           LDR.W    R1,??Display_60+0xB0
   \   00000B84   DFF8C003           LDR.W    R0,??Display_57+0x4
   \   00000B88   ........           BL       sprintf
    689                              DisplayInfo.TimeOut = MS_TIMER;
   \   00000B8C   DFF8380A           LDR.W    R0,??Display_72+0xC  ;; 0x40000c00
   \   00000B90   ........           BL       TIM_GetCounter
   \   00000B94   8749               LDR.N    R1,??Display_0+0x24
   \   00000B96   4880               STRH     R0,[R1, #+2]
    690                              DisplayInfo.HoldingTime = 2000;
   \   00000B98   8648               LDR.N    R0,??Display_0+0x24
   \   00000B9A   4FF4FA61           MOV      R1,#+2000
   \   00000B9E   0180               STRH     R1,[R0, #+0]
    691                              DisplayInfo.Next_View = DisplayInfo.Now_View;
   \   00000BA0   8448               LDR.N    R0,??Display_0+0x24
   \   00000BA2   8449               LDR.N    R1,??Display_0+0x24
   \   00000BA4   4979               LDRB     R1,[R1, #+5]
   \   00000BA6   0171               STRB     R1,[R0, #+4]
    692                              DisplayInfo.Now_View = DISP_WAIT;            
   \   00000BA8   8248               LDR.N    R0,??Display_0+0x24
   \   00000BAA   0121               MOVS     R1,#+1
   \   00000BAC   4171               STRB     R1,[R0, #+5]
    693                              Input_Mode = 0;
   \   00000BAE   DFF8D404           LDR.W    R0,??Display_60+0x9C
   \   00000BB2   0021               MOVS     R1,#+0
   \   00000BB4   0170               STRB     R1,[R0, #+0]
   \   00000BB6   20E0               B.N      ??Display_85
    694                         }else if(Input_Mode == 4)
   \                     ??Display_88:
   \   00000BB8   DFF8C804           LDR.W    R0,??Display_60+0x9C
   \   00000BBC   0078               LDRB     R0,[R0, #+0]
   \   00000BBE   0428               CMP      R0,#+4
   \   00000BC0   1BD1               BNE.N    ??Display_85
    695                         {
    696                              sprintf( (char *)Display_Buff,( char * )DISP_WORD[0]);           // USB 없음                       
   \   00000BC2   ........           LDR.W    R0,??DataTable169
   \   00000BC6   0168               LDR      R1,[R0, #+0]
   \   00000BC8   DFF87C03           LDR.W    R0,??Display_57+0x4
   \   00000BCC   ........           BL       sprintf
    697                              DisplayInfo.TimeOut = MS_TIMER;
   \   00000BD0   DFF8F409           LDR.W    R0,??Display_72+0xC  ;; 0x40000c00
   \   00000BD4   ........           BL       TIM_GetCounter
   \   00000BD8   7649               LDR.N    R1,??Display_0+0x24
   \   00000BDA   4880               STRH     R0,[R1, #+2]
    698                              DisplayInfo.HoldingTime = 2000;
   \   00000BDC   7548               LDR.N    R0,??Display_0+0x24
   \   00000BDE   4FF4FA61           MOV      R1,#+2000
   \   00000BE2   0180               STRH     R1,[R0, #+0]
    699                              DisplayInfo.Next_View = DisplayInfo.Now_View;
   \   00000BE4   7348               LDR.N    R0,??Display_0+0x24
   \   00000BE6   7349               LDR.N    R1,??Display_0+0x24
   \   00000BE8   4979               LDRB     R1,[R1, #+5]
   \   00000BEA   0171               STRB     R1,[R0, #+4]
    700                              DisplayInfo.Now_View = DISP_WAIT;            
   \   00000BEC   7148               LDR.N    R0,??Display_0+0x24
   \   00000BEE   0121               MOVS     R1,#+1
   \   00000BF0   4171               STRB     R1,[R0, #+5]
    701                              Input_Mode = 0;
   \   00000BF2   DFF89004           LDR.W    R0,??Display_60+0x9C
   \   00000BF6   0021               MOVS     R1,#+0
   \   00000BF8   0170               STRB     R1,[R0, #+0]
    702                         }
    703                         
    704          			GLcd_PutString(0,16,Display_Buff,1);	
   \                     ??Display_85:
   \   00000BFA   0123               MOVS     R3,#+1
   \   00000BFC   DFF84823           LDR.W    R2,??Display_57+0x4
   \   00000C00   1021               MOVS     R1,#+16
   \   00000C02   0020               MOVS     R0,#+0
   \   00000C04   ........           BL       GLcd_PutString
    705          			DisplayInfo.Mode = DISPMODE_MENU;		
   \   00000C08   6A48               LDR.N    R0,??Display_0+0x24
   \   00000C0A   0221               MOVS     R1,#+2
   \   00000C0C   8171               STRB     R1,[R0, #+6]
    706          		}  // end of DISP_MENU1_2
    707          		break;       
   \   00000C0E   00F062BD           B.W      ??Display_56
    708          	case DISP_MENU1_3:
    709          		{
    710          			
    711          			sprintf( (char *)Display_Buff,"  < 저장  메뉴 >");
   \                     ??Display_31:
   \   00000C12   ........           LDR.W    R1,??DataTable169_1
   \   00000C16   CC48               LDR.N    R0,??Display_57+0x4
   \   00000C18   ........           BL       sprintf
    712          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000C1C   0123               MOVS     R3,#+1
   \   00000C1E   CA4A               LDR.N    R2,??Display_57+0x4
   \   00000C20   0021               MOVS     R1,#+0
   \   00000C22   0020               MOVS     R0,#+0
   \   00000C24   ........           BL       GLcd_PutString
    713                         if(Input_Mode == 0)
   \   00000C28   DFF85804           LDR.W    R0,??Display_60+0x9C
   \   00000C2C   0078               LDRB     R0,[R0, #+0]
   \   00000C2E   0028               CMP      R0,#+0
   \   00000C30   05D1               BNE.N    ??Display_89
    714                         {
    715                              sprintf( (char *)Display_Buff,"- 전체백업          ");
   \   00000C32   ........           LDR.W    R1,??DataTable169_6
   \   00000C36   C448               LDR.N    R0,??Display_57+0x4
   \   00000C38   ........           BL       sprintf
   \   00000C3C   55E0               B.N      ??Display_90
    716                         }else if(Input_Mode == 1)
   \                     ??Display_89:
   \   00000C3E   DFF84404           LDR.W    R0,??Display_60+0x9C
   \   00000C42   0078               LDRB     R0,[R0, #+0]
   \   00000C44   0128               CMP      R0,#+1
   \   00000C46   05D1               BNE.N    ??Display_91
    717          			{
    718                              sprintf( (char *)Display_Buff,"- 전체백업을할까요? ");
   \   00000C48   ........           LDR.W    R1,??DataTable169_7
   \   00000C4C   BE48               LDR.N    R0,??Display_57+0x4
   \   00000C4E   ........           BL       sprintf
   \   00000C52   4AE0               B.N      ??Display_90
    719                         }else if(Input_Mode == 2)
   \                     ??Display_91:
   \   00000C54   DFF82C04           LDR.W    R0,??Display_60+0x9C
   \   00000C58   0078               LDRB     R0,[R0, #+0]
   \   00000C5A   0228               CMP      R0,#+2
   \   00000C5C   05D1               BNE.N    ??Display_92
    720          			{
    721                              sprintf( (char *)Display_Buff,"- 저장중입니다.    ");
   \   00000C5E   ........           LDR.W    R1,??DataTable169_8
   \   00000C62   B948               LDR.N    R0,??Display_57+0x4
   \   00000C64   ........           BL       sprintf
   \   00000C68   3FE0               B.N      ??Display_90
    722                              
    723                         }else if(Input_Mode == 3)
   \                     ??Display_92:
   \   00000C6A   DFF81804           LDR.W    R0,??Display_60+0x9C
   \   00000C6E   0078               LDRB     R0,[R0, #+0]
   \   00000C70   0328               CMP      R0,#+3
   \   00000C72   1AD1               BNE.N    ??Display_93
    724                         {
    725                              sprintf( (char *)Display_Buff,"- 저장완료했습니다.    ");                      
   \   00000C74   DFF82014           LDR.W    R1,??Display_60+0xB0
   \   00000C78   B348               LDR.N    R0,??Display_57+0x4
   \   00000C7A   ........           BL       sprintf
    726                              DisplayInfo.TimeOut = MS_TIMER;
   \   00000C7E   DFF84809           LDR.W    R0,??Display_72+0xC  ;; 0x40000c00
   \   00000C82   ........           BL       TIM_GetCounter
   \   00000C86   4B49               LDR.N    R1,??Display_0+0x24
   \   00000C88   4880               STRH     R0,[R1, #+2]
    727                              DisplayInfo.HoldingTime = 2000;
   \   00000C8A   4A48               LDR.N    R0,??Display_0+0x24
   \   00000C8C   4FF4FA61           MOV      R1,#+2000
   \   00000C90   0180               STRH     R1,[R0, #+0]
    728                              DisplayInfo.Next_View = DisplayInfo.Now_View;
   \   00000C92   4848               LDR.N    R0,??Display_0+0x24
   \   00000C94   4749               LDR.N    R1,??Display_0+0x24
   \   00000C96   4979               LDRB     R1,[R1, #+5]
   \   00000C98   0171               STRB     R1,[R0, #+4]
    729                              DisplayInfo.Now_View = DISP_WAIT;            
   \   00000C9A   4648               LDR.N    R0,??Display_0+0x24
   \   00000C9C   0121               MOVS     R1,#+1
   \   00000C9E   4171               STRB     R1,[R0, #+5]
    730                              Input_Mode = 0;
   \   00000CA0   DFF8E003           LDR.W    R0,??Display_60+0x9C
   \   00000CA4   0021               MOVS     R1,#+0
   \   00000CA6   0170               STRB     R1,[R0, #+0]
   \   00000CA8   1FE0               B.N      ??Display_90
    731                         }else if(Input_Mode == 4)
   \                     ??Display_93:
   \   00000CAA   DFF8D803           LDR.W    R0,??Display_60+0x9C
   \   00000CAE   0078               LDRB     R0,[R0, #+0]
   \   00000CB0   0428               CMP      R0,#+4
   \   00000CB2   1AD1               BNE.N    ??Display_90
    732                         {
    733                              sprintf( (char *)Display_Buff,( char * )DISP_WORD[0]);           // USB 없음                    
   \   00000CB4   ........           LDR.W    R0,??DataTable169
   \   00000CB8   0168               LDR      R1,[R0, #+0]
   \   00000CBA   A348               LDR.N    R0,??Display_57+0x4
   \   00000CBC   ........           BL       sprintf
    734                              DisplayInfo.TimeOut = MS_TIMER;
   \   00000CC0   DFF80409           LDR.W    R0,??Display_72+0xC  ;; 0x40000c00
   \   00000CC4   ........           BL       TIM_GetCounter
   \   00000CC8   3A49               LDR.N    R1,??Display_0+0x24
   \   00000CCA   4880               STRH     R0,[R1, #+2]
    735                              DisplayInfo.HoldingTime = 2000;
   \   00000CCC   3948               LDR.N    R0,??Display_0+0x24
   \   00000CCE   4FF4FA61           MOV      R1,#+2000
   \   00000CD2   0180               STRH     R1,[R0, #+0]
    736                              DisplayInfo.Next_View = DisplayInfo.Now_View;
   \   00000CD4   3748               LDR.N    R0,??Display_0+0x24
   \   00000CD6   3749               LDR.N    R1,??Display_0+0x24
   \   00000CD8   4979               LDRB     R1,[R1, #+5]
   \   00000CDA   0171               STRB     R1,[R0, #+4]
    737                              DisplayInfo.Now_View = DISP_WAIT;            
   \   00000CDC   3548               LDR.N    R0,??Display_0+0x24
   \   00000CDE   0121               MOVS     R1,#+1
   \   00000CE0   4171               STRB     R1,[R0, #+5]
    738                              Input_Mode = 0;
   \   00000CE2   DFF8A003           LDR.W    R0,??Display_60+0x9C
   \   00000CE6   0021               MOVS     R1,#+0
   \   00000CE8   0170               STRB     R1,[R0, #+0]
    739                         }
    740                         
    741          			GLcd_PutString(0,16,Display_Buff,1);	
   \                     ??Display_90:
   \   00000CEA   0123               MOVS     R3,#+1
   \   00000CEC   964A               LDR.N    R2,??Display_57+0x4
   \   00000CEE   1021               MOVS     R1,#+16
   \   00000CF0   0020               MOVS     R0,#+0
   \   00000CF2   ........           BL       GLcd_PutString
    742          			DisplayInfo.Mode = DISPMODE_MENU;		
   \   00000CF6   2F48               LDR.N    R0,??Display_0+0x24
   \   00000CF8   0221               MOVS     R1,#+2
   \   00000CFA   8171               STRB     R1,[R0, #+6]
    743          		}  // end of DISP_MENU1_2
    744          		break;              
   \   00000CFC   00F0EBBC           B.W      ??Display_56
    745          	case DISP_MENU1_4:
    746          		{
    747          			
    748          			sprintf( (char *)Display_Buff,"  < 저장  메뉴 >");
   \                     ??Display_32:
   \   00000D00   ........           LDR.W    R1,??DataTable169_1
   \   00000D04   9048               LDR.N    R0,??Display_57+0x4
   \   00000D06   ........           BL       sprintf
    749          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000D0A   0123               MOVS     R3,#+1
   \   00000D0C   8E4A               LDR.N    R2,??Display_57+0x4
   \   00000D0E   0021               MOVS     R1,#+0
   \   00000D10   0020               MOVS     R0,#+0
   \   00000D12   ........           BL       GLcd_PutString
    750                         if(Input_Mode == 0)
   \   00000D16   DFF86C03           LDR.W    R0,??Display_60+0x9C
   \   00000D1A   0078               LDRB     R0,[R0, #+0]
   \   00000D1C   0028               CMP      R0,#+0
   \   00000D1E   05D1               BNE.N    ??Display_94
    751                         {
    752                              sprintf( (char *)Display_Buff,"- 충돌데이터저장          ");
   \   00000D20   ........           LDR.W    R1,??DataTable169_9
   \   00000D24   8848               LDR.N    R0,??Display_57+0x4
   \   00000D26   ........           BL       sprintf
   \   00000D2A   68E0               B.N      ??Display_95
    753                         }else if(Input_Mode == 1)
   \                     ??Display_94:
   \   00000D2C   D548               LDR.N    R0,??Display_60+0x9C
   \   00000D2E   0078               LDRB     R0,[R0, #+0]
   \   00000D30   0128               CMP      R0,#+1
   \   00000D32   05D1               BNE.N    ??Display_96
    754          			{
    755                              sprintf( (char *)Display_Buff,"- 전체저장을할까요? ");
   \   00000D34   ........           LDR.W    R1,??DataTable169_10
   \   00000D38   8348               LDR.N    R0,??Display_57+0x4
   \   00000D3A   ........           BL       sprintf
   \   00000D3E   5EE0               B.N      ??Display_95
    756                         }else if(Input_Mode == 2)
   \                     ??Display_96:
   \   00000D40   D048               LDR.N    R0,??Display_60+0x9C
   \   00000D42   0078               LDRB     R0,[R0, #+0]
   \   00000D44   0228               CMP      R0,#+2
   \   00000D46   05D1               BNE.N    ??Display_97
    757          			{
    758                              sprintf( (char *)Display_Buff,"- 저장중입니다.    ");
   \   00000D48   ........           LDR.W    R1,??DataTable169_8
   \   00000D4C   7E48               LDR.N    R0,??Display_57+0x4
   \   00000D4E   ........           BL       sprintf
   \   00000D52   54E0               B.N      ??Display_95
    759                              
    760                         }else if(Input_Mode == 3)
   \                     ??Display_97:
   \   00000D54   CB48               LDR.N    R0,??Display_60+0x9C
   \   00000D56   0078               LDRB     R0,[R0, #+0]
   \   00000D58   0328               CMP      R0,#+3
   \   00000D5A   2DD1               BNE.N    ??Display_98
    761                         {
    762                              sprintf( (char *)Display_Buff,"- 저장완료했습니다.    ");                      
   \   00000D5C   CE49               LDR.N    R1,??Display_60+0xB0
   \   00000D5E   7A48               LDR.N    R0,??Display_57+0x4
   \   00000D60   ........           BL       sprintf
    763                              DisplayInfo.TimeOut = MS_TIMER;
   \   00000D64   DFF86008           LDR.W    R0,??Display_72+0xC  ;; 0x40000c00
   \   00000D68   ........           BL       TIM_GetCounter
   \   00000D6C   1149               LDR.N    R1,??Display_0+0x24
   \   00000D6E   4880               STRH     R0,[R1, #+2]
    764                              DisplayInfo.HoldingTime = 2000;
   \   00000D70   1048               LDR.N    R0,??Display_0+0x24
   \   00000D72   4FF4FA61           MOV      R1,#+2000
   \   00000D76   0180               STRH     R1,[R0, #+0]
    765                              DisplayInfo.Next_View = DisplayInfo.Now_View;
   \   00000D78   0E48               LDR.N    R0,??Display_0+0x24
   \   00000D7A   0E49               LDR.N    R1,??Display_0+0x24
   \   00000D7C   4979               LDRB     R1,[R1, #+5]
   \   00000D7E   0171               STRB     R1,[R0, #+4]
    766                              DisplayInfo.Now_View = DISP_WAIT;            
   \   00000D80   0C48               LDR.N    R0,??Display_0+0x24
   \   00000D82   0121               MOVS     R1,#+1
   \   00000D84   4171               STRB     R1,[R0, #+5]
    767                              Input_Mode = 0;
   \   00000D86   BF48               LDR.N    R0,??Display_60+0x9C
   \   00000D88   0021               MOVS     R1,#+0
   \   00000D8A   0170               STRB     R1,[R0, #+0]
   \   00000D8C   37E0               B.N      ??Display_95
   \   00000D8E   00BF               Nop      
   \                     ??Display_0:
   \   00000D90   ........           DC32     GLCD_Refresh_Flag
   \   00000D94   ........           DC32     ??Display_Time
   \   00000D98   ........           DC32     GLCD_Data
   \   00000D9C   ........           DC32     GLCD_Buffer
   \   00000DA0   000C0040           DC32     0x40000c00
   \   00000DA4   ........           DC32     ??Led_Flag
   \   00000DA8   ........           DC32     Toogle_Cursor
   \   00000DAC   ........           DC32     GLCD_OUT_Flag
   \   00000DB0   ........           DC32     GLCD_Buffer_Cnt
   \   00000DB4   ........           DC32     DisplayInfo
    768                         }else if(Input_Mode == 4)
   \                     ??Display_98:
   \   00000DB8   B248               LDR.N    R0,??Display_60+0x9C
   \   00000DBA   0078               LDRB     R0,[R0, #+0]
   \   00000DBC   0428               CMP      R0,#+4
   \   00000DBE   1ED1               BNE.N    ??Display_95
    769                         {
    770                              sprintf( (char *)Display_Buff,( char * )DISP_WORD[0]);           // USB 없음                     
   \   00000DC0   ........           LDR.W    R0,??DataTable169
   \   00000DC4   0168               LDR      R1,[R0, #+0]
   \   00000DC6   6048               LDR.N    R0,??Display_57+0x4
   \   00000DC8   ........           BL       sprintf
    771                              DisplayInfo.TimeOut = MS_TIMER;
   \   00000DCC   DFF8F807           LDR.W    R0,??Display_72+0xC  ;; 0x40000c00
   \   00000DD0   ........           BL       TIM_GetCounter
   \   00000DD4   ........           LDR.W    R1,??DataTable169_11
   \   00000DD8   4880               STRH     R0,[R1, #+2]
    772                              DisplayInfo.HoldingTime = 2000;
   \   00000DDA   ........           LDR.W    R0,??DataTable169_11
   \   00000DDE   4FF4FA61           MOV      R1,#+2000
   \   00000DE2   0180               STRH     R1,[R0, #+0]
    773                              DisplayInfo.Next_View = DisplayInfo.Now_View;
   \   00000DE4   ........           LDR.W    R0,??DataTable169_11
   \   00000DE8   ........           LDR.W    R1,??DataTable169_11
   \   00000DEC   4979               LDRB     R1,[R1, #+5]
   \   00000DEE   0171               STRB     R1,[R0, #+4]
    774                              DisplayInfo.Now_View = DISP_WAIT;            
   \   00000DF0   ........           LDR.W    R0,??DataTable169_11
   \   00000DF4   0121               MOVS     R1,#+1
   \   00000DF6   4171               STRB     R1,[R0, #+5]
    775                              Input_Mode = 0;
   \   00000DF8   A248               LDR.N    R0,??Display_60+0x9C
   \   00000DFA   0021               MOVS     R1,#+0
   \   00000DFC   0170               STRB     R1,[R0, #+0]
    776                         }
    777                         
    778          			GLcd_PutString(0,16,Display_Buff,1);	
   \                     ??Display_95:
   \   00000DFE   0123               MOVS     R3,#+1
   \   00000E00   514A               LDR.N    R2,??Display_57+0x4
   \   00000E02   1021               MOVS     R1,#+16
   \   00000E04   0020               MOVS     R0,#+0
   \   00000E06   ........           BL       GLcd_PutString
    779          			DisplayInfo.Mode = DISPMODE_MENU;		
   \   00000E0A   ........           LDR.W    R0,??DataTable169_11
   \   00000E0E   0221               MOVS     R1,#+2
   \   00000E10   8171               STRB     R1,[R0, #+6]
    780          		}  // end of DISP_MENU1_2
    781          		break;            
   \   00000E12   00F060BC           B.W      ??Display_56
    782          	case DISP_MENU2_1:
    783          		{
    784          			sprintf( (char *)Display_Buff,"  < 운전자선택 >      ");
   \                     ??Display_33:
   \   00000E16   ........           LDR.W    R1,??DataTable169_12
   \   00000E1A   4B48               LDR.N    R0,??Display_57+0x4
   \   00000E1C   ........           BL       sprintf
    785          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000E20   0123               MOVS     R3,#+1
   \   00000E22   494A               LDR.N    R2,??Display_57+0x4
   \   00000E24   0021               MOVS     R1,#+0
   \   00000E26   0020               MOVS     R0,#+0
   \   00000E28   ........           BL       GLcd_PutString
    786                         sprintf( (char *)Display_Buff,"  %s",SFLASH_Memory.Driver[Info.Driver_Index]);
   \   00000E2C   7148               LDR.N    R0,??Display_60+0xC
   \   00000E2E   0078               LDRB     R0,[R0, #+0]
   \   00000E30   1321               MOVS     R1,#+19
   \   00000E32   DFF8AC28           LDR.W    R2,??Display_78+0x4
   \   00000E36   01FB0020           MLA      R0,R1,R0,R2
   \   00000E3A   421C               ADDS     R2,R0,#+1
   \   00000E3C   ........           LDR.W    R1,??DataTable169_13
   \   00000E40   4148               LDR.N    R0,??Display_57+0x4
   \   00000E42   ........           BL       sprintf
    787          //			sprintf( (char *)Display_Buff," [%02d] %07ld ",SFLASH_Memory.Driver_Index +1, SFLASH_Memory.Driver[SFLASH_Memory.Driver_Index]);
    788          			GLcd_PutString(0,16,Display_Buff,1);	
   \   00000E46   0123               MOVS     R3,#+1
   \   00000E48   3F4A               LDR.N    R2,??Display_57+0x4
   \   00000E4A   1021               MOVS     R1,#+16
   \   00000E4C   0020               MOVS     R0,#+0
   \   00000E4E   ........           BL       GLcd_PutString
    789          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   00000E52   ........           LDR.W    R0,??DataTable169_11
   \   00000E56   0221               MOVS     R1,#+2
   \   00000E58   8171               STRB     R1,[R0, #+6]
    790          			
    791          		}  // end of DISP_MENU2_1
    792          		break;  
   \   00000E5A   00F03CBC           B.W      ??Display_56
    793          	case DISP_MENU2_1_1:
    794          		{
    795          			sprintf( (char *)Display_Buff,"  < 운전자선택 >      ");
   \                     ??Display_34:
   \   00000E5E   ........           LDR.W    R1,??DataTable169_12
   \   00000E62   3948               LDR.N    R0,??Display_57+0x4
   \   00000E64   ........           BL       sprintf
    796          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000E68   0123               MOVS     R3,#+1
   \   00000E6A   374A               LDR.N    R2,??Display_57+0x4
   \   00000E6C   0021               MOVS     R1,#+0
   \   00000E6E   0020               MOVS     R0,#+0
   \   00000E70   ........           BL       GLcd_PutString
    797                         sprintf( (char *)Display_Buff,"  %s",SFLASH_Memory.Driver[Info.Driver_Index]);
   \   00000E74   5F48               LDR.N    R0,??Display_60+0xC
   \   00000E76   0078               LDRB     R0,[R0, #+0]
   \   00000E78   1321               MOVS     R1,#+19
   \   00000E7A   DFF86428           LDR.W    R2,??Display_78+0x4
   \   00000E7E   01FB0020           MLA      R0,R1,R0,R2
   \   00000E82   421C               ADDS     R2,R0,#+1
   \   00000E84   ........           LDR.W    R1,??DataTable169_13
   \   00000E88   2F48               LDR.N    R0,??Display_57+0x4
   \   00000E8A   ........           BL       sprintf
    798          //			sprintf( (char *)Display_Buff," [%02d] %07ld ",SFLASH_Memory.Driver_Index +1, SFLASH_Memory.Driver[SFLASH_Memory.Driver_Index]);
    799          			GLcd_PutString(0,16,Display_Buff,1);	
   \   00000E8E   0123               MOVS     R3,#+1
   \   00000E90   2D4A               LDR.N    R2,??Display_57+0x4
   \   00000E92   1021               MOVS     R1,#+16
   \   00000E94   0020               MOVS     R0,#+0
   \   00000E96   ........           BL       GLcd_PutString
    800          			DisplayInfo.Mode = DISPMODE_VIEW;	
   \   00000E9A   ........           LDR.W    R0,??DataTable169_11
   \   00000E9E   0121               MOVS     R1,#+1
   \   00000EA0   8171               STRB     R1,[R0, #+6]
    801          			
    802          		}  // end of DISP_MENU2_1
    803          		break;  
   \   00000EA2   00F018BC           B.W      ??Display_56
    804                              
    805          
    806          	case DISP_MENU3_1:
    807          		{
    808          			sprintf( (char *)Display_Buff, "  < 차량  번호 >   ");
   \                     ??Display_35:
   \   00000EA6   ........           LDR.W    R1,??DataTable169_14
   \   00000EAA   2748               LDR.N    R0,??Display_57+0x4
   \   00000EAC   ........           BL       sprintf
    809          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000EB0   0123               MOVS     R3,#+1
   \   00000EB2   254A               LDR.N    R2,??Display_57+0x4
   \   00000EB4   0021               MOVS     R1,#+0
   \   00000EB6   0020               MOVS     R0,#+0
   \   00000EB8   ........           BL       GLcd_PutString
    810          			sprintf( (char *)Display_Buff,"  %s",SFLASH_CarInfo.CarNum);
   \   00000EBC   ........           LDR.W    R2,??DataTable169_15
   \   00000EC0   ........           LDR.W    R1,??DataTable169_13
   \   00000EC4   2048               LDR.N    R0,??Display_57+0x4
   \   00000EC6   ........           BL       sprintf
    811          			GLcd_PutString(0,16,Display_Buff,1);	
   \   00000ECA   0123               MOVS     R3,#+1
   \   00000ECC   1E4A               LDR.N    R2,??Display_57+0x4
   \   00000ECE   1021               MOVS     R1,#+16
   \   00000ED0   0020               MOVS     R0,#+0
   \   00000ED2   ........           BL       GLcd_PutString
    812          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   00000ED6   ........           LDR.W    R0,??DataTable169_11
   \   00000EDA   0221               MOVS     R1,#+2
   \   00000EDC   8171               STRB     R1,[R0, #+6]
    813          			
    814          		}  // end of DISP_MENU3_1
    815          		break;            
   \   00000EDE   00F0FABB           B.W      ??Display_56
    816           
    817          	case DISP_MENU4_0:
    818          		{
    819          			sprintf( (char *)Display_Buff,"  < 암호코드입력 > ");
   \                     ??Display_36:
   \   00000EE2   ........           LDR.W    R1,??DataTable169_16
   \   00000EE6   1848               LDR.N    R0,??Display_57+0x4
   \   00000EE8   ........           BL       sprintf
    820          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000EEC   0123               MOVS     R3,#+1
   \   00000EEE   164A               LDR.N    R2,??Display_57+0x4
   \   00000EF0   0021               MOVS     R1,#+0
   \   00000EF2   0020               MOVS     R0,#+0
   \   00000EF4   ........           BL       GLcd_PutString
    821                         memset(PasswordBuffer,0x20,sizeof(PasswordBuffer));
   \   00000EF8   0522               MOVS     R2,#+5
   \   00000EFA   2021               MOVS     R1,#+32
   \   00000EFC   04A8               ADD      R0,SP,#+16
   \   00000EFE   ........           BL       memset
    822                         PasswordBuffer[4] = 0;
   \   00000F02   0020               MOVS     R0,#+0
   \   00000F04   8DF81400           STRB     R0,[SP, #+20]
    823                         for( i =0  ; i < Pass_Index ; i++)
   \   00000F08   0020               MOVS     R0,#+0
   \   00000F0A   04E0               B.N      ??Display_99
    824                             PasswordBuffer[i] = '*';
   \                     ??Display_100:
   \   00000F0C   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000F0E   04A9               ADD      R1,SP,#+16
   \   00000F10   2A22               MOVS     R2,#+42
   \   00000F12   4254               STRB     R2,[R0, R1]
   \   00000F14   401C               ADDS     R0,R0,#+1
   \                     ??Display_99:
   \   00000F16   ........           LDR.W    R1,??DataTable169_17
   \   00000F1A   0978               LDRB     R1,[R1, #+0]
   \   00000F1C   C0B2               UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000F1E   8842               CMP      R0,R1
   \   00000F20   F4D3               BCC.N    ??Display_100
    825          			sprintf( (char *)Display_Buff,"      [ %4s ]  ",PasswordBuffer);
   \   00000F22   04AA               ADD      R2,SP,#+16
   \   00000F24   ........           LDR.W    R1,??DataTable169_18
   \   00000F28   0748               LDR.N    R0,??Display_57+0x4
   \   00000F2A   ........           BL       sprintf
    826          			GLcd_PutString(0,16,Display_Buff,1);	
   \   00000F2E   0123               MOVS     R3,#+1
   \   00000F30   054A               LDR.N    R2,??Display_57+0x4
   \   00000F32   1021               MOVS     R1,#+16
   \   00000F34   0020               MOVS     R0,#+0
   \   00000F36   ........           BL       GLcd_PutString
    827          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   00000F3A   ........           LDR.W    R0,??DataTable169_11
   \   00000F3E   0221               MOVS     R1,#+2
   \   00000F40   8171               STRB     R1,[R0, #+6]
    828          			
    829          		}  // end of DISP_MENU4_1
    830          		break;
   \   00000F42   C8E3               B.N      ??Display_56
   \                     ??Display_57:
   \   00000F44   ........           DC32     `?<Constant " COMMNUNICATION MODE  ">`
   \   00000F48   ........           DC32     Display_Buff
   \   00000F4C   ........           DC32     `?<Constant "  CONNECT USE CABLE   ">`
   \   00000F50   ........           DC32     LCD_WaitString
   \   00000F54   ........           DC32     Wait_y
   \   00000F58   ........           DC32     Wait_x
   \   00000F5C   ........           DC32     `?<Constant "   - TEAHO TECH -   ">`
    831          	case DISP_MENU4_1:
    832          		{
    833                         
    834          			sprintf( (char *)Display_Buff,"  < 운전자  변경 >    ");
   \                     ??Display_37:
   \   00000F60   ........           LDR.W    R1,??DataTable169_19
   \   00000F64   ........           LDR.W    R0,??DataTable169_20
   \   00000F68   ........           BL       sprintf
    835          			GLcd_PutString(0,0,Display_Buff,1);
   \   00000F6C   0123               MOVS     R3,#+1
   \   00000F6E   ........           LDR.W    R2,??DataTable169_20
   \   00000F72   0021               MOVS     R1,#+0
   \   00000F74   0020               MOVS     R0,#+0
   \   00000F76   ........           BL       GLcd_PutString
    836                         if( Input_Mode == 0 )                    
   \   00000F7A   4248               LDR.N    R0,??Display_60+0x9C
   \   00000F7C   0078               LDRB     R0,[R0, #+0]
   \   00000F7E   0028               CMP      R0,#+0
   \   00000F80   1BD1               BNE.N    ??Display_101
    837                         {
    838                              if( Info.Driver_Index == NO_DRIVER)
   \   00000F82   1C48               LDR.N    R0,??Display_60+0xC
   \   00000F84   0078               LDRB     R0,[R0, #+0]
   \   00000F86   FF28               CMP      R0,#+255
   \   00000F88   06D1               BNE.N    ??Display_102
    839                                   sprintf( (char *)Display_Buff,"- 운전자가선택안됨 ");
   \   00000F8A   ........           LDR.W    R1,??DataTable169_21
   \   00000F8E   ........           LDR.W    R0,??DataTable169_20
   \   00000F92   ........           BL       sprintf
   \   00000F96   91E0               B.N      ??Display_103
    840                              else
    841                                   sprintf( (char *)Display_Buff,"%d-%018s",Info.Driver_Index,SFLASH_Memory.Driver[Info.Driver_Index]);                    
   \                     ??Display_102:
   \   00000F98   1648               LDR.N    R0,??Display_60+0xC
   \   00000F9A   0078               LDRB     R0,[R0, #+0]
   \   00000F9C   1321               MOVS     R1,#+19
   \   00000F9E   DFF84027           LDR.W    R2,??Display_78+0x4
   \   00000FA2   01FB0020           MLA      R0,R1,R0,R2
   \   00000FA6   431C               ADDS     R3,R0,#+1
   \   00000FA8   1248               LDR.N    R0,??Display_60+0xC
   \   00000FAA   0278               LDRB     R2,[R0, #+0]
   \   00000FAC   ........           LDR.W    R1,??DataTable169_22
   \   00000FB0   ........           LDR.W    R0,??DataTable169_20
   \   00000FB4   ........           BL       sprintf
   \   00000FB8   80E0               B.N      ??Display_103
    842                              
    843                         }else if( Input_Mode == 1 )
   \                     ??Display_101:
   \   00000FBA   3248               LDR.N    R0,??Display_60+0x9C
   \   00000FBC   0078               LDRB     R0,[R0, #+0]
   \   00000FBE   0128               CMP      R0,#+1
   \   00000FC0   6CD1               BNE.N    ??Display_104
    844          			{
    845                              sprintf( (char *)Display_Buff,"%d-%018s",Input_Index_1,SFLASH_Memory.Driver[Input_Index_1]);                    
   \   00000FC2   ........           LDR.W    R0,??DataTable169_3
   \   00000FC6   0078               LDRB     R0,[R0, #+0]
   \   00000FC8   1321               MOVS     R1,#+19
   \   00000FCA   DFF81427           LDR.W    R2,??Display_78+0x4
   \   00000FCE   01FB0020           MLA      R0,R1,R0,R2
   \   00000FD2   431C               ADDS     R3,R0,#+1
   \   00000FD4   ........           LDR.W    R0,??DataTable169_3
   \   00000FD8   0278               LDRB     R2,[R0, #+0]
   \   00000FDA   ........           LDR.W    R1,??DataTable169_22
   \   00000FDE   ........           LDR.W    R0,??DataTable169_20
   \   00000FE2   ........           BL       sprintf
   \   00000FE6   69E0               B.N      ??Display_103
   \                     ??Display_60:
   \   00000FE8   ........           DC32     `?<Constant " EMS_SYSTEM V000033 ">`
   \   00000FEC   ........           DC32     SYSTEM_TIME
   \   00000FF0   ........           DC32     `?<Constant "%02d/%02d/%02d %02d:%...">`
   \   00000FF4   ........           DC32     Info
   \   00000FF8   ........           DC32     Flag
   \   00000FFC   ........           DC32     `?<Constant "%4d RPM %3d km %c%02d">`
   \   00001000   ........           DC32     `?<Constant "  < \\300\\317\\300\\317\\277\\356\\307\\3`
   \   00001004   ........           DC32     EMS_Drive_Value
   \   00001008   ........           DC32     `?<Constant "      [ %02d:%02d ]  ...">`
   \   0000100C   ........           DC32     `?<Constant "\\300\\317\\301\\326\\307\\340      %05d`
   \   00001010   ........           DC32     `?<Constant "\\303\\321\\301\\326\\307\\340    %07d k`
   \   00001014   ........           DC32     `?<Constant "  < \\277\\356\\300\\374\\300\\332\\304\\3`
   \   00001018   ........           DC32     `?<Constant "  \\277\\356\\300\\374\\300\\332\\274\\261`
   \   0000101C   ........           DC32     Info+0x1
   \   00001020   ........           DC32     `?<Constant "[%018s]">`
   \   00001024   ........           DC32     `?<Constant "  < \\261\\342\\277\\357\\261\\342\\274\\2`
   \   00001028   ........           DC32     TiltInfo
   \   0000102C   ........           DC32     `?<Constant "   [ X=%-2d  Y=%-2d ]  ">`
   \   00001030   ........           DC32     `?<Constant "< \\275\\303\\265\\277\\270\\360\\305\\315`
   \   00001034   ........           DC32     ACC_Drive_Value
   \   00001038   ........           DC32     `?<Constant "     [ %06d ]   ">`
   \   0000103C   40420F00           DC32     0xf4240
   \   00001040   ........           DC32     `?<Constant "GPS-X %03d.%06d">`
   \   00001044   ........           DC32     `?<Constant "GPS-Y %03d.%06d">`
   \   00001048   ........           DC32     `?<Constant "  < \\306\\337\\277\\376\\276\\356\\271\\3`
   \   0000104C   ........           DC32     `?<Constant "120118-01">`
   \   00001050   ........           DC32     `?<Constant "   [ %09s ]   ">`
   \   00001054   ........           DC32     `?<Constant "  < \\307\\374\\275\\304\\275\\302\\300\\3`
   \   00001058   ........           DC32     SFLASH_CarInfo+0x3C
   \   0000105C   ........           DC32     `?<Constant "   [ %010s ]   ">`
   \   00001060   ........           DC32     `?<Constant "  < \\301\\246\\307\\260\\300\\317\\267\\3`
   \   00001064   ........           DC32     SFLASH_CarInfo+0x14
   \   00001068   ........           DC32     `?<Constant " [ %014s ]   ">`
   \   0000106C   ........           DC32     `?<Constant "  < \\273\\347\\277\\353\\300\\332\\270\\3`
   \   00001070   ........           DC32     `?<Constant " 1. \\300\\332\\267\\341\\300\\372\\300\\3`
   \   00001074   ........           DC32     `?<Constant " 2. \\277\\356\\300\\374\\300\\332\\274\\2`
   \   00001078   ........           DC32     `?<Constant " 3. \\302\\367\\267\\256\\271\\370\\310\\2`
   \   0000107C   ........           DC32     `?<Constant "  < \\273\\347\\277\\353\\300\\332\\270\\3_1`
   \   00001080   ........           DC32     `?<Constant " 4. \\310\\257\\260\\346\\274\\263\\301\\2`
   \   00001084   ........           DC32     Input_Mode
   \   00001088   ........           DC32     `?<Constant " 5. \\306\\337\\277\\376\\276\\356\\276\\3`
   \   0000108C   ........           DC32     `?<Constant "[OK]\\271\\366\\306\\260\\300\\273\\264\\2`
   \   00001090   ........           DC32     `?<Constant "\\276\\367\\265\\245\\300\\314\\306\\256\\2`
   \   00001094   ........           DC32     `?<Constant " 6. \\273\\347\\277\\356\\265\\345\\276\\3`
   \   00001098   ........           DC32     `?<Constant "- \\300\\372\\300\\345\\277\\317\\267\\341`
    846          			}
    847          			else if(Input_Mode == 2)
   \                     ??Display_104:
   \   0000109C   ........           LDR.W    R0,??DataTable169_23
   \   000010A0   0078               LDRB     R0,[R0, #+0]
   \   000010A2   0228               CMP      R0,#+2
   \   000010A4   0AD1               BNE.N    ??Display_103
    848          			{ 
    849                              sprintf( (char *)Display_Buff,"%d-%018s",Input_Index_1,Input_Word);                      
   \   000010A6   ........           LDR.W    R3,??DataTable169_24
   \   000010AA   ........           LDR.W    R0,??DataTable169_3
   \   000010AE   0278               LDRB     R2,[R0, #+0]
   \   000010B0   ........           LDR.W    R1,??DataTable169_22
   \   000010B4   ........           LDR.W    R0,??DataTable169_20
   \   000010B8   ........           BL       sprintf
    850          			}
    851          			GLcd_PutString(0,16,Display_Buff,1);
   \                     ??Display_103:
   \   000010BC   0123               MOVS     R3,#+1
   \   000010BE   ........           LDR.W    R2,??DataTable169_20
   \   000010C2   1021               MOVS     R1,#+16
   \   000010C4   0020               MOVS     R0,#+0
   \   000010C6   ........           BL       GLcd_PutString
    852          			DisplayInfo.Mode = DISPMODE_MENU;
   \   000010CA   ........           LDR.W    R0,??DataTable169_11
   \   000010CE   0221               MOVS     R1,#+2
   \   000010D0   8171               STRB     R1,[R0, #+6]
    853          		}  // end of DISP_MENU4_2
    854          		break;
   \   000010D2   00E3               B.N      ??Display_56
    855          	case DISP_MENU4_2:
    856          		{
    857          			sprintf( (char *)Display_Buff,"  < 버스차량변경 > ");
   \                     ??Display_38:
   \   000010D4   ........           LDR.W    R1,??DataTable169_25
   \   000010D8   ........           LDR.W    R0,??DataTable169_20
   \   000010DC   ........           BL       sprintf
    858          			GLcd_PutString(0,0,Display_Buff,1);             
   \   000010E0   0123               MOVS     R3,#+1
   \   000010E2   ........           LDR.W    R2,??DataTable169_20
   \   000010E6   0021               MOVS     R1,#+0
   \   000010E8   0020               MOVS     R0,#+0
   \   000010EA   ........           BL       GLcd_PutString
    859          
    860                         if( SFLASH_Memory.Car_Maker == 1 )
   \   000010EE   DFF8F005           LDR.W    R0,??Display_78+0x4
   \   000010F2   0078               LDRB     R0,[R0, #+0]
   \   000010F4   0128               CMP      R0,#+1
   \   000010F6   05D1               BNE.N    ??Display_105
    861                              sprintf( (char *)Display_Buff,"  현대2006-1     ");
   \   000010F8   ........           LDR.W    R1,??DataTable169_26
   \   000010FC   ........           LDR.W    R0,??DataTable169_20
   \   00001100   ........           BL       sprintf
    862                         if( SFLASH_Memory.Car_Maker == 2 )
   \                     ??Display_105:
   \   00001104   DFF8D805           LDR.W    R0,??Display_78+0x4
   \   00001108   0078               LDRB     R0,[R0, #+0]
   \   0000110A   0228               CMP      R0,#+2
   \   0000110C   05D1               BNE.N    ??Display_106
    863                              sprintf( (char *)Display_Buff,"  현대2007-2      ");
   \   0000110E   ........           LDR.W    R1,??DataTable169_27
   \   00001112   ........           LDR.W    R0,??DataTable169_20
   \   00001116   ........           BL       sprintf
    864                         if( SFLASH_Memory.Car_Maker == 3 )
   \                     ??Display_106:
   \   0000111A   DFF8C405           LDR.W    R0,??Display_78+0x4
   \   0000111E   0078               LDRB     R0,[R0, #+0]
   \   00001120   0328               CMP      R0,#+3
   \   00001122   05D1               BNE.N    ??Display_107
    865                              sprintf( (char *)Display_Buff,"  현대2011-3     ");
   \   00001124   ........           LDR.W    R1,??DataTable169_28
   \   00001128   ........           LDR.W    R0,??DataTable169_20
   \   0000112C   ........           BL       sprintf
    866                         if( SFLASH_Memory.Car_Maker == 4 )
   \                     ??Display_107:
   \   00001130   DFF8AC05           LDR.W    R0,??Display_78+0x4
   \   00001134   0078               LDRB     R0,[R0, #+0]
   \   00001136   0428               CMP      R0,#+4
   \   00001138   05D1               BNE.N    ??Display_108
    867                              sprintf( (char *)Display_Buff,"  형대2011저상-4   ");
   \   0000113A   ........           LDR.W    R1,??DataTable169_29
   \   0000113E   ........           LDR.W    R0,??DataTable169_20
   \   00001142   ........           BL       sprintf
    868                         if( SFLASH_Memory.Car_Maker == 5 )
   \                     ??Display_108:
   \   00001146   DFF89805           LDR.W    R0,??Display_78+0x4
   \   0000114A   0078               LDRB     R0,[R0, #+0]
   \   0000114C   0528               CMP      R0,#+5
   \   0000114E   05D1               BNE.N    ??Display_109
    869                              sprintf( (char *)Display_Buff,"  현대구형저상-5  ");
   \   00001150   ........           LDR.W    R1,??DataTable169_30
   \   00001154   ........           LDR.W    R0,??DataTable169_20
   \   00001158   ........           BL       sprintf
    870                         if( SFLASH_Memory.Car_Maker == 6 )
   \                     ??Display_109:
   \   0000115C   DFF88005           LDR.W    R0,??Display_78+0x4
   \   00001160   0078               LDRB     R0,[R0, #+0]
   \   00001162   0628               CMP      R0,#+6
   \   00001164   05D1               BNE.N    ??Display_110
    871                              sprintf( (char *)Display_Buff,"  현대신형-6       ");
   \   00001166   ........           LDR.W    R1,??DataTable169_31
   \   0000116A   ........           LDR.W    R0,??DataTable169_20
   \   0000116E   ........           BL       sprintf
    872                         if( SFLASH_Memory.Car_Maker == 7 ) 
   \                     ??Display_110:
   \   00001172   DFF86C05           LDR.W    R0,??Display_78+0x4
   \   00001176   0078               LDRB     R0,[R0, #+0]
   \   00001178   0728               CMP      R0,#+7
   \   0000117A   05D1               BNE.N    ??Display_111
    873                              sprintf( (char *)Display_Buff,"  현대신형저상-7   ");
   \   0000117C   ........           LDR.W    R1,??DataTable169_32
   \   00001180   ........           LDR.W    R0,??DataTable169_20
   \   00001184   ........           BL       sprintf
    874                         if( SFLASH_Memory.Car_Maker == 8 )
   \                     ??Display_111:
   \   00001188   DFF85405           LDR.W    R0,??Display_78+0x4
   \   0000118C   0078               LDRB     R0,[R0, #+0]
   \   0000118E   0828               CMP      R0,#+8
   \   00001190   05D1               BNE.N    ??Display_112
    875                              sprintf( (char *)Display_Buff,"  대우구형-8       ");
   \   00001192   ........           LDR.W    R1,??DataTable169_33
   \   00001196   ........           LDR.W    R0,??DataTable169_20
   \   0000119A   ........           BL       sprintf
    876                         if( SFLASH_Memory.Car_Maker == 9 )
   \                     ??Display_112:
   \   0000119E   DFF84005           LDR.W    R0,??Display_78+0x4
   \   000011A2   0078               LDRB     R0,[R0, #+0]
   \   000011A4   0928               CMP      R0,#+9
   \   000011A6   05D1               BNE.N    ??Display_113
    877                              sprintf( (char *)Display_Buff,"  대우구형저상-9   ");
   \   000011A8   ........           LDR.W    R1,??DataTable169_34
   \   000011AC   ........           LDR.W    R0,??DataTable169_20
   \   000011B0   ........           BL       sprintf
    878                         if( SFLASH_Memory.Car_Maker == 10 )
   \                     ??Display_113:
   \   000011B4   DFF82805           LDR.W    R0,??Display_78+0x4
   \   000011B8   0078               LDRB     R0,[R0, #+0]
   \   000011BA   0A28               CMP      R0,#+10
   \   000011BC   05D1               BNE.N    ??Display_114
    879                              sprintf( (char *)Display_Buff,"  대우신형-10      ");
   \   000011BE   ........           LDR.W    R1,??DataTable169_35
   \   000011C2   ........           LDR.W    R0,??DataTable169_20
   \   000011C6   ........           BL       sprintf
    880                         if( SFLASH_Memory.Car_Maker == 11 )
   \                     ??Display_114:
   \   000011CA   DFF81405           LDR.W    R0,??Display_78+0x4
   \   000011CE   0078               LDRB     R0,[R0, #+0]
   \   000011D0   0B28               CMP      R0,#+11
   \   000011D2   05D1               BNE.N    ??Display_115
    881                              sprintf( (char *)Display_Buff,"  대우신형초저상-11  ");
   \   000011D4   ........           LDR.W    R1,??DataTable169_36
   \   000011D8   ........           LDR.W    R0,??DataTable169_20
   \   000011DC   ........           BL       sprintf
    882                         if( SFLASH_Memory.Car_Maker == 12 )
   \                     ??Display_115:
   \   000011E0   DFF8FC04           LDR.W    R0,??Display_78+0x4
   \   000011E4   0078               LDRB     R0,[R0, #+0]
   \   000011E6   0C28               CMP      R0,#+12
   \   000011E8   05D1               BNE.N    ??Display_116
    883                              sprintf( (char *)Display_Buff,"  글로벌시티-12    ");
   \   000011EA   ........           LDR.W    R1,??DataTable169_37
   \   000011EE   ........           LDR.W    R0,??DataTable169_20
   \   000011F2   ........           BL       sprintf
    884                         if( SFLASH_Memory.Car_Maker == 13 )
   \                     ??Display_116:
   \   000011F6   DFF8E804           LDR.W    R0,??Display_78+0x4
   \   000011FA   0078               LDRB     R0,[R0, #+0]
   \   000011FC   0D28               CMP      R0,#+13
   \   000011FE   05D1               BNE.N    ??Display_117
    885                              sprintf( (char *)Display_Buff,"  카운티구형-13    ");
   \   00001200   ........           LDR.W    R1,??DataTable169_38
   \   00001204   ........           LDR.W    R0,??DataTable169_20
   \   00001208   ........           BL       sprintf
    886                         if( SFLASH_Memory.Car_Maker == 14 )
   \                     ??Display_117:
   \   0000120C   DFF8D004           LDR.W    R0,??Display_78+0x4
   \   00001210   0078               LDRB     R0,[R0, #+0]
   \   00001212   0E28               CMP      R0,#+14
   \   00001214   05D1               BNE.N    ??Display_118
    887                              sprintf( (char *)Display_Buff,"  카운티신형-14      ");
   \   00001216   ........           LDR.W    R1,??DataTable169_39
   \   0000121A   ........           LDR.W    R0,??DataTable169_20
   \   0000121E   ........           BL       sprintf
    888          			GLcd_PutString(0,16,Display_Buff,1);	
   \                     ??Display_118:
   \   00001222   0123               MOVS     R3,#+1
   \   00001224   ........           LDR.W    R2,??DataTable169_20
   \   00001228   1021               MOVS     R1,#+16
   \   0000122A   0020               MOVS     R0,#+0
   \   0000122C   ........           BL       GLcd_PutString
    889          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   00001230   ........           LDR.W    R0,??DataTable169_11
   \   00001234   0221               MOVS     R1,#+2
   \   00001236   8171               STRB     R1,[R0, #+6]
    890          			
    891          		}  // end of DISP_MENU4_3
    892          		break;          
   \   00001238   4DE2               B.N      ??Display_56
    893          	case DISP_MENU4_3:
    894          		{
    895          			sprintf( (char *)Display_Buff,"  < 속도상수변경 > ");
   \                     ??Display_39:
   \   0000123A   ........           LDR.W    R1,??DataTable169_40
   \   0000123E   ........           LDR.W    R0,??DataTable169_20
   \   00001242   ........           BL       sprintf
    896          			GLcd_PutString(0,0,Display_Buff,1);
   \   00001246   0123               MOVS     R3,#+1
   \   00001248   ........           LDR.W    R2,??DataTable169_20
   \   0000124C   0021               MOVS     R1,#+0
   \   0000124E   0020               MOVS     R0,#+0
   \   00001250   ........           BL       GLcd_PutString
    897          			if( Input_Mode == 0 )
   \   00001254   ........           LDR.W    R0,??DataTable169_23
   \   00001258   0078               LDRB     R0,[R0, #+0]
   \   0000125A   0028               CMP      R0,#+0
   \   0000125C   09D1               BNE.N    ??Display_119
    898          			{
    899          				sprintf( (char *)Display_Buff, "      [%06d]     ", SFLASH_Memory.SPEED_Adjust);
   \   0000125E   DFF88004           LDR.W    R0,??Display_78+0x4
   \   00001262   426E               LDR      R2,[R0, #+100]
   \   00001264   ........           LDR.W    R1,??DataTable169_41
   \   00001268   ........           LDR.W    R0,??DataTable169_20
   \   0000126C   ........           BL       sprintf
   \   00001270   07E0               B.N      ??Display_120
    900          			}
    901          			else
    902          			{
    903          				sprintf( (char *)Display_Buff, "      [%06s]    ", Input_Word);	
   \                     ??Display_119:
   \   00001272   ........           LDR.W    R2,??DataTable169_24
   \   00001276   ........           LDR.W    R1,??DataTable169_42
   \   0000127A   ........           LDR.W    R0,??DataTable169_20
   \   0000127E   ........           BL       sprintf
    904          			}
    905          			GLcd_PutString(0,16,Display_Buff,1);	
   \                     ??Display_120:
   \   00001282   0123               MOVS     R3,#+1
   \   00001284   ........           LDR.W    R2,??DataTable169_20
   \   00001288   1021               MOVS     R1,#+16
   \   0000128A   0020               MOVS     R0,#+0
   \   0000128C   ........           BL       GLcd_PutString
    906          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   00001290   ........           LDR.W    R0,??DataTable169_11
   \   00001294   0221               MOVS     R1,#+2
   \   00001296   8171               STRB     R1,[R0, #+6]
    907          			
    908          		}  // end of DISP_MENU4_3
    909          		break;
   \   00001298   1DE2               B.N      ??Display_56
    910          	case DISP_MENU4_4:
    911          		{
    912          			sprintf( (char *)Display_Buff,"  < RPM 상수변경 > ");
   \                     ??Display_40:
   \   0000129A   ........           LDR.W    R1,??DataTable169_43
   \   0000129E   ........           LDR.W    R0,??DataTable169_20
   \   000012A2   ........           BL       sprintf
    913          			GLcd_PutString(0,0,Display_Buff,1);
   \   000012A6   0123               MOVS     R3,#+1
   \   000012A8   ........           LDR.W    R2,??DataTable169_20
   \   000012AC   0021               MOVS     R1,#+0
   \   000012AE   0020               MOVS     R0,#+0
   \   000012B0   ........           BL       GLcd_PutString
    914          			if( Input_Mode == 0  )
   \   000012B4   ........           LDR.W    R0,??DataTable169_23
   \   000012B8   0078               LDRB     R0,[R0, #+0]
   \   000012BA   0028               CMP      R0,#+0
   \   000012BC   09D1               BNE.N    ??Display_121
    915          			{
    916          				sprintf( (char *)Display_Buff,  "      [%06d]     ",SFLASH_Memory.RPM_Adjust );
   \   000012BE   DFF82004           LDR.W    R0,??Display_78+0x4
   \   000012C2   026E               LDR      R2,[R0, #+96]
   \   000012C4   ........           LDR.W    R1,??DataTable169_41
   \   000012C8   ........           LDR.W    R0,??DataTable169_20
   \   000012CC   ........           BL       sprintf
   \   000012D0   07E0               B.N      ??Display_122
    917                         }
    918          			else
    919          			{
    920          				sprintf( (char *)Display_Buff,  "      [%06s]     ",Input_Word);	
   \                     ??Display_121:
   \   000012D2   ........           LDR.W    R2,??DataTable169_24
   \   000012D6   ........           LDR.W    R1,??DataTable169_44
   \   000012DA   ........           LDR.W    R0,??DataTable169_20
   \   000012DE   ........           BL       sprintf
    921          			}                
    922          			GLcd_PutString(0,16,Display_Buff,1);	
   \                     ??Display_122:
   \   000012E2   0123               MOVS     R3,#+1
   \   000012E4   ........           LDR.W    R2,??DataTable169_20
   \   000012E8   1021               MOVS     R1,#+16
   \   000012EA   0020               MOVS     R0,#+0
   \   000012EC   ........           BL       GLcd_PutString
    923          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   000012F0   ........           LDR.W    R0,??DataTable169_11
   \   000012F4   0221               MOVS     R1,#+2
   \   000012F6   8171               STRB     R1,[R0, #+6]
    924          			
    925          		}  // end of DISP_MENU4_4
    926          		break;
   \   000012F8   EDE1               B.N      ??Display_56
    927          	case DISP_MENU4_5:
    928          		{
    929          			sprintf( (char *)Display_Buff,"  < 속도기준전압 > ");       // 50 = 5.0V
   \                     ??Display_41:
   \   000012FA   ........           LDR.W    R1,??DataTable169_45
   \   000012FE   ........           LDR.W    R0,??DataTable169_20
   \   00001302   ........           BL       sprintf
    930          			GLcd_PutString(0,0,Display_Buff,1);
   \   00001306   0123               MOVS     R3,#+1
   \   00001308   ........           LDR.W    R2,??DataTable169_20
   \   0000130C   0021               MOVS     R1,#+0
   \   0000130E   0020               MOVS     R0,#+0
   \   00001310   ........           BL       GLcd_PutString
    931          			sprintf( (char *)Display_Buff,"    [ %4.1f V ]     ",(float)SFLASH_Memory.SPEED_Reference/10.0);
   \   00001314   DFF8C803           LDR.W    R0,??Display_78+0x4
   \   00001318   B0F86C00           LDRH     R0,[R0, #+108]
   \   0000131C   ........           BL       __aeabi_ui2f
   \   00001320   ........           BL       __aeabi_f2d
   \   00001324   0022               MOVS     R2,#+0
   \   00001326   ........           LDR.W    R3,??DataTable169_46  ;; 0x40240000
   \   0000132A   ........           BL       __aeabi_ddiv
   \   0000132E   0200               MOVS     R2,R0
   \   00001330   0B00               MOVS     R3,R1
   \   00001332   ........           LDR.W    R1,??DataTable169_47
   \   00001336   ........           LDR.W    R0,??DataTable169_20
   \   0000133A   ........           BL       sprintf
    932          			GLcd_PutString(0,16,Display_Buff,1);	
   \   0000133E   0123               MOVS     R3,#+1
   \   00001340   ........           LDR.W    R2,??DataTable169_20
   \   00001344   1021               MOVS     R1,#+16
   \   00001346   0020               MOVS     R0,#+0
   \   00001348   ........           BL       GLcd_PutString
    933          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   0000134C   ........           LDR.W    R0,??DataTable169_11
   \   00001350   0221               MOVS     R1,#+2
   \   00001352   8171               STRB     R1,[R0, #+6]
    934          			
    935          		}  // end of DISP_MENU4_5
    936          		break;
   \   00001354   BFE1               B.N      ??Display_56
    937          	case DISP_MENU4_6:
    938          		{
    939          			sprintf( (char *)Display_Buff,"  < RPM 기준전압 >    ");       // 
   \                     ??Display_42:
   \   00001356   ........           LDR.W    R1,??DataTable169_48
   \   0000135A   ........           LDR.W    R0,??DataTable169_20
   \   0000135E   ........           BL       sprintf
    940          			GLcd_PutString(0,0,Display_Buff,1);
   \   00001362   0123               MOVS     R3,#+1
   \   00001364   ........           LDR.W    R2,??DataTable169_20
   \   00001368   0021               MOVS     R1,#+0
   \   0000136A   0020               MOVS     R0,#+0
   \   0000136C   ........           BL       GLcd_PutString
    941          			sprintf( (char *)Display_Buff,"    [ %4.1f V ]     ",(float)SFLASH_Memory.RPM_Reference/10.0);
   \   00001370   DFF86C03           LDR.W    R0,??Display_78+0x4
   \   00001374   B0F86E00           LDRH     R0,[R0, #+110]
   \   00001378   ........           BL       __aeabi_ui2f
   \   0000137C   ........           BL       __aeabi_f2d
   \   00001380   0022               MOVS     R2,#+0
   \   00001382   ........           LDR.W    R3,??DataTable169_46  ;; 0x40240000
   \   00001386   ........           BL       __aeabi_ddiv
   \   0000138A   0200               MOVS     R2,R0
   \   0000138C   0B00               MOVS     R3,R1
   \   0000138E   ........           LDR.W    R1,??DataTable169_47
   \   00001392   ........           LDR.W    R0,??DataTable169_20
   \   00001396   ........           BL       sprintf
    942          			GLcd_PutString(0,16,Display_Buff,1);	
   \   0000139A   0123               MOVS     R3,#+1
   \   0000139C   ........           LDR.W    R2,??DataTable169_20
   \   000013A0   1021               MOVS     R1,#+16
   \   000013A2   0020               MOVS     R0,#+0
   \   000013A4   ........           BL       GLcd_PutString
    943          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   000013A8   ........           LDR.W    R0,??DataTable169_11
   \   000013AC   0221               MOVS     R1,#+2
   \   000013AE   8171               STRB     R1,[R0, #+6]
    944          			
    945          		}  // end of DISP_MENU4_6
    946          		break;
   \   000013B0   91E1               B.N      ??Display_56
    947          	case DISP_MENU4_7:       // 에어압 전압
    948          		{              
    949          			sprintf( (char *)Display_Buff,"  < 에어압  전압 >   ");
   \                     ??Display_43:
   \   000013B2   ........           LDR.W    R1,??DataTable169_49
   \   000013B6   ........           LDR.W    R0,??DataTable169_20
   \   000013BA   ........           BL       sprintf
    950          			GLcd_PutString(0,0,Display_Buff,1);
   \   000013BE   0123               MOVS     R3,#+1
   \   000013C0   ........           LDR.W    R2,??DataTable169_20
   \   000013C4   0021               MOVS     R1,#+0
   \   000013C6   0020               MOVS     R0,#+0
   \   000013C8   ........           BL       GLcd_PutString
    951          			sprintf( (char *)Display_Buff,"    [ %4.1f V ]     ", (float) SFLASH_Memory.EMS.Air_Volt / 1000.0);
   \   000013CC   DFF81003           LDR.W    R0,??Display_78+0x4
   \   000013D0   B0F88F00           LDRH     R0,[R0, #+143]
   \   000013D4   ........           BL       __aeabi_ui2f
   \   000013D8   ........           BL       __aeabi_f2d
   \   000013DC   0022               MOVS     R2,#+0
   \   000013DE   ........           LDR.W    R3,??DataTable169_50  ;; 0x408f4000
   \   000013E2   ........           BL       __aeabi_ddiv
   \   000013E6   0200               MOVS     R2,R0
   \   000013E8   0B00               MOVS     R3,R1
   \   000013EA   ........           LDR.W    R1,??DataTable169_47
   \   000013EE   ........           LDR.W    R0,??DataTable169_20
   \   000013F2   ........           BL       sprintf
    952          			GLcd_PutString(0,16,Display_Buff,1);	
   \   000013F6   0123               MOVS     R3,#+1
   \   000013F8   ........           LDR.W    R2,??DataTable169_20
   \   000013FC   1021               MOVS     R1,#+16
   \   000013FE   0020               MOVS     R0,#+0
   \   00001400   ........           BL       GLcd_PutString
    953          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   00001404   ........           LDR.W    R0,??DataTable169_11
   \   00001408   0221               MOVS     R1,#+2
   \   0000140A   8171               STRB     R1,[R0, #+6]
    954          			
    955          		}  // end of DISP_MENU4_7
    956          		break;
   \   0000140C   63E1               B.N      ??Display_56
    957          	case DISP_MENU4_8:
    958          		{
    959          			sprintf( (char *)Display_Buff,"  < 냉각수  온도 >     ");
   \                     ??Display_44:
   \   0000140E   ........           LDR.W    R1,??DataTable169_51
   \   00001412   ........           LDR.W    R0,??DataTable169_20
   \   00001416   ........           BL       sprintf
    960          			GLcd_PutString(0,0,Display_Buff,1);
   \   0000141A   0123               MOVS     R3,#+1
   \   0000141C   ........           LDR.W    R2,??DataTable169_20
   \   00001420   0021               MOVS     R1,#+0
   \   00001422   0020               MOVS     R0,#+0
   \   00001424   ........           BL       GLcd_PutString
    961          			sprintf( (char *)Display_Buff,"    [ %4.1f V ]     ", (float) SFLASH_Memory.EMS.ColdWaterTemp_Volt / 1000.0);
   \   00001428   AD48               LDR.N    R0,??Display_78+0x4
   \   0000142A   B0F88D00           LDRH     R0,[R0, #+141]
   \   0000142E   ........           BL       __aeabi_ui2f
   \   00001432   ........           BL       __aeabi_f2d
   \   00001436   0022               MOVS     R2,#+0
   \   00001438   ........           LDR.W    R3,??DataTable169_50  ;; 0x408f4000
   \   0000143C   ........           BL       __aeabi_ddiv
   \   00001440   0200               MOVS     R2,R0
   \   00001442   0B00               MOVS     R3,R1
   \   00001444   ........           LDR.W    R1,??DataTable169_47
   \   00001448   ....               LDR.N    R0,??DataTable169_20
   \   0000144A   ........           BL       sprintf
    962          			GLcd_PutString(0,16,Display_Buff,1);	
   \   0000144E   0123               MOVS     R3,#+1
   \   00001450   ....               LDR.N    R2,??DataTable169_20
   \   00001452   1021               MOVS     R1,#+16
   \   00001454   0020               MOVS     R0,#+0
   \   00001456   ........           BL       GLcd_PutString
    963          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   0000145A   ....               LDR.N    R0,??DataTable169_11
   \   0000145C   0221               MOVS     R1,#+2
   \   0000145E   8171               STRB     R1,[R0, #+6]
    964          			
    965          		}  // end of DISP_MENU4_8
    966          		break;
   \   00001460   39E1               B.N      ??Display_56
    967          	case DISP_MENU4_9:
    968          		{
    969          			sprintf( (char *)Display_Buff,"  < 과속  기준 >      ");
   \                     ??Display_45:
   \   00001462   ........           LDR.W    R1,??DataTable169_52
   \   00001466   ....               LDR.N    R0,??DataTable169_20
   \   00001468   ........           BL       sprintf
    970          			GLcd_PutString(0,0,Display_Buff,1);
   \   0000146C   0123               MOVS     R3,#+1
   \   0000146E   ....               LDR.N    R2,??DataTable169_20
   \   00001470   0021               MOVS     R1,#+0
   \   00001472   0020               MOVS     R0,#+0
   \   00001474   ........           BL       GLcd_PutString
    971          			sprintf( (char *)Display_Buff,"     [ %03d km ]     ",SFLASH_Memory.FastOverSpeed);
   \   00001478   9948               LDR.N    R0,??Display_78+0x4
   \   0000147A   B0F89620           LDRH     R2,[R0, #+150]
   \   0000147E   ........           LDR.W    R1,??DataTable169_53
   \   00001482   ....               LDR.N    R0,??DataTable169_20
   \   00001484   ........           BL       sprintf
    972          			GLcd_PutString(0,16,Display_Buff,1);	
   \   00001488   0123               MOVS     R3,#+1
   \   0000148A   ....               LDR.N    R2,??DataTable169_20
   \   0000148C   1021               MOVS     R1,#+16
   \   0000148E   0020               MOVS     R0,#+0
   \   00001490   ........           BL       GLcd_PutString
    973          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   00001494   ....               LDR.N    R0,??DataTable169_11
   \   00001496   0221               MOVS     R1,#+2
   \   00001498   8171               STRB     R1,[R0, #+6]
    974          			
    975          		}  // end of DISP_MENU4_9
    976          		break;
   \   0000149A   1CE1               B.N      ??Display_56
    977          	case DISP_MENU4_10:
    978          		{
    979          			sprintf( (char *)Display_Buff,"  < 급정지기준 >      ");
   \                     ??Display_46:
   \   0000149C   ........           LDR.W    R1,??DataTable169_54
   \   000014A0   ....               LDR.N    R0,??DataTable169_20
   \   000014A2   ........           BL       sprintf
    980          			GLcd_PutString(0,0,Display_Buff,1);
   \   000014A6   0123               MOVS     R3,#+1
   \   000014A8   ....               LDR.N    R2,??DataTable169_20
   \   000014AA   0021               MOVS     R1,#+0
   \   000014AC   0020               MOVS     R0,#+0
   \   000014AE   ........           BL       GLcd_PutString
    981          			sprintf( (char *)Display_Buff,"     [ %03d km ]     ",SFLASH_Memory.QuickStop);
   \   000014B2   8B48               LDR.N    R0,??Display_78+0x4
   \   000014B4   B0F89A20           LDRH     R2,[R0, #+154]
   \   000014B8   ....               LDR.N    R1,??DataTable169_53
   \   000014BA   ....               LDR.N    R0,??DataTable169_20
   \   000014BC   ........           BL       sprintf
    982          			GLcd_PutString(0,16,Display_Buff,1);	
   \   000014C0   0123               MOVS     R3,#+1
   \   000014C2   ....               LDR.N    R2,??DataTable169_20
   \   000014C4   1021               MOVS     R1,#+16
   \   000014C6   0020               MOVS     R0,#+0
   \   000014C8   ........           BL       GLcd_PutString
    983          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   000014CC   ....               LDR.N    R0,??DataTable169_11
   \   000014CE   0221               MOVS     R1,#+2
   \   000014D0   8171               STRB     R1,[R0, #+6]
    984          			
    985          		}  // end of DISP_MENU4_10
    986          		break;
   \   000014D2   00E1               B.N      ??Display_56
    987          	case DISP_MENU4_11:
    988          		{
    989          			sprintf( (char *)Display_Buff, "  < 급가속기준 >      ");
   \                     ??Display_47:
   \   000014D4   ....               LDR.N    R1,??DataTable169_55
   \   000014D6   ....               LDR.N    R0,??DataTable169_20
   \   000014D8   ........           BL       sprintf
    990          			GLcd_PutString(0,0,Display_Buff,1);
   \   000014DC   0123               MOVS     R3,#+1
   \   000014DE   ....               LDR.N    R2,??DataTable169_20
   \   000014E0   0021               MOVS     R1,#+0
   \   000014E2   0020               MOVS     R0,#+0
   \   000014E4   ........           BL       GLcd_PutString
    991          			sprintf( (char *)Display_Buff,"     [ %03d km ]     ",SFLASH_Memory.QuickStart);
   \   000014E8   7D48               LDR.N    R0,??Display_78+0x4
   \   000014EA   B0F89C20           LDRH     R2,[R0, #+156]
   \   000014EE   ....               LDR.N    R1,??DataTable169_53
   \   000014F0   ....               LDR.N    R0,??DataTable169_20
   \   000014F2   ........           BL       sprintf
    992          			GLcd_PutString(0,16,Display_Buff,1);	
   \   000014F6   0123               MOVS     R3,#+1
   \   000014F8   ....               LDR.N    R2,??DataTable169_20
   \   000014FA   1021               MOVS     R1,#+16
   \   000014FC   0020               MOVS     R0,#+0
   \   000014FE   ........           BL       GLcd_PutString
    993          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   00001502   ....               LDR.N    R0,??DataTable169_11
   \   00001504   0221               MOVS     R1,#+2
   \   00001506   8171               STRB     R1,[R0, #+6]
    994          			
    995          		}  // end of DISP_MENU4_11
    996          		break;
   \   00001508   E5E0               B.N      ??Display_56
    997          	case DISP_MENU4_12:
    998          		{
    999                         
   1000          			sprintf( (char *)Display_Buff,"  < 과부하기준 >     " );
   \                     ??Display_48:
   \   0000150A   ....               LDR.N    R1,??DataTable169_56
   \   0000150C   ....               LDR.N    R0,??DataTable169_20
   \   0000150E   ........           BL       sprintf
   1001          			GLcd_PutString(0,0,Display_Buff,1);
   \   00001512   0123               MOVS     R3,#+1
   \   00001514   ....               LDR.N    R2,??DataTable169_20
   \   00001516   0021               MOVS     R1,#+0
   \   00001518   0020               MOVS     R0,#+0
   \   0000151A   ........           BL       GLcd_PutString
   1002          			sprintf( (char *)Display_Buff,"    [ %04d rpm ]    ", SFLASH_Memory.OverloadRPM );	        
   \   0000151E   7048               LDR.N    R0,??Display_78+0x4
   \   00001520   B0F89E20           LDRH     R2,[R0, #+158]
   \   00001524   ....               LDR.N    R1,??DataTable169_57
   \   00001526   ....               LDR.N    R0,??DataTable169_20
   \   00001528   ........           BL       sprintf
   1003          			GLcd_PutString(0,16,Display_Buff,1);
   \   0000152C   0123               MOVS     R3,#+1
   \   0000152E   ....               LDR.N    R2,??DataTable169_20
   \   00001530   1021               MOVS     R1,#+16
   \   00001532   0020               MOVS     R0,#+0
   \   00001534   ........           BL       GLcd_PutString
   1004                         
   1005          		}  	// end of DIS_MENU4_12
   1006          		break;
   \   00001538   CDE0               B.N      ??Display_56
   1007          	case DISP_MENU4_13:
   1008          		{			
   1009          			sprintf( (char *)Display_Buff,"  < 기울기세팅 >     " );
   \                     ??Display_49:
   \   0000153A   ....               LDR.N    R1,??DataTable169_58
   \   0000153C   ....               LDR.N    R0,??DataTable169_20
   \   0000153E   ........           BL       sprintf
   1010          			GLcd_PutString(0,0,Display_Buff,1);
   \   00001542   0123               MOVS     R3,#+1
   \   00001544   ....               LDR.N    R2,??DataTable169_20
   \   00001546   0021               MOVS     R1,#+0
   \   00001548   0020               MOVS     R0,#+0
   \   0000154A   ........           BL       GLcd_PutString
   1011          			if( Input_Mode == 0 )
   \   0000154E   ....               LDR.N    R0,??DataTable169_23
   \   00001550   0078               LDRB     R0,[R0, #+0]
   \   00001552   0028               CMP      R0,#+0
   \   00001554   0AD1               BNE.N    ??Display_123
   1012          				sprintf( (char *)Display_Buff,"     X=%-2d  Y=%-2d   ",TiltInfo.DegX,TiltInfo.DegY );	        
   \   00001556   ....               LDR.N    R0,??DataTable169_59
   \   00001558   B0F91230           LDRSH    R3,[R0, #+18]
   \   0000155C   ....               LDR.N    R0,??DataTable169_59
   \   0000155E   B0F91020           LDRSH    R2,[R0, #+16]
   \   00001562   ....               LDR.N    R1,??DataTable169_60
   \   00001564   ....               LDR.N    R0,??DataTable169_20
   \   00001566   ........           BL       sprintf
   \   0000156A   03E0               B.N      ??Display_124
   1013          			else
   1014          				sprintf( (char *)Display_Buff,"기울기세팅 OK/ESC");        
   \                     ??Display_123:
   \   0000156C   ....               LDR.N    R1,??DataTable169_61
   \   0000156E   ....               LDR.N    R0,??DataTable169_20
   \   00001570   ........           BL       sprintf
   1015          			GLcd_PutString(0,16,Display_Buff,1);          
   \                     ??Display_124:
   \   00001574   0123               MOVS     R3,#+1
   \   00001576   ....               LDR.N    R2,??DataTable169_20
   \   00001578   1021               MOVS     R1,#+16
   \   0000157A   0020               MOVS     R0,#+0
   \   0000157C   ........           BL       GLcd_PutString
   1016          			
   1017          		}  	// end of DIS_MENU4_13
   1018          		break;
   \   00001580   A9E0               B.N      ??Display_56
   1019          
   1020          	case DISP_MENU4_15:
   1021          		{			
   1022          			if( Input_Mode == 0 )
   \                     ??Display_50:
   \   00001582   ....               LDR.N    R0,??DataTable169_23
   \   00001584   0078               LDRB     R0,[R0, #+0]
   \   00001586   0028               CMP      R0,#+0
   \   00001588   22D1               BNE.N    ??Display_125
   1023          			{
   1024          				sprintf( (char *)Display_Buff,"  < 키입력수정 >       " );
   \   0000158A   ....               LDR.N    R1,??DataTable169_62
   \   0000158C   ....               LDR.N    R0,??DataTable169_20
   \   0000158E   ........           BL       sprintf
   1025          				GLcd_PutString(0,0,Display_Buff,1);		  
   \   00001592   0123               MOVS     R3,#+1
   \   00001594   ....               LDR.N    R2,??DataTable169_20
   \   00001596   0021               MOVS     R1,#+0
   \   00001598   0020               MOVS     R0,#+0
   \   0000159A   ........           BL       GLcd_PutString
   1026          				sprintf( (char *)Display_Buff,"IO를변경하려면 OK" );		  
   \   0000159E   ....               LDR.N    R1,??DataTable169_63
   \   000015A0   ....               LDR.N    R0,??DataTable169_20
   \   000015A2   ........           BL       sprintf
   1027          				GLcd_PutString(0,16,Display_Buff,1);          
   \   000015A6   0123               MOVS     R3,#+1
   \   000015A8   ....               LDR.N    R2,??DataTable169_20
   \   000015AA   1021               MOVS     R1,#+16
   \   000015AC   0020               MOVS     R0,#+0
   \   000015AE   ........           BL       GLcd_PutString
   1028          				
   1029          				IOReverse_Count = 0;			  
   \   000015B2   ....               LDR.N    R0,??DataTable169_64
   \   000015B4   0021               MOVS     R1,#+0
   \   000015B6   0170               STRB     R1,[R0, #+0]
   \   000015B8   0CE0               B.N      ??Display_126
   \   000015BA   00BF               Nop      
   \                     ??Display_72:
   \   000015BC   ........           DC32     `?<Constant " 7. \\306\\304\\266\\363\\271\\314\\305\\3`
   \   000015C0   ........           DC32     `?<Constant "[OK]\\264\\251\\270\\243\\270\\351\\275\\3`
   \   000015C4   ........           DC32     `?<Constant "\\276\\367\\265\\245\\300\\314\\306\\256\\3`
   \   000015C8   000C0040           DC32     0x40000c00
   \   000015CC   ........           DC32     `?<Constant "WIFI\\276\\367\\265\\245\\300\\314\\306\\2`
   1030          			}
   1031          			else
   1032          				InputIO_Reverse_View();
   \                     ??Display_125:
   \   000015D0   ........           BL       InputIO_Reverse_View
   1033          			
   1034          		}  	// end of DIS_MENU4_15
   1035          		break;	 	  
   \                     ??Display_126:
   \   000015D4   7FE0               B.N      ??Display_56
   1036          	case DISP_MENU4_16:
   1037          		{			
   1038                         sprintf( (char *)Display_Buff,"< GPS 차고지설정 >    " );
   \                     ??Display_51:
   \   000015D6   ....               LDR.N    R1,??DataTable169_65
   \   000015D8   ....               LDR.N    R0,??DataTable169_20
   \   000015DA   ........           BL       sprintf
   1039                         GLcd_PutString(0,0,Display_Buff,1);		  
   \   000015DE   0123               MOVS     R3,#+1
   \   000015E0   ....               LDR.N    R2,??DataTable169_20
   \   000015E2   0021               MOVS     R1,#+0
   \   000015E4   0020               MOVS     R0,#+0
   \   000015E6   ........           BL       GLcd_PutString
   1040                         sprintf( (char *)Display_Buff,"차고지를설정 - OK" );		  
   \   000015EA   ....               LDR.N    R1,??DataTable169_66
   \   000015EC   ....               LDR.N    R0,??DataTable169_20
   \   000015EE   ........           BL       sprintf
   1041                         GLcd_PutString(0,16,Display_Buff,1);           		
   \   000015F2   0123               MOVS     R3,#+1
   \   000015F4   ....               LDR.N    R2,??DataTable169_20
   \   000015F6   1021               MOVS     R1,#+16
   \   000015F8   0020               MOVS     R0,#+0
   \   000015FA   ........           BL       GLcd_PutString
   1042          		}  	// end of DIS_MENU4_16
   1043          		break;	 	  
   \   000015FE   6AE0               B.N      ??Display_56
   1044          	case DISP_MENU4_17:
   1045          		{			
   1046          			sprintf( (char *)Display_Buff,"< EMS 동작범위설정 > " );
   \                     ??Display_52:
   \   00001600   ....               LDR.N    R1,??DataTable169_67
   \   00001602   ....               LDR.N    R0,??DataTable169_20
   \   00001604   ........           BL       sprintf
   1047          			GLcd_PutString(0,0,Display_Buff,1);		  
   \   00001608   0123               MOVS     R3,#+1
   \   0000160A   ....               LDR.N    R2,??DataTable169_20
   \   0000160C   0021               MOVS     R1,#+0
   \   0000160E   0020               MOVS     R0,#+0
   \   00001610   ........           BL       GLcd_PutString
   1048                              
   1049          			sprintf( (char *)Display_Buff,"%s    ",EMS_WORD[SFLASH_Memory.GPS_EMS_Use] );		  
   \   00001614   3248               LDR.N    R0,??Display_78+0x4
   \   00001616   90F88900           LDRB     R0,[R0, #+137]
   \   0000161A   ....               LDR.N    R1,??DataTable169_68
   \   0000161C   51F82020           LDR      R2,[R1, R0, LSL #+2]
   \   00001620   ....               LDR.N    R1,??DataTable169_69
   \   00001622   ....               LDR.N    R0,??DataTable169_20
   \   00001624   ........           BL       sprintf
   1050          			GLcd_PutString(0,16,Display_Buff,1);					
   \   00001628   0123               MOVS     R3,#+1
   \   0000162A   ....               LDR.N    R2,??DataTable169_20
   \   0000162C   1021               MOVS     R1,#+16
   \   0000162E   0020               MOVS     R0,#+0
   \   00001630   ........           BL       GLcd_PutString
   1051          		}  	// end of DIS_MENU4_16
   1052          		break;	 
   \   00001634   4FE0               B.N      ??Display_56
   1053          	case DISP_MENU4_18:
   1054          		{			
   1055          			sprintf( (char *)Display_Buff,"< 스타트모터수정 > " );
   \                     ??Display_53:
   \   00001636   ....               LDR.N    R1,??DataTable169_70
   \   00001638   ....               LDR.N    R0,??DataTable169_20
   \   0000163A   ........           BL       sprintf
   1056          			GLcd_PutString(0,0,Display_Buff,1);		  
   \   0000163E   0123               MOVS     R3,#+1
   \   00001640   ....               LDR.N    R2,??DataTable169_20
   \   00001642   0021               MOVS     R1,#+0
   \   00001644   0020               MOVS     R0,#+0
   \   00001646   ........           BL       GLcd_PutString
   1057                              
   1058          			if( Input_Mode == 0  )
   \   0000164A   ....               LDR.N    R0,??DataTable169_23
   \   0000164C   0078               LDRB     R0,[R0, #+0]
   \   0000164E   0028               CMP      R0,#+0
   \   00001650   06D1               BNE.N    ??Display_127
   1059          			{
   1060          				sprintf( (char *)Display_Buff,  "     [%06d]     ",ACC_Drive_Value.Total_StartMotor );
   \   00001652   ....               LDR.N    R0,??DataTable169_71
   \   00001654   0288               LDRH     R2,[R0, #+0]
   \   00001656   ....               LDR.N    R1,??DataTable169_72
   \   00001658   ....               LDR.N    R0,??DataTable169_20
   \   0000165A   ........           BL       sprintf
   \   0000165E   04E0               B.N      ??Display_128
   1061                                   }
   1062          			else
   1063          			{
   1064          				sprintf( (char *)Display_Buff,  "     [%06s]     ",Input_Word);	
   \                     ??Display_127:
   \   00001660   ....               LDR.N    R2,??DataTable169_24
   \   00001662   ....               LDR.N    R1,??DataTable169_73
   \   00001664   ....               LDR.N    R0,??DataTable169_20
   \   00001666   ........           BL       sprintf
   1065          			}   		
   1066                         GLcd_PutString(0,16,Display_Buff,1);					
   \                     ??Display_128:
   \   0000166A   0123               MOVS     R3,#+1
   \   0000166C   ....               LDR.N    R2,??DataTable169_20
   \   0000166E   1021               MOVS     R1,#+16
   \   00001670   0020               MOVS     R0,#+0
   \   00001672   ........           BL       GLcd_PutString
   1067          		}  	// end of DIS_MENU4_16
   1068          		break;	 	
   \   00001676   2EE0               B.N      ??Display_56
   1069          	case DISP_MENU4_19:
   1070          		{			
   1071          			sprintf( (char *)Display_Buff,"< EMS 동작속도설정 > " );
   \                     ??Display_54:
   \   00001678   ....               LDR.N    R1,??DataTable169_74
   \   0000167A   ....               LDR.N    R0,??DataTable169_20
   \   0000167C   ........           BL       sprintf
   1072          			GLcd_PutString(0,0,Display_Buff,1);		  
   \   00001680   0123               MOVS     R3,#+1
   \   00001682   ....               LDR.N    R2,??DataTable169_20
   \   00001684   0021               MOVS     R1,#+0
   \   00001686   0020               MOVS     R0,#+0
   \   00001688   ........           BL       GLcd_PutString
   1073                              
   1074          			sprintf( (char *)Display_Buff,"    [ %04d km ]    ", SFLASH_Memory.EMS.LimitSpeed );	        
   \   0000168C   1448               LDR.N    R0,??Display_78+0x4
   \   0000168E   90F89320           LDRB     R2,[R0, #+147]
   \   00001692   ....               LDR.N    R1,??DataTable169_75
   \   00001694   ....               LDR.N    R0,??DataTable169_20
   \   00001696   ........           BL       sprintf
   1075            
   1076          			GLcd_PutString(0,16,Display_Buff,1);					
   \   0000169A   0123               MOVS     R3,#+1
   \   0000169C   ....               LDR.N    R2,??DataTable169_20
   \   0000169E   1021               MOVS     R1,#+16
   \   000016A0   0020               MOVS     R0,#+0
   \   000016A2   ........           BL       GLcd_PutString
   1077          		}  	// end of DIS_MENU4_16
   1078          		break;	 	
   \   000016A6   16E0               B.N      ??Display_56
   1079          	case DISP_MENU8:
   1080          		{
   1081          			
   1082          			sprintf( (char *)Display_Buff,"< 사용자메뉴 > ");
   \                     ??Display_28:
   \   000016A8   ....               LDR.N    R1,??DataTable169_76
   \   000016AA   ....               LDR.N    R0,??DataTable169_20
   \   000016AC   ........           BL       sprintf
   1083          			GLcd_PutString(0,0,Display_Buff,1);
   \   000016B0   0123               MOVS     R3,#+1
   \   000016B2   ....               LDR.N    R2,??DataTable169_20
   \   000016B4   0021               MOVS     R1,#+0
   \   000016B6   0020               MOVS     R0,#+0
   \   000016B8   ........           BL       GLcd_PutString
   1084          			sprintf( (char *)Display_Buff,"8 영상펌웨어   ");
   \   000016BC   ....               LDR.N    R1,??DataTable169_77
   \   000016BE   ....               LDR.N    R0,??DataTable169_20
   \   000016C0   ........           BL       sprintf
   1085          			GLcd_PutString(0,16,Display_Buff,1);	
   \   000016C4   0123               MOVS     R3,#+1
   \   000016C6   ....               LDR.N    R2,??DataTable169_20
   \   000016C8   1021               MOVS     R1,#+16
   \   000016CA   0020               MOVS     R0,#+0
   \   000016CC   ........           BL       GLcd_PutString
   1086          			DisplayInfo.Mode = DISPMODE_MENU;	
   \   000016D0   ....               LDR.N    R0,??DataTable169_11
   \   000016D2   0221               MOVS     R1,#+2
   \   000016D4   8171               STRB     R1,[R0, #+6]
   1087          			
   1088          		}  // end of DISP_MENU2
   1089          		break;               	  
   1090          		
   1091          		/*          case DISP_NONE:
   1092          		{
   1093          		DisplayInfo.Mode = DISPMODE_VIEW;
   1094          		DisplayInfo.Next_View = DISP_IDLE;
   1095               }
   1096          		*/           
   1097          	}// end Switch
   1098               /*
   1099               if(LOGWRITE)
   1100               {
   1101               sprintf( (char *)Buffer,"Graphic Refresh\r\n");
   1102               Write_Log(Buffer, NORMAL_LOG);
   1103          }
   1104               */
   1105          }
   \                     ??Display_56:
   \                     ??Display_2:
   \   000016D6   07B0               ADD      SP,SP,#+28
   \   000016D8   00BD               POP      {PC}             ;; return
   \   000016DA   00BF               Nop      
   \                     ??Display_78:
   \   000016DC   ........           DC32     `?<Constant "  < \\275\\272\\307\\307\\304\\277\\272\\2`
   \   000016E0   ........           DC32     SFLASH_Memory
   \   000016E4   ........           DC32     `?<Constant "    [ %03d %% ]      ">`
   \   000016E8   ........           DC32     `?<Constant "  < \\300\\372\\300\\345  \\270\\336\\264`
   \   000016EC   ........           DC32     `?<Constant "- \\274\\261\\305\\303\\271\\351\\276\\367`
   \   000016F0   ........           DC32     VIEW_Header
   \   000016F4   ........           DC32     `?<Constant " [%03d]-%02d%02d%02d ">`
   \   000016F8   ........           DC32     `?<Constant "- DataSave        ">`

   \                                 In section .bss, align 2
   \                     ??Display_Time:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
   \                     ??Led_Flag:
   \   00000000                      DS8 1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable165:
   \   00000000   25732000           DC8      "%s "

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable168:
   \   00000000   00180240           DC32     0x40021800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable168_1:
   \   00000000   ........           DC32     EMSOn_Check

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable168_2:
   \   00000000   ........           DC32     EMS_ON_WORD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable168_3:
   \   00000000   ........           DC32     Display_Buff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable168_4:
   \   00000000   ........           DC32     EMSOff_Check

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable168_5:
   \   00000000   ........           DC32     EMS_OFF_WORD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable168_6:
   \   00000000   ........           DC32     Info

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable168_7:
   \   00000000   ........           DC32     `?<Constant "BREAK ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable168_8:
   \   00000000   ........           DC32     `?<Constant "GEAR  ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable168_9:
   \   00000000   ........           DC32     `?<Constant "PARKING">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable168_10:
   \   00000000   ........           DC32     `?<Constant "RLIGHT">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable168_11:
   \   00000000   ........           DC32     `?<Constant "LLIGHT">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable168_12:
   \   00000000   ........           DC32     `?<Constant "F_DOOR">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable168_13:
   \   00000000   ........           DC32     `?<Constant "R_DOOR">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable168_14:
   \   00000000   ........           DC32     `?<Constant "KEY_ON">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable168_15:
   \   00000000   ........           DC32     INPUT_REVERSE_DATA

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable168_16:
   \   00000000   ........           DC32     IOReverse_Count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable168_17:
   \   00000000   ........           DC32     Toogle_Cursor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable168_18:
   \   00000000   00002041           DC32     0x41200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable168_19:
   \   00000000   ........           DC32     Buffer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable168_20:
   \   00000000   00007A44           DC32     0x447a0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable168_21:
   \   00000000   ........           DC32     Wait_x

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable168_22:
   \   00000000   ........           DC32     Wait_y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable168_23:
   \   00000000   ........           DC32     LCD_WaitString

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "BREAK ">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   425245414B20       DC8 66, 82, 69, 65, 75, 32, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "GEAR  ">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   474541522020       DC8 71, 69, 65, 82, 32, 32, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "PARKING">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   5041524B494E       DC8 80, 65, 82, 75, 73, 78, 71, 0
   \              4700        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "RLIGHT">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   524C49474854       DC8 82, 76, 73, 71, 72, 84, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "LLIGHT">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   4C4C49474854       DC8 76, 76, 73, 71, 72, 84, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "F_DOOR">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   465F444F4F52       DC8 70, 95, 68, 79, 79, 82, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "R_DOOR">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   525F444F4F52       DC8 82, 95, 68, 79, 79, 82, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "KEY_ON">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   4B45595F4F4E       DC8 75, 69, 89, 95, 79, 78, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "LPGP %04.1f">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   4C5047502025       DC8 76, 80, 71, 80, 32, 37, 48, 52, 46, 49
   \              30342E31    
   \   0000000A   6600               DC8 102, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "AirP %04.1f">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   416972502025       DC8 65, 105, 114, 80, 32, 37, 48, 52, 46, 49
   \              30342E31    
   \   0000000A   6600               DC8 102, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "WTmp %04.1f">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   57546D702025       DC8 87, 84, 109, 112, 32, 37, 48, 52, 46, 49
   \              30342E31    
   \   0000000A   6600               DC8 102, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Batt %04.1f">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   426174742025       DC8 66, 97, 116, 116, 32, 37, 48, 52, 46, 49
   \              30342E31    
   \   0000000A   6600               DC8 102, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Fuel %04.1f">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   4675656C2025       DC8 70, 117, 101, 108, 32, 37, 48, 52, 46, 49
   \              30342E31    
   \   0000000A   6600               DC8 102, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Accl %04.1f">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   4163636C2025       DC8 65, 99, 99, 108, 32, 37, 48, 52, 46, 49
   \              30342E31    
   \   0000000A   6600               DC8 102, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " COMMNUNICATION MODE  ">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20434F4D4D4E       DC8 32, 67, 79, 77, 77, 78, 85, 78, 73, 67
   \              554E4943    
   \   0000000A   4154494F4E20       DC8 65, 84, 73, 79, 78, 32, 77, 79, 68, 69
   \              4D4F4445    
   \   00000014   20200000           DC8 32, 32, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  CONNECT USE CABLE   ">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   2020434F4E4E       DC8 32, 32, 67, 79, 78, 78, 69, 67, 84, 32
   \              45435420    
   \   0000000A   555345204341       DC8 85, 83, 69, 32, 67, 65, 66, 76, 69, 32
   \              424C4520    
   \   00000014   20200000           DC8 32, 32, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "   - TEAHO TECH -   ">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   2020202D2054       DC8 32, 32, 32, 45, 32, 84, 69, 65, 72, 79
   \              4541484F    
   \   0000000A   205445434820       DC8 32, 84, 69, 67, 72, 32, 45, 32, 32, 32
   \              2D202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " EMS_SYSTEM V000033 ">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20454D535F53       DC8 32, 69, 77, 83, 95, 83, 89, 83, 84, 69
   \              59535445    
   \   0000000A   4D2056303030       DC8 77, 32, 86, 48, 48, 48, 48, 51, 51, 32
   \              30333320    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%02d/%02d/%02d %02d:%...">`:
   \   00000000                      ; Initializer data, 32 bytes
   \   00000000   253032642F25       DC8 37, 48, 50, 100, 47, 37, 48, 50, 100, 47
   \              3032642F    
   \   0000000A   253032642025       DC8 37, 48, 50, 100, 32, 37, 48, 50, 100, 58
   \              3032643A    
   \   00000014   253032643A25       DC8 37, 48, 50, 100, 58, 37, 48, 50, 100, 0
   \              30326400    
   \   0000001E   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%4d RPM %3d km %c%02d">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   253464205250       DC8 37, 52, 100, 32, 82, 80, 77, 32, 37, 51
   \              4D202533    
   \   0000000A   64206B6D2025       DC8 100, 32, 107, 109, 32, 37, 99, 37, 48, 50
   \              63253032    
   \   00000014   64000000           DC8 100, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\300\\317\\300\\317\\277\\356\\307\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20C0CF       DC8 32, 32, 60, 32, 192, 207, 192, 207, 191, 238
   \              C0CFBFEE    
   \   0000000A   C7E0BDC3B0A3       DC8 199, 224, 189, 195, 176, 163, 32, 62, 32, 32
   \              203E2020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "      [ %02d:%02d ]  ...">`:
   \   00000000                      ; Initializer data, 28 bytes
   \   00000000   202020202020       DC8 32, 32, 32, 32, 32, 32, 91, 32, 37, 48
   \              5B202530    
   \   0000000A   32643A253032       DC8 50, 100, 58, 37, 48, 50, 100, 32, 93, 32
   \              64205D20    
   \   00000014   202020202000       DC8 32, 32, 32, 32, 32, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\300\\317\\301\\326\\307\\340      %05d`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   C0CFC1D6C7E0       DC8 192, 207, 193, 214, 199, 224, 32, 32, 32, 32
   \              20202020    
   \   0000000A   202025303564       DC8 32, 32, 37, 48, 53, 100, 32, 107, 109, 0
   \              206B6D00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\303\\321\\301\\326\\307\\340    %07d k`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   C3D1C1D6C7E0       DC8 195, 209, 193, 214, 199, 224, 32, 32, 32, 32
   \              20202020    
   \   0000000A   25303764206B       DC8 37, 48, 55, 100, 32, 107, 109, 0, 0, 0
   \              6D000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\277\\356\\300\\374\\300\\332\\304\\3`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20203C20BFEE       DC8 32, 32, 60, 32, 191, 238, 192, 252, 192, 218
   \              C0FCC0DA    
   \   0000000A   C4DAB5E5203E       DC8 196, 218, 181, 229, 32, 62, 32, 32, 0, 0
   \              20200000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  \\277\\356\\300\\374\\300\\332\\274\\261`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   2020BFEEC0FC       DC8 32, 32, 191, 238, 192, 252, 192, 218, 188, 177
   \              C0DABCB1    
   \   0000000A   C5C3BEC8B5CA       DC8 197, 195, 190, 200, 181, 202, 32, 32, 32, 32
   \              20202020    
   \   00000014   20000000           DC8 32, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "[%018s]">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   5B2530313873       DC8 91, 37, 48, 49, 56, 115, 93, 0
   \              5D00        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\261\\342\\277\\357\\261\\342\\274\\2`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20203C20B1E2       DC8 32, 32, 60, 32, 177, 226, 191, 239, 177, 226
   \              BFEFB1E2    
   \   0000000A   BCBCC6C3203E       DC8 188, 188, 198, 195, 32, 62, 32, 32, 0, 0
   \              20200000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "   [ X=%-2d  Y=%-2d ]  ">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   2020205B2058       DC8 32, 32, 32, 91, 32, 88, 61, 37, 45, 50
   \              3D252D32    
   \   0000000A   642020593D25       DC8 100, 32, 32, 89, 61, 37, 45, 50, 100, 32
   \              2D326420    
   \   00000014   5D202000           DC8 93, 32, 32, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "< \\275\\303\\265\\277\\270\\360\\305\\315`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   3C20BDC3B5BF       DC8 60, 32, 189, 195, 181, 191, 184, 240, 197, 205
   \              B8F0C5CD    
   \   0000000A   B4A9C0FBC8BD       DC8 180, 169, 192, 251, 200, 189, 188, 246, 32, 62
   \              BCF6203E    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "     [ %06d ]   ">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20202020205B       DC8 32, 32, 32, 32, 32, 91, 32, 37, 48, 54
   \              20253036    
   \   0000000A   64205D202020       DC8 100, 32, 93, 32, 32, 32, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "GPS-X %03d.%06d">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   4750532D5820       DC8 71, 80, 83, 45, 88, 32, 37, 48, 51, 100
   \              25303364    
   \   0000000A   2E2530366400       DC8 46, 37, 48, 54, 100, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "GPS-Y %03d.%06d">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   4750532D5920       DC8 71, 80, 83, 45, 89, 32, 37, 48, 51, 100
   \              25303364    
   \   0000000A   2E2530366400       DC8 46, 37, 48, 54, 100, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\306\\337\\277\\376\\276\\356\\271\\3`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20203C20C6DF       DC8 32, 32, 60, 32, 198, 223, 191, 254, 190, 238
   \              BFFEBEEE    
   \   0000000A   B9F6C1AF203E       DC8 185, 246, 193, 175, 32, 62, 32, 32, 0, 0
   \              20200000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "   [ %09s ]   ">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   2020205B2025       DC8 32, 32, 32, 91, 32, 37, 48, 57, 115, 32
   \              30397320    
   \   0000000A   5D2020200000       DC8 93, 32, 32, 32, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "120118-01">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   313230313138       DC8 49, 50, 48, 49, 49, 56, 45, 48, 49, 0
   \              2D303100    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\307\\374\\275\\304\\275\\302\\300\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20C7FC       DC8 32, 32, 60, 32, 199, 252, 189, 196, 189, 194
   \              BDC4BDC2    
   \   0000000A   C0CEB9F8C8A3       DC8 192, 206, 185, 248, 200, 163, 32, 62, 32, 32
   \              203E2020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "   [ %010s ]   ">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   2020205B2025       DC8 32, 32, 32, 91, 32, 37, 48, 49, 48, 115
   \              30313073    
   \   0000000A   205D20202000       DC8 32, 93, 32, 32, 32, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\301\\246\\307\\260\\300\\317\\267\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20C1A6       DC8 32, 32, 60, 32, 193, 166, 199, 176, 192, 207
   \              C7B0C0CF    
   \   0000000A   B7C3B9F8C8A3       DC8 183, 195, 185, 248, 200, 163, 32, 62, 32, 32
   \              203E2020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " [ %014s ]   ">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   205B20253031       DC8 32, 91, 32, 37, 48, 49, 52, 115, 32, 93
   \              3473205D    
   \   0000000A   202020000000       DC8 32, 32, 32, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\273\\347\\277\\353\\300\\332\\270\\3`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20203C20BBE7       DC8 32, 32, 60, 32, 187, 231, 191, 235, 192, 218
   \              BFEBC0DA    
   \   0000000A   B8DEB4BA203E       DC8 184, 222, 180, 186, 32, 62, 32, 32, 32, 0
   \              20202000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " 1. \\300\\332\\267\\341\\300\\372\\300\\3`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20312E20C0DA       DC8 32, 49, 46, 32, 192, 218, 183, 225, 192, 250
   \              B7E1C0FA    
   \   0000000A   C0E520202020       DC8 192, 229, 32, 32, 32, 32, 32, 32, 32, 0
   \              20202000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " 2. \\277\\356\\300\\374\\300\\332\\274\\2`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20322E20BFEE       DC8 32, 50, 46, 32, 191, 238, 192, 252, 192, 218
   \              C0FCC0DA    
   \   0000000A   BCB1C5C32020       DC8 188, 177, 197, 195, 32, 32, 32, 32, 32, 0
   \              20202000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " 3. \\302\\367\\267\\256\\271\\370\\310\\2`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20332E20C2F7       DC8 32, 51, 46, 32, 194, 247, 183, 174, 185, 248
   \              B7AEB9F8    
   \   0000000A   C8A320202020       DC8 200, 163, 32, 32, 32, 32, 32, 32, 32, 0
   \              20202000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\273\\347\\277\\353\\300\\332\\270\\3_1`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20BBE7       DC8 32, 32, 60, 32, 187, 231, 191, 235, 192, 218
   \              BFEBC0DA    
   \   0000000A   B8DEB4BA203E       DC8 184, 222, 180, 186, 32, 62, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " 4. \\310\\257\\260\\346\\274\\263\\301\\2`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20342E20C8AF       DC8 32, 52, 46, 32, 200, 175, 176, 230, 188, 179
   \              B0E6BCB3    
   \   0000000A   C1A420202020       DC8 193, 164, 32, 32, 32, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " 5. \\306\\337\\277\\376\\276\\356\\276\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20352E20C6DF       DC8 32, 53, 46, 32, 198, 223, 191, 254, 190, 238
   \              BFFEBEEE    
   \   0000000A   BEF7B5A5C0CC       DC8 190, 247, 181, 165, 192, 204, 198, 174, 32, 32
   \              C6AE2020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "[OK]\\271\\366\\306\\260\\300\\273\\264\\2`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   5B4F4B5DB9F6       DC8 91, 79, 75, 93, 185, 246, 198, 176, 192, 187
   \              C6B0C0BB    
   \   0000000A   B4A9B8A3B8E9       DC8 180, 169, 184, 163, 184, 233, 189, 195, 192, 219
   \              BDC3C0DB    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\276\\367\\265\\245\\300\\314\\306\\256\\2`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   BEF7B5A5C0CC       DC8 190, 247, 181, 165, 192, 204, 198, 174, 189, 199
   \              C6AEBDC7    
   \   0000000A   C6D000000000       DC8 198, 208, 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169:
   \   00000000   ........           DC32     DISP_WORD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_1:
   \   00000000   ........           DC32     `?<Constant "  < \\300\\372\\300\\345  \\270\\336\\264_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_2:
   \   00000000   ........           DC32     `?<Constant "- \\261\\342\\260\\243\\271\\351\\276\\367`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_3:
   \   00000000   ........           DC32     Input_Index_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_4:
   \   00000000   ........           DC32     BAKUP_WORD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_5:
   \   00000000   ........           DC32     `?<Constant "- \\300\\372\\300\\345\\301\\337\\300\\324`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_6:
   \   00000000   ........           DC32     `?<Constant "- \\300\\374\\303\\274\\271\\351\\276\\367`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_7:
   \   00000000   ........           DC32     `?<Constant "- \\300\\374\\303\\274\\271\\351\\276\\367_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_8:
   \   00000000   ........           DC32     `?<Constant "- \\300\\372\\300\\345\\301\\337\\300\\324_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_9:
   \   00000000   ........           DC32     `?<Constant "- \\303\\346\\265\\271\\265\\245\\300\\314`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_10:
   \   00000000   ........           DC32     `?<Constant "- \\300\\374\\303\\274\\300\\372\\300\\345`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_11:
   \   00000000   ........           DC32     DisplayInfo

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_12:
   \   00000000   ........           DC32     `?<Constant "  < \\277\\356\\300\\374\\300\\332\\274\\2`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_13:
   \   00000000   ........           DC32     `?<Constant "  %s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_14:
   \   00000000   ........           DC32     `?<Constant "  < \\302\\367\\267\\256  \\271\\370\\310`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_15:
   \   00000000   ........           DC32     SFLASH_CarInfo+0x50

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_16:
   \   00000000   ........           DC32     `?<Constant "  < \\276\\317\\310\\243\\304\\332\\265\\3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_17:
   \   00000000   ........           DC32     Pass_Index

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_18:
   \   00000000   ........           DC32     `?<Constant "      [ %4s ]  ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_19:
   \   00000000   ........           DC32     `?<Constant "  < \\277\\356\\300\\374\\300\\332  \\272`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_20:
   \   00000000   ........           DC32     Display_Buff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_21:
   \   00000000   ........           DC32     `?<Constant "- \\277\\356\\300\\374\\300\\332\\260\\241`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_22:
   \   00000000   ........           DC32     `?<Constant "%d-%018s">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_23:
   \   00000000   ........           DC32     Input_Mode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_24:
   \   00000000   ........           DC32     Input_Word

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_25:
   \   00000000   ........           DC32     `?<Constant "  < \\271\\366\\275\\272\\302\\367\\267\\2`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_26:
   \   00000000   ........           DC32     `?<Constant "  \\307\\366\\264\\3532006-1     ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_27:
   \   00000000   ........           DC32     `?<Constant "  \\307\\366\\264\\3532007-2      ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_28:
   \   00000000   ........           DC32     `?<Constant "  \\307\\366\\264\\3532011-3     ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_29:
   \   00000000   ........           DC32     `?<Constant "  \\307\\374\\264\\3532011\\300\\372\\273`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_30:
   \   00000000   ........           DC32     `?<Constant "  \\307\\366\\264\\353\\261\\270\\307\\374`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_31:
   \   00000000   ........           DC32     `?<Constant "  \\307\\366\\264\\353\\275\\305\\307\\374`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_32:
   \   00000000   ........           DC32     `?<Constant "  \\307\\366\\264\\353\\275\\305\\307\\374_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_33:
   \   00000000   ........           DC32     `?<Constant "  \\264\\353\\277\\354\\261\\270\\307\\374`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_34:
   \   00000000   ........           DC32     `?<Constant "  \\264\\353\\277\\354\\261\\270\\307\\374_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_35:
   \   00000000   ........           DC32     `?<Constant "  \\264\\353\\277\\354\\275\\305\\307\\374`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_36:
   \   00000000   ........           DC32     `?<Constant "  \\264\\353\\277\\354\\275\\305\\307\\374_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_37:
   \   00000000   ........           DC32     `?<Constant "  \\261\\333\\267\\316\\271\\372\\275\\303`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_38:
   \   00000000   ........           DC32     `?<Constant "  \\304\\253\\277\\356\\306\\274\\261\\270`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_39:
   \   00000000   ........           DC32     `?<Constant "  \\304\\253\\277\\356\\306\\274\\275\\305`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_40:
   \   00000000   ........           DC32     `?<Constant "  < \\274\\323\\265\\265\\273\\363\\274\\3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_41:
   \   00000000   ........           DC32     `?<Constant "      [%06d]     ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_42:
   \   00000000   ........           DC32     `?<Constant "      [%06s]    ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_43:
   \   00000000   ........           DC32     `?<Constant "  < RPM \\273\\363\\274\\366\\272\\257\\2`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_44:
   \   00000000   ........           DC32     `?<Constant "      [%06s]     ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_45:
   \   00000000   ........           DC32     `?<Constant "  < \\274\\323\\265\\265\\261\\342\\301\\3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_46:
   \   00000000   00002440           DC32     0x40240000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_47:
   \   00000000   ........           DC32     `?<Constant "    [ %4.1f V ]     ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_48:
   \   00000000   ........           DC32     `?<Constant "  < RPM \\261\\342\\301\\330\\300\\374\\2`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_49:
   \   00000000   ........           DC32     `?<Constant "  < \\277\\241\\276\\356\\276\\320  \\300`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_50:
   \   00000000   00408F40           DC32     0x408f4000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_51:
   \   00000000   ........           DC32     `?<Constant "  < \\263\\303\\260\\242\\274\\366  \\277`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_52:
   \   00000000   ........           DC32     `?<Constant "  < \\260\\372\\274\\323  \\261\\342\\301`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_53:
   \   00000000   ........           DC32     `?<Constant "     [ %03d km ]     ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_54:
   \   00000000   ........           DC32     `?<Constant "  < \\261\\336\\301\\244\\301\\366\\261\\3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_55:
   \   00000000   ........           DC32     `?<Constant "  < \\261\\336\\260\\241\\274\\323\\261\\3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_56:
   \   00000000   ........           DC32     `?<Constant "  < \\260\\372\\272\\316\\307\\317\\261\\3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_57:
   \   00000000   ........           DC32     `?<Constant "    [ %04d rpm ]    ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_58:
   \   00000000   ........           DC32     `?<Constant "  < \\261\\342\\277\\357\\261\\342\\274\\2_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_59:
   \   00000000   ........           DC32     TiltInfo

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_60:
   \   00000000   ........           DC32     `?<Constant "     X=%-2d  Y=%-2d   ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_61:
   \   00000000   ........           DC32     `?<Constant "\\261\\342\\277\\357\\261\\342\\274\\274\\3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_62:
   \   00000000   ........           DC32     `?<Constant "  < \\305\\260\\300\\324\\267\\302\\274\\3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_63:
   \   00000000   ........           DC32     `?<Constant "IO\\270\\246\\272\\257\\260\\346\\307\\317`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_64:
   \   00000000   ........           DC32     IOReverse_Count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_65:
   \   00000000   ........           DC32     `?<Constant "< GPS \\302\\367\\260\\355\\301\\366\\274`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_66:
   \   00000000   ........           DC32     `?<Constant "\\302\\367\\260\\355\\301\\366\\270\\246\\2`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_67:
   \   00000000   ........           DC32     `?<Constant "< EMS \\265\\277\\300\\333\\271\\374\\300`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_68:
   \   00000000   ........           DC32     EMS_WORD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_69:
   \   00000000   ........           DC32     `?<Constant "%s    ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_70:
   \   00000000   ........           DC32     `?<Constant "< \\275\\272\\305\\270\\306\\256\\270\\360`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_71:
   \   00000000   ........           DC32     ACC_Drive_Value

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_72:
   \   00000000   ........           DC32     `?<Constant "     [%06d]     ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_73:
   \   00000000   ........           DC32     `?<Constant "     [%06s]     ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_74:
   \   00000000   ........           DC32     `?<Constant "< EMS \\265\\277\\300\\333\\274\\323\\265`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_75:
   \   00000000   ........           DC32     `?<Constant "    [ %04d km ]    ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_76:
   \   00000000   ........           DC32     `?<Constant "< \\273\\347\\277\\353\\300\\332\\270\\336`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_77:
   \   00000000   ........           DC32     `?<Constant "8 \\277\\265\\273\\363\\306\\337\\277\\376`

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\277\\300\\264\\303\\271\\351\\276\\367`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   2D20BFC0B4C3       DC8 45, 32, 191, 192, 180, 195, 185, 233, 190, 247
   \              B9E9BEF7    
   \   0000000A   202000000000       DC8 32, 32, 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\307\\317\\267\\347\\271\\351\\276\\367`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   2D20C7CFB7E7       DC8 45, 32, 199, 207, 183, 231, 185, 233, 190, 247
   \              B9E9BEF7    
   \   0000000A   202000000000       DC8 32, 32, 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\300\\317\\301\\326\\300\\317\\271\\351`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   2D20C0CFC1D6       DC8 45, 32, 192, 207, 193, 214, 192, 207, 185, 233
   \              C0CFB9E9    
   \   0000000A   BEF700000000       DC8 190, 247, 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\307\\321\\264\\336\\271\\351\\276\\367`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   2D20C7D1B4DE       DC8 45, 32, 199, 209, 180, 222, 185, 233, 190, 247
   \              B9E9BEF7    
   \   0000000A   202000000000       DC8 32, 32, 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\274\\274\\264\\336\\271\\351\\276\\367`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   2D20BCBCB4DE       DC8 45, 32, 188, 188, 180, 222, 185, 233, 190, 247
   \              B9E9BEF7    
   \   0000000A   202000000000       DC8 32, 32, 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\300\\374\\303\\274\\263\\353\\274\\261`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   2D20C0FCC3BC       DC8 45, 32, 192, 252, 195, 188, 179, 235, 188, 177
   \              B3EBBCB1    
   \   0000000A   B5BFC0DB2020       DC8 181, 191, 192, 219, 32, 32, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " 6. \\273\\347\\277\\356\\265\\345\\276\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20362E20BBE7       DC8 32, 54, 46, 32, 187, 231, 191, 238, 181, 229
   \              BFEEB5E5    
   \   0000000A   BEF7B5A5C0CC       DC8 190, 247, 181, 165, 192, 204, 198, 174, 32, 32
   \              C6AE2020    
   \   00000014   20000000           DC8 32, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\302\\367\\260\\355\\301\\366\\265\\277`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   2D20C2F7B0ED       DC8 45, 32, 194, 247, 176, 237, 193, 246, 181, 191
   \              C1F6B5BF    
   \   0000000A   C0DB20202020       DC8 192, 219, 32, 32, 32, 32, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\300\\372\\300\\345\\277\\317\\267\\341`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   2D20C0FAC0E5       DC8 45, 32, 192, 250, 192, 229, 191, 207, 183, 225
   \              BFCFB7E1    
   \   0000000A   C7DFBDC0B4CF       DC8 199, 223, 189, 192, 180, 207, 180, 217, 46, 32
   \              B4D92E20    
   \   00000014   20202000           DC8 32, 32, 32, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\265\\356\\267\\317\\261\\270\\260\\243`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   2D20B5EEB7CF       DC8 45, 32, 181, 238, 183, 207, 177, 184, 176, 163
   \              B1B8B0A3    
   \   0000000A   B5BFC0DB2020       DC8 181, 191, 192, 219, 32, 32, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "0.\\275\\303\\265\\277\\277\\302\\265\\277`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   302EBDC3B5BF       DC8 48, 46, 189, 195, 181, 191, 191, 194, 181, 191
   \              BFC2B5BF    
   \   0000000A   C0DBC1DF2020       DC8 192, 219, 193, 223, 32, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "1.\\277\\241\\304\\332\\271\\366\\306\\260`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   312EBFA1C4DA       DC8 49, 46, 191, 161, 196, 218, 185, 246, 198, 176
   \              B9F6C6B0    
   \   0000000A   C0CCBFC0C7C1       DC8 192, 204, 191, 192, 199, 193, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "2.\\275\\303\\265\\277\\305\\260\\277\\300`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   322EBDC3B5BF       DC8 50, 46, 189, 195, 181, 191, 197, 176, 191, 192
   \              C5B0BFC0    
   \   0000000A   C7C120202020       DC8 199, 193, 32, 32, 32, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "3. RPM\\300\\314\\300\\326\\300\\275    `:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   332E2052504D       DC8 51, 46, 32, 82, 80, 77, 192, 204, 192, 214
   \              C0CCC0D6    
   \   0000000A   C0BD20202020       DC8 192, 189, 32, 32, 32, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "4. SPEED\\260\\241\\300\\326\\300\\275  `:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   342E20535045       DC8 52, 46, 32, 83, 80, 69, 69, 68, 176, 161
   \              4544B0A1    
   \   0000000A   C0D6C0BD2020       DC8 192, 214, 192, 189, 32, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "5. GPS\\277\\241\\274\\323\\265\\265\\260`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   352E20475053       DC8 53, 46, 32, 71, 80, 83, 191, 161, 188, 211
   \              BFA1BCD3    
   \   0000000A   B5B5B0A12020       DC8 181, 181, 176, 161, 32, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " 7. \\306\\304\\266\\363\\271\\314\\305\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20372E20C6C4       DC8 32, 55, 46, 32, 198, 196, 182, 243, 185, 204
   \              B6F3B9CC    
   \   0000000A   C5CDBEF7B5A5       DC8 197, 205, 190, 247, 181, 165, 192, 204, 198, 174
   \              C0CCC6AE    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "[OK]\\264\\251\\270\\243\\270\\351\\275\\3`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   5B4F4B5DB4A9       DC8 91, 79, 75, 93, 180, 169, 184, 163, 184, 233
   \              B8A3B8E9    
   \   0000000A   BDC3C0DB2020       DC8 189, 195, 192, 219, 32, 32, 32, 0, 0, 0
   \              20000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "6.\\261\\342\\276\\356\\260\\241\\301\\337`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   362EB1E2BEEE       DC8 54, 46, 177, 226, 190, 238, 176, 161, 193, 223
   \              B0A1C1DF    
   \   0000000A   B8B320202020       DC8 184, 179, 32, 32, 32, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\276\\367\\265\\245\\300\\314\\306\\256\\3`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   BEF7B5A5C0CC       DC8 190, 247, 181, 165, 192, 204, 198, 174, 193, 223
   \              C6AEC1DF    
   \   0000000A   C0D4B4CFB4D9       DC8 192, 212, 180, 207, 180, 217, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "7. 1\\303\\312\\260\\243\\300\\347\\275\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   372E2031C3CA       DC8 55, 46, 32, 49, 195, 202, 176, 163, 192, 231
   \              B0A3C0E7    
   \   0000000A   BDC3B5B5BDC7       DC8 189, 195, 181, 181, 189, 199, 198, 208, 199, 212
   \              C6D0C7D4    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "8.\\275\\303\\265\\277\\300\\347\\275\\303`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   382EBDC3B5BF       DC8 56, 46, 189, 195, 181, 191, 192, 231, 189, 195
   \              C0E7BDC3    
   \   0000000A   B5B5BDC3B0A3       DC8 181, 181, 189, 195, 176, 163, 32, 51, 195, 202
   \              2033C3CA    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "9. BREAK\\271\\342\\301\\366\\276\\312\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   392E20425245       DC8 57, 46, 32, 66, 82, 69, 65, 75, 185, 226
   \              414BB9E2    
   \   0000000A   C1F6BECAC0BD       DC8 193, 246, 190, 202, 192, 189, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "10.BREAK\\266\\347\\301\\366\\276\\312\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   31302E425245       DC8 49, 48, 46, 66, 82, 69, 65, 75, 182, 231
   \              414BB6E7    
   \   0000000A   C1F6BECAC0BD       DC8 193, 246, 190, 202, 192, 189, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "WIFI\\276\\367\\265\\245\\300\\314\\306\\2`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   57494649BEF7       DC8 87, 73, 70, 73, 190, 247, 181, 165, 192, 204
   \              B5A5C0CC    
   \   0000000A   C6AEC1DFC0D4       DC8 198, 174, 193, 223, 192, 212, 180, 207, 180, 217
   \              B4CFB4D9    
   \   00000014   2E000000           DC8 46, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\275\\272\\307\\307\\304\\277\\272\\2`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20BDBA       DC8 32, 32, 60, 32, 189, 186, 199, 199, 196, 191
   \              C7C7C4BF    
   \   0000000A   BABCB7FD203E       DC8 186, 188, 183, 253, 32, 62, 32, 32, 32, 32
   \              20202020    
   \   00000014   20202000           DC8 32, 32, 32, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "11. \\270\\360\\265\\347\\301\\266\\260\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   31312E20B8F0       DC8 49, 49, 46, 32, 184, 240, 181, 231, 193, 182
   \              B5E7C1B6    
   \   0000000A   B0C7BFCFB7E1       DC8 176, 199, 191, 207, 183, 225, 32, 49, 195, 202
   \              2031C3CA    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "    [ %03d %% ]      ">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   202020205B20       DC8 32, 32, 32, 32, 91, 32, 37, 48, 51, 100
   \              25303364    
   \   0000000A   202525205D20       DC8 32, 37, 37, 32, 93, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   20000000           DC8 32, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\300\\372\\300\\345  \\270\\336\\264`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20203C20C0FA       DC8 32, 32, 60, 32, 192, 250, 192, 229, 32, 32
   \              C0E52020    
   \   0000000A   B8DEB4BA203E       DC8 184, 222, 180, 186, 32, 62, 32, 32, 0, 0
   \              20200000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "12. \\260\\370\\310\\270\\300\\374\\301\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   31322E20B0F8       DC8 49, 50, 46, 32, 176, 248, 200, 184, 192, 252
   \              C8B8C0FC    
   \   0000000A   C1F8C0D42020       DC8 193, 248, 192, 212, 32, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\274\\261\\305\\303\\271\\351\\276\\367`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   2D20BCB1C5C3       DC8 45, 32, 188, 177, 197, 195, 185, 233, 190, 247
   \              B9E9BEF7    
   \   0000000A   202020202020       DC8 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "0.\\275\\303\\265\\277\\277\\300\\307\\301`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   302EBDC3B5BF       DC8 48, 46, 189, 195, 181, 191, 191, 192, 199, 193
   \              BFC0C7C1    
   \   0000000A   B5BFC0DBC1DF       DC8 181, 191, 192, 219, 193, 223, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " [%03d]-%02d%02d%02d ">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   205B25303364       DC8 32, 91, 37, 48, 51, 100, 93, 45, 37, 48
   \              5D2D2530    
   \   0000000A   326425303264       DC8 50, 100, 37, 48, 50, 100, 37, 48, 50, 100
   \              25303264    
   \   00000014   20000000           DC8 32, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- DataSave        ">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   2D2044617461       DC8 45, 32, 68, 97, 116, 97, 83, 97, 118, 101
   \              53617665    
   \   0000000A   202020202020       DC8 32, 32, 32, 32, 32, 32, 32, 32, 0, 0
   \              20200000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "3. RPM\\300\\314\\276\\370\\300\\275    `:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   332E2052504D       DC8 51, 46, 32, 82, 80, 77, 192, 204, 190, 248
   \              C0CCBEF8    
   \   0000000A   C0BD20202020       DC8 192, 189, 32, 32, 32, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "5. GPS\\277\\241\\274\\323\\265\\265\\260_1`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   352E20475053       DC8 53, 46, 32, 71, 80, 83, 191, 161, 188, 211
   \              BFA1BCD3    
   \   0000000A   B5B5B0A1C0D6       DC8 181, 181, 176, 161, 192, 214, 192, 189, 32, 32
   \              C0BD2020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "7.\\277\\356\\307\\340\\301\\337\\271\\350`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   372EBFEEC7E0       DC8 55, 46, 191, 238, 199, 224, 193, 223, 185, 232
   \              C1DFB9E8    
   \   0000000A   C5CDB8AEB3B7       DC8 197, 205, 184, 174, 179, 183, 192, 189, 32, 32
   \              C0BD2020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "8.\\261\\342\\301\\330\\271\\350\\305\\315`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   382EB1E2C1D8       DC8 56, 46, 177, 226, 193, 216, 185, 232, 197, 205
   \              B9E8C5CD    
   \   0000000A   B8AEB3B7C0BD       DC8 184, 174, 179, 183, 192, 189, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "9.\\263\\303\\260\\242\\274\\366\\260\\241`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   392EB3C3B0A2       DC8 57, 46, 179, 195, 176, 162, 188, 246, 176, 161
   \              BCF6B0A1    
   \   0000000A   C0FCBED0B3F4       DC8 192, 252, 190, 208, 179, 244, 192, 189, 32, 32
   \              C0BD2020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "10. \\277\\241\\276\\356\\276\\320\\300\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   31302E20BFA1       DC8 49, 48, 46, 32, 191, 161, 190, 238, 190, 208
   \              BEEEBED0    
   \   0000000A   C0CCC0FCBED0       DC8 192, 204, 192, 252, 190, 208, 179, 183, 192, 189
   \              B3B7C0BD    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "11. \\261\\342\\277\\357\\261\\342 X\\277`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   31312E20B1E2       DC8 49, 49, 46, 32, 177, 226, 191, 239, 177, 226
   \              BFEFB1E2    
   \   0000000A   2058BFC0B9F6       DC8 32, 88, 191, 192, 185, 246, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\300\\372\\300\\345  \\270\\336\\264_1`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20203C20C0FA       DC8 32, 32, 60, 32, 192, 250, 192, 229, 32, 32
   \              C0E52020    
   \   0000000A   B8DEB4BA203E       DC8 184, 222, 180, 186, 32, 62, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "12. \\261\\342\\277\\357\\261\\342 Y\\277`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   31322E20B1E2       DC8 49, 50, 46, 32, 177, 226, 191, 239, 177, 226
   \              BFEFB1E2    
   \   0000000A   2059BFC0B9F6       DC8 32, 89, 191, 192, 185, 246, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\261\\342\\260\\243\\271\\351\\276\\367`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   2D20B1E2B0A3       DC8 45, 32, 177, 226, 176, 163, 185, 233, 190, 247
   \              B9E9BEF7    
   \   0000000A   202020202020       DC8 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   20202000           DC8 32, 32, 32, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "13.GPS\\271\\374\\300\\247\\271\\376\\276`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   31332E475053       DC8 49, 51, 46, 71, 80, 83, 185, 252, 192, 167
   \              B9FCC0A7    
   \   0000000A   B9FEBEEEB3B2       DC8 185, 254, 190, 238, 179, 178, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "14. \\306\\304\\305\\267\\272\\352\\267\\2`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   31342E20C6C4       DC8 49, 52, 46, 32, 198, 196, 197, 183, 186, 234
   \              C5B7BAEA    
   \   0000000A   B7B9C0CCC5A9       DC8 183, 185, 192, 204, 197, 169, 190, 248, 192, 189
   \              BEF8C0BD    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\300\\372\\300\\345\\301\\337\\300\\324`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   2D20C0FAC0E5       DC8 45, 32, 192, 250, 192, 229, 193, 223, 192, 212
   \              C1DFC0D4    
   \   0000000A   B4CFB4D92E20       DC8 180, 207, 180, 217, 46, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   20202000           DC8 32, 32, 32, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "15. \\303\\312\\261\\342 3\\272\\320\\264`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   31352E20C3CA       DC8 49, 53, 46, 32, 195, 202, 177, 226, 32, 51
   \              B1E22033    
   \   0000000A   BAD0B4EBB1E2       DC8 186, 208, 180, 235, 177, 226, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "16. \\270\\360\\265\\347\\270\\270\\301\\2`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   31362E20B8F0       DC8 49, 54, 46, 32, 184, 240, 181, 231, 184, 184
   \              B5E7B8B8    
   \   0000000A   C1B72033C3CA       DC8 193, 183, 32, 51, 195, 202, 180, 235, 177, 226
   \              B4EBB1E2    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "17. \\260\\370\\310\\270\\300\\374\\270\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   31372E20B0F8       DC8 49, 55, 46, 32, 176, 248, 200, 184, 192, 252
   \              C8B8C0FC    
   \   0000000A   B8F0B5E5C1F8       DC8 184, 240, 181, 229, 193, 248, 192, 212, 32, 32
   \              C0D42020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- USB \\276\\370\\300\\275          ">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   2D2055534220       DC8 45, 32, 85, 83, 66, 32, 190, 248, 192, 189
   \              BEF8C0BD    
   \   0000000A   202020202020       DC8 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%s ">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   25732000           DC8 37, 115, 32, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\300\\374\\303\\274\\271\\351\\276\\367`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   2D20C0FCC3BC       DC8 45, 32, 192, 252, 195, 188, 185, 233, 190, 247
   \              B9E9BEF7    
   \   0000000A   202020202020       DC8 32, 32, 32, 32, 32, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\300\\374\\303\\274\\271\\351\\276\\367_1`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   2D20C0FCC3BC       DC8 45, 32, 192, 252, 195, 188, 185, 233, 190, 247
   \              B9E9BEF7    
   \   0000000A   C0BBC7D2B1EE       DC8 192, 187, 199, 210, 177, 238, 191, 228, 63, 32
   \              BFE43F20    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\300\\372\\300\\345\\301\\337\\300\\324_1`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   2D20C0FAC0E5       DC8 45, 32, 192, 250, 192, 229, 193, 223, 192, 212
   \              C1DFC0D4    
   \   0000000A   B4CFB4D92E20       DC8 180, 207, 180, 217, 46, 32, 32, 32, 32, 0
   \              20202000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\303\\346\\265\\271\\265\\245\\300\\314`:
   \   00000000                      ; Initializer data, 28 bytes
   \   00000000   2D20C3E6B5B9       DC8 45, 32, 195, 230, 181, 185, 181, 165, 192, 204
   \              B5A5C0CC    
   \   0000000A   C5CDC0FAC0E5       DC8 197, 205, 192, 250, 192, 229, 32, 32, 32, 32
   \              20202020    
   \   00000014   202020202020       DC8 32, 32, 32, 32, 32, 32, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\300\\374\\303\\274\\300\\372\\300\\345`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   2D20C0FCC3BC       DC8 45, 32, 192, 252, 195, 188, 192, 250, 192, 229
   \              C0FAC0E5    
   \   0000000A   C0BBC7D2B1EE       DC8 192, 187, 199, 210, 177, 238, 191, 228, 63, 32
   \              BFE43F20    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\277\\356\\300\\374\\300\\332\\274\\2`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20BFEE       DC8 32, 32, 60, 32, 191, 238, 192, 252, 192, 218
   \              C0FCC0DA    
   \   0000000A   BCB1C5C3203E       DC8 188, 177, 197, 195, 32, 62, 32, 32, 32, 32
   \              20202020    
   \   00000014   20200000           DC8 32, 32, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  %s">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   202025730000       DC8 32, 32, 37, 115, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\302\\367\\267\\256  \\271\\370\\310`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20203C20C2F7       DC8 32, 32, 60, 32, 194, 247, 183, 174, 32, 32
   \              B7AE2020    
   \   0000000A   B9F8C8A3203E       DC8 185, 248, 200, 163, 32, 62, 32, 32, 32, 0
   \              20202000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\276\\317\\310\\243\\304\\332\\265\\3`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20203C20BECF       DC8 32, 32, 60, 32, 190, 207, 200, 163, 196, 218
   \              C8A3C4DA    
   \   0000000A   B5E5C0D4B7C2       DC8 181, 229, 192, 212, 183, 194, 32, 62, 32, 0
   \              203E2000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "      [ %4s ]  ">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   202020202020       DC8 32, 32, 32, 32, 32, 32, 91, 32, 37, 52
   \              5B202534    
   \   0000000A   73205D202000       DC8 115, 32, 93, 32, 32, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\277\\356\\300\\374\\300\\332  \\272`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20BFEE       DC8 32, 32, 60, 32, 191, 238, 192, 252, 192, 218
   \              C0FCC0DA    
   \   0000000A   2020BAAFB0E6       DC8 32, 32, 186, 175, 176, 230, 32, 62, 32, 32
   \              203E2020    
   \   00000014   20200000           DC8 32, 32, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "- \\277\\356\\300\\374\\300\\332\\260\\241`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   2D20BFEEC0FC       DC8 45, 32, 191, 238, 192, 252, 192, 218, 176, 161
   \              C0DAB0A1    
   \   0000000A   BCB1C5C3BEC8       DC8 188, 177, 197, 195, 190, 200, 181, 202, 32, 0
   \              B5CA2000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%d-%018s">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   25642D253031       DC8 37, 100, 45, 37, 48, 49, 56, 115, 0, 0
   \              38730000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\271\\366\\275\\272\\302\\367\\267\\2`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20203C20B9F6       DC8 32, 32, 60, 32, 185, 246, 189, 186, 194, 247
   \              BDBAC2F7    
   \   0000000A   B7AEBAAFB0E6       DC8 183, 174, 186, 175, 176, 230, 32, 62, 32, 0
   \              203E2000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  \\307\\366\\264\\3532006-1     ">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   2020C7F6B4EB       DC8 32, 32, 199, 246, 180, 235, 50, 48, 48, 54
   \              32303036    
   \   0000000A   2D3120202020       DC8 45, 49, 32, 32, 32, 32, 32, 0, 0, 0
   \              20000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  \\307\\366\\264\\3532007-2      ">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   2020C7F6B4EB       DC8 32, 32, 199, 246, 180, 235, 50, 48, 48, 55
   \              32303037    
   \   0000000A   2D3220202020       DC8 45, 50, 32, 32, 32, 32, 32, 32, 0, 0
   \              20200000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  \\307\\366\\264\\3532011-3     ">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   2020C7F6B4EB       DC8 32, 32, 199, 246, 180, 235, 50, 48, 49, 49
   \              32303131    
   \   0000000A   2D3320202020       DC8 45, 51, 32, 32, 32, 32, 32, 0, 0, 0
   \              20000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  \\307\\374\\264\\3532011\\300\\372\\273`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   2020C7FCB4EB       DC8 32, 32, 199, 252, 180, 235, 50, 48, 49, 49
   \              32303131    
   \   0000000A   C0FABBF32D34       DC8 192, 250, 187, 243, 45, 52, 32, 32, 32, 0
   \              20202000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  \\307\\366\\264\\353\\261\\270\\307\\374`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   2020C7F6B4EB       DC8 32, 32, 199, 246, 180, 235, 177, 184, 199, 252
   \              B1B8C7FC    
   \   0000000A   C0FABBF32D35       DC8 192, 250, 187, 243, 45, 53, 32, 32, 0, 0
   \              20200000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  \\307\\366\\264\\353\\275\\305\\307\\374`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   2020C7F6B4EB       DC8 32, 32, 199, 246, 180, 235, 189, 197, 199, 252
   \              BDC5C7FC    
   \   0000000A   2D3620202020       DC8 45, 54, 32, 32, 32, 32, 32, 32, 32, 0
   \              20202000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  \\307\\366\\264\\353\\275\\305\\307\\374_1`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   2020C7F6B4EB       DC8 32, 32, 199, 246, 180, 235, 189, 197, 199, 252
   \              BDC5C7FC    
   \   0000000A   C0FABBF32D37       DC8 192, 250, 187, 243, 45, 55, 32, 32, 32, 0
   \              20202000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  \\264\\353\\277\\354\\261\\270\\307\\374`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   2020B4EBBFEC       DC8 32, 32, 180, 235, 191, 236, 177, 184, 199, 252
   \              B1B8C7FC    
   \   0000000A   2D3820202020       DC8 45, 56, 32, 32, 32, 32, 32, 32, 32, 0
   \              20202000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  \\264\\353\\277\\354\\261\\270\\307\\374_1`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   2020B4EBBFEC       DC8 32, 32, 180, 235, 191, 236, 177, 184, 199, 252
   \              B1B8C7FC    
   \   0000000A   C0FABBF32D39       DC8 192, 250, 187, 243, 45, 57, 32, 32, 32, 0
   \              20202000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  \\264\\353\\277\\354\\275\\305\\307\\374`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   2020B4EBBFEC       DC8 32, 32, 180, 235, 191, 236, 189, 197, 199, 252
   \              BDC5C7FC    
   \   0000000A   2D3130202020       DC8 45, 49, 48, 32, 32, 32, 32, 32, 32, 0
   \              20202000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  \\264\\353\\277\\354\\275\\305\\307\\374_1`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   2020B4EBBFEC       DC8 32, 32, 180, 235, 191, 236, 189, 197, 199, 252
   \              BDC5C7FC    
   \   0000000A   C3CAC0FABBF3       DC8 195, 202, 192, 250, 187, 243, 45, 49, 49, 32
   \              2D313120    
   \   00000014   20000000           DC8 32, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  \\261\\333\\267\\316\\271\\372\\275\\303`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   2020B1DBB7CE       DC8 32, 32, 177, 219, 183, 206, 185, 250, 189, 195
   \              B9FABDC3    
   \   0000000A   C6BC2D313220       DC8 198, 188, 45, 49, 50, 32, 32, 32, 32, 0
   \              20202000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  \\304\\253\\277\\356\\306\\274\\261\\270`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   2020C4ABBFEE       DC8 32, 32, 196, 171, 191, 238, 198, 188, 177, 184
   \              C6BCB1B8    
   \   0000000A   C7FC2D313320       DC8 199, 252, 45, 49, 51, 32, 32, 32, 32, 0
   \              20202000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  \\304\\253\\277\\356\\306\\274\\275\\305`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   2020C4ABBFEE       DC8 32, 32, 196, 171, 191, 238, 198, 188, 189, 197
   \              C6BCBDC5    
   \   0000000A   C7FC2D313420       DC8 199, 252, 45, 49, 52, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   20000000           DC8 32, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\274\\323\\265\\265\\273\\363\\274\\3`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20203C20BCD3       DC8 32, 32, 60, 32, 188, 211, 181, 181, 187, 243
   \              B5B5BBF3    
   \   0000000A   BCF6BAAFB0E6       DC8 188, 246, 186, 175, 176, 230, 32, 62, 32, 0
   \              203E2000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "      [%06d]     ">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   202020202020       DC8 32, 32, 32, 32, 32, 32, 91, 37, 48, 54
   \              5B253036    
   \   0000000A   645D20202020       DC8 100, 93, 32, 32, 32, 32, 32, 0, 0, 0
   \              20000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "      [%06s]    ">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   202020202020       DC8 32, 32, 32, 32, 32, 32, 91, 37, 48, 54
   \              5B253036    
   \   0000000A   735D20202020       DC8 115, 93, 32, 32, 32, 32, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < RPM \\273\\363\\274\\366\\272\\257\\2`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20203C205250       DC8 32, 32, 60, 32, 82, 80, 77, 32, 187, 243
   \              4D20BBF3    
   \   0000000A   BCF6BAAFB0E6       DC8 188, 246, 186, 175, 176, 230, 32, 62, 32, 0
   \              203E2000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "      [%06s]     ">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   202020202020       DC8 32, 32, 32, 32, 32, 32, 91, 37, 48, 54
   \              5B253036    
   \   0000000A   735D20202020       DC8 115, 93, 32, 32, 32, 32, 32, 0, 0, 0
   \              20000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\274\\323\\265\\265\\261\\342\\301\\3`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20203C20BCD3       DC8 32, 32, 60, 32, 188, 211, 181, 181, 177, 226
   \              B5B5B1E2    
   \   0000000A   C1D8C0FCBED0       DC8 193, 216, 192, 252, 190, 208, 32, 62, 32, 0
   \              203E2000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "    [ %4.1f V ]     ">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   202020205B20       DC8 32, 32, 32, 32, 91, 32, 37, 52, 46, 49
   \              25342E31    
   \   0000000A   662056205D20       DC8 102, 32, 86, 32, 93, 32, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < RPM \\261\\342\\301\\330\\300\\374\\2`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C205250       DC8 32, 32, 60, 32, 82, 80, 77, 32, 177, 226
   \              4D20B1E2    
   \   0000000A   C1D8C0FCBED0       DC8 193, 216, 192, 252, 190, 208, 32, 62, 32, 32
   \              203E2020    
   \   00000014   20200000           DC8 32, 32, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\277\\241\\276\\356\\276\\320  \\300`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20BFA1       DC8 32, 32, 60, 32, 191, 161, 190, 238, 190, 208
   \              BEEEBED0    
   \   0000000A   2020C0FCBED0       DC8 32, 32, 192, 252, 190, 208, 32, 62, 32, 32
   \              203E2020    
   \   00000014   20000000           DC8 32, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\263\\303\\260\\242\\274\\366  \\277`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20B3C3       DC8 32, 32, 60, 32, 179, 195, 176, 162, 188, 246
   \              B0A2BCF6    
   \   0000000A   2020BFC2B5B5       DC8 32, 32, 191, 194, 181, 181, 32, 62, 32, 32
   \              203E2020    
   \   00000014   20202000           DC8 32, 32, 32, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\260\\372\\274\\323  \\261\\342\\301`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20B0FA       DC8 32, 32, 60, 32, 176, 250, 188, 211, 32, 32
   \              BCD32020    
   \   0000000A   B1E2C1D8203E       DC8 177, 226, 193, 216, 32, 62, 32, 32, 32, 32
   \              20202020    
   \   00000014   20200000           DC8 32, 32, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "     [ %03d km ]     ">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20202020205B       DC8 32, 32, 32, 32, 32, 91, 32, 37, 48, 51
   \              20253033    
   \   0000000A   64206B6D205D       DC8 100, 32, 107, 109, 32, 93, 32, 32, 32, 32
   \              20202020    
   \   00000014   20000000           DC8 32, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\261\\336\\301\\244\\301\\366\\261\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20B1DE       DC8 32, 32, 60, 32, 177, 222, 193, 164, 193, 246
   \              C1A4C1F6    
   \   0000000A   B1E2C1D8203E       DC8 177, 226, 193, 216, 32, 62, 32, 32, 32, 32
   \              20202020    
   \   00000014   20200000           DC8 32, 32, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\261\\336\\260\\241\\274\\323\\261\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20B1DE       DC8 32, 32, 60, 32, 177, 222, 176, 161, 188, 211
   \              B0A1BCD3    
   \   0000000A   B1E2C1D8203E       DC8 177, 226, 193, 216, 32, 62, 32, 32, 32, 32
   \              20202020    
   \   00000014   20200000           DC8 32, 32, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\260\\372\\272\\316\\307\\317\\261\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20B0FA       DC8 32, 32, 60, 32, 176, 250, 186, 206, 199, 207
   \              BACEC7CF    
   \   0000000A   B1E2C1D8203E       DC8 177, 226, 193, 216, 32, 62, 32, 32, 32, 32
   \              20202020    
   \   00000014   20000000           DC8 32, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "    [ %04d rpm ]    ">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   202020205B20       DC8 32, 32, 32, 32, 91, 32, 37, 48, 52, 100
   \              25303464    
   \   0000000A   2072706D205D       DC8 32, 114, 112, 109, 32, 93, 32, 32, 32, 32
   \              20202020    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\261\\342\\277\\357\\261\\342\\274\\2_1`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20B1E2       DC8 32, 32, 60, 32, 177, 226, 191, 239, 177, 226
   \              BFEFB1E2    
   \   0000000A   BCBCC6C3203E       DC8 188, 188, 198, 195, 32, 62, 32, 32, 32, 32
   \              20202020    
   \   00000014   20000000           DC8 32, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "     X=%-2d  Y=%-2d   ">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   202020202058       DC8 32, 32, 32, 32, 32, 88, 61, 37, 45, 50
   \              3D252D32    
   \   0000000A   642020593D25       DC8 100, 32, 32, 89, 61, 37, 45, 50, 100, 32
   \              2D326420    
   \   00000014   20200000           DC8 32, 32, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\261\\342\\277\\357\\261\\342\\274\\274\\3`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   B1E2BFEFB1E2       DC8 177, 226, 191, 239, 177, 226, 188, 188, 198, 195
   \              BCBCC6C3    
   \   0000000A   204F4B2F4553       DC8 32, 79, 75, 47, 69, 83, 67, 0, 0, 0
   \              43000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  < \\305\\260\\300\\324\\267\\302\\274\\3`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20203C20C5B0       DC8 32, 32, 60, 32, 197, 176, 192, 212, 183, 194
   \              C0D4B7C2    
   \   0000000A   BCF6C1A4203E       DC8 188, 246, 193, 164, 32, 62, 32, 32, 32, 32
   \              20202020    
   \   00000014   20202000           DC8 32, 32, 32, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "IO\\270\\246\\272\\257\\260\\346\\307\\317`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   494FB8A6BAAF       DC8 73, 79, 184, 166, 186, 175, 176, 230, 199, 207
   \              B0E6C7CF    
   \   0000000A   B7C1B8E9204F       DC8 183, 193, 184, 233, 32, 79, 75, 0, 0, 0
   \              4B000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "< GPS \\302\\367\\260\\355\\301\\366\\274`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   3C2047505320       DC8 60, 32, 71, 80, 83, 32, 194, 247, 176, 237
   \              C2F7B0ED    
   \   0000000A   C1F6BCB3C1A4       DC8 193, 246, 188, 179, 193, 164, 32, 62, 32, 32
   \              203E2020    
   \   00000014   20200000           DC8 32, 32, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\302\\367\\260\\355\\301\\366\\270\\246\\2`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   C2F7B0EDC1F6       DC8 194, 247, 176, 237, 193, 246, 184, 166, 188, 179
   \              B8A6BCB3    
   \   0000000A   C1A4202D204F       DC8 193, 164, 32, 45, 32, 79, 75, 0, 0, 0
   \              4B000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "< EMS \\265\\277\\300\\333\\271\\374\\300`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   3C20454D5320       DC8 60, 32, 69, 77, 83, 32, 181, 191, 192, 219
   \              B5BFC0DB    
   \   0000000A   B9FCC0A7BCB3       DC8 185, 252, 192, 167, 188, 179, 193, 164, 32, 62
   \              C1A4203E    
   \   00000014   20000000           DC8 32, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%s    ">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   257320202020       DC8 37, 115, 32, 32, 32, 32, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "< \\275\\272\\305\\270\\306\\256\\270\\360`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   3C20BDBAC5B8       DC8 60, 32, 189, 186, 197, 184, 198, 174, 184, 240
   \              C6AEB8F0    
   \   0000000A   C5CDBCF6C1A4       DC8 197, 205, 188, 246, 193, 164, 32, 62, 32, 0
   \              203E2000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "     [%06d]     ">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20202020205B       DC8 32, 32, 32, 32, 32, 91, 37, 48, 54, 100
   \              25303664    
   \   0000000A   5D2020202020       DC8 93, 32, 32, 32, 32, 32, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "     [%06s]     ">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   20202020205B       DC8 32, 32, 32, 32, 32, 91, 37, 48, 54, 115
   \              25303673    
   \   0000000A   5D2020202020       DC8 93, 32, 32, 32, 32, 32, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "< EMS \\265\\277\\300\\333\\274\\323\\265`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   3C20454D5320       DC8 60, 32, 69, 77, 83, 32, 181, 191, 192, 219
   \              B5BFC0DB    
   \   0000000A   BCD3B5B5BCB3       DC8 188, 211, 181, 181, 188, 179, 193, 164, 32, 62
   \              C1A4203E    
   \   00000014   20000000           DC8 32, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "    [ %04d km ]    ">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   202020205B20       DC8 32, 32, 32, 32, 91, 32, 37, 48, 52, 100
   \              25303464    
   \   0000000A   206B6D205D20       DC8 32, 107, 109, 32, 93, 32, 32, 32, 32, 0
   \              20202000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "< \\273\\347\\277\\353\\300\\332\\270\\336`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   3C20BBE7BFEB       DC8 60, 32, 187, 231, 191, 235, 192, 218, 184, 222
   \              C0DAB8DE    
   \   0000000A   B4BA203E2000       DC8 180, 186, 32, 62, 32, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "8 \\277\\265\\273\\363\\306\\337\\277\\376`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   3820BFB5BBF3       DC8 56, 32, 191, 181, 187, 243, 198, 223, 191, 254
   \              C6DFBFFE    
   \   0000000A   BEEE20202000       DC8 190, 238, 32, 32, 32, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%s">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   25730000           DC8 37, 115, 0, 0

   Maximum stack usage in bytes:

     Function             .cstack
     --------             -------
     Display                  32
     EMS_View_Mode             8
     InputIO_Reverse_View      8
     InputIO_View              8
     Input_View                8
     LED2_GREEN                8
     LED2_OFF                  8
     Write_Word                8
     memset                    8


   Section sizes:

     Function/Label                                   Bytes
     --------------                                   -----
     memset                                             20
     LED2_OFF                                           28
     LED2_GREEN                                         28
     DisplayInfo                                         8
     Display_Buff                                      100
     IOReverse_Count                                     1
     GLCD_Refresh_Flag                                   1
     Toogle_Cursor                                       1
     Wait_x                                              1
     Wait_y                                              1
     LCD_WaitString                                     52
     BAKUP_WORD                                         20
     EMS_WORD                                           12
     EMS_ON_WORD                                        52
     EMS_OFF_WORD                                       72
     DISP_WORD                                          40
     EMS_View_Mode                                      80
     InputIO_View                                      484
     InputIO_Reverse_View                              856
     Input_View                                        280
     Write_Word                                         20
     Display                                          5884
     Display_Time                                        2
     Led_Flag                                            1
     ??DataTable165                                      4
     ??DataTable168                                      4
     ??DataTable168_1                                    4
     ??DataTable168_2                                    4
     ??DataTable168_3                                    4
     ??DataTable168_4                                    4
     ??DataTable168_5                                    4
     ??DataTable168_6                                    4
     ??DataTable168_7                                    4
     ??DataTable168_8                                    4
     ??DataTable168_9                                    4
     ??DataTable168_10                                   4
     ??DataTable168_11                                   4
     ??DataTable168_12                                   4
     ??DataTable168_13                                   4
     ??DataTable168_14                                   4
     ??DataTable168_15                                   4
     ??DataTable168_16                                   4
     ??DataTable168_17                                   4
     ??DataTable168_18                                   4
     ??DataTable168_19                                   4
     ??DataTable168_20                                   4
     ??DataTable168_21                                   4
     ??DataTable168_22                                   4
     ??DataTable168_23                                   4
     ?<Constant "BREAK ">                                8
     ?<Constant "GEAR  ">                                8
     ?<Constant "PARKING">                               8
     ?<Constant "RLIGHT">                                8
     ?<Constant "LLIGHT">                                8
     ?<Constant "F_DOOR">                                8
     ?<Constant "R_DOOR">                                8
     ?<Constant "KEY_ON">                                8
     ?<Constant "LPGP %04.1f">                          12
     ?<Constant "AirP %04.1f">                          12
     ?<Constant "WTmp %04.1f">                          12
     ?<Constant "Batt %04.1f">                          12
     ?<Constant "Fuel %04.1f">                          12
     ?<Constant "Accl %04.1f">                          12
     ?<Constant " COMMNUNICATION MODE  ">               24
     ?<Constant "  CONNECT USE CABLE   ">               24
     ?<Constant "   - TEAHO TECH -   ">                 24
     ?<Constant " EMS_SYSTEM V000033 ">                 24
     ?<Constant "%02d/%02d/%02d %02d:%...">             32
     ?<Constant "%4d RPM %3d km %c%02d">                24
     ?<Constant "  < \300\317\300\317\277\356\307\3     24
     ?<Constant "      [ %02d:%02d ]  ...">             28
     ?<Constant "\300\317\301\326\307\340      %05d     20
     ?<Constant "\303\321\301\326\307\340    %07d k     20
     ?<Constant "  < \277\356\300\374\300\332\304\3     20
     ?<Constant "  \277\356\300\374\300\332\274\261     24
     ?<Constant "[%018s]">                               8
     ?<Constant "  < \261\342\277\357\261\342\274\2     20
     ?<Constant "   [ X=%-2d  Y=%-2d ]  ">              24
     ?<Constant "< \275\303\265\277\270\360\305\315     24
     ?<Constant "     [ %06d ]   ">                     20
     ?<Constant "GPS-X %03d.%06d">                      16
     ?<Constant "GPS-Y %03d.%06d">                      16
     ?<Constant "  < \306\337\277\376\276\356\271\3     20
     ?<Constant "   [ %09s ]   ">                       16
     ?<Constant "120118-01">                            12
     ?<Constant "  < \307\374\275\304\275\302\300\3     24
     ?<Constant "   [ %010s ]   ">                      16
     ?<Constant "  < \301\246\307\260\300\317\267\3     24
     ?<Constant " [ %014s ]   ">                        16
     ?<Constant "  < \273\347\277\353\300\332\270\3     20
     ?<Constant " 1. \300\332\267\341\300\372\300\3     20
     ?<Constant " 2. \277\356\300\374\300\332\274\2     20
     ?<Constant " 3. \302\367\267\256\271\370\310\2     20
     ?<Constant "  < \273\347\277\353\300\332\270\3_1   24
     ?<Constant " 4. \310\257\260\346\274\263\301\2     24
     ?<Constant " 5. \306\337\277\376\276\356\276\3     24
     ?<Constant "[OK]\271\366\306\260\300\273\264\2     24
     ?<Constant "\276\367\265\245\300\314\306\256\2     16
     ??DataTable169                                      4
     ??DataTable169_1                                    4
     ??DataTable169_2                                    4
     ??DataTable169_3                                    4
     ??DataTable169_4                                    4
     ??DataTable169_5                                    4
     ??DataTable169_6                                    4
     ??DataTable169_7                                    4
     ??DataTable169_8                                    4
     ??DataTable169_9                                    4
     ??DataTable169_10                                   4
     ??DataTable169_11                                   4
     ??DataTable169_12                                   4
     ??DataTable169_13                                   4
     ??DataTable169_14                                   4
     ??DataTable169_15                                   4
     ??DataTable169_16                                   4
     ??DataTable169_17                                   4
     ??DataTable169_18                                   4
     ??DataTable169_19                                   4
     ??DataTable169_20                                   4
     ??DataTable169_21                                   4
     ??DataTable169_22                                   4
     ??DataTable169_23                                   4
     ??DataTable169_24                                   4
     ??DataTable169_25                                   4
     ??DataTable169_26                                   4
     ??DataTable169_27                                   4
     ??DataTable169_28                                   4
     ??DataTable169_29                                   4
     ??DataTable169_30                                   4
     ??DataTable169_31                                   4
     ??DataTable169_32                                   4
     ??DataTable169_33                                   4
     ??DataTable169_34                                   4
     ??DataTable169_35                                   4
     ??DataTable169_36                                   4
     ??DataTable169_37                                   4
     ??DataTable169_38                                   4
     ??DataTable169_39                                   4
     ??DataTable169_40                                   4
     ??DataTable169_41                                   4
     ??DataTable169_42                                   4
     ??DataTable169_43                                   4
     ??DataTable169_44                                   4
     ??DataTable169_45                                   4
     ??DataTable169_46                                   4
     ??DataTable169_47                                   4
     ??DataTable169_48                                   4
     ??DataTable169_49                                   4
     ??DataTable169_50                                   4
     ??DataTable169_51                                   4
     ??DataTable169_52                                   4
     ??DataTable169_53                                   4
     ??DataTable169_54                                   4
     ??DataTable169_55                                   4
     ??DataTable169_56                                   4
     ??DataTable169_57                                   4
     ??DataTable169_58                                   4
     ??DataTable169_59                                   4
     ??DataTable169_60                                   4
     ??DataTable169_61                                   4
     ??DataTable169_62                                   4
     ??DataTable169_63                                   4
     ??DataTable169_64                                   4
     ??DataTable169_65                                   4
     ??DataTable169_66                                   4
     ??DataTable169_67                                   4
     ??DataTable169_68                                   4
     ??DataTable169_69                                   4
     ??DataTable169_70                                   4
     ??DataTable169_71                                   4
     ??DataTable169_72                                   4
     ??DataTable169_73                                   4
     ??DataTable169_74                                   4
     ??DataTable169_75                                   4
     ??DataTable169_76                                   4
     ??DataTable169_77                                   4
     ?<Constant "- \277\300\264\303\271\351\276\367     16
     ?<Constant "- \307\317\267\347\271\351\276\367     16
     ?<Constant "- \300\317\301\326\300\317\271\351     16
     ?<Constant "- \307\321\264\336\271\351\276\367     16
     ?<Constant "- \274\274\264\336\271\351\276\367     16
     ?<Constant "- \300\374\303\274\263\353\274\261     20
     ?<Constant " 6. \273\347\277\356\265\345\276\3     24
     ?<Constant "- \302\367\260\355\301\366\265\277     20
     ?<Constant "- \300\372\300\345\277\317\267\341     24
     ?<Constant "- \265\356\267\317\261\270\260\243     20
     ?<Constant "0.\275\303\265\277\277\302\265\277     24
     ?<Constant "1.\277\241\304\332\271\366\306\260     24
     ?<Constant "2.\275\303\265\277\305\260\277\300     24
     ?<Constant "3. RPM\300\314\300\326\300\275         24
     ?<Constant "4. SPEED\260\241\300\326\300\275       24
     ?<Constant "5. GPS\277\241\274\323\265\265\260     24
     ?<Constant " 7. \306\304\266\363\271\314\305\3     24
     ?<Constant "[OK]\264\251\270\243\270\351\275\3     20
     ?<Constant "6.\261\342\276\356\260\241\301\337     24
     ?<Constant "\276\367\265\245\300\314\306\256\3     20
     ?<Constant "7. 1\303\312\260\243\300\347\275\3     24
     ?<Constant "8.\275\303\265\277\300\347\275\303     24
     ?<Constant "9. BREAK\271\342\301\366\276\312\3     24
     ?<Constant "10.BREAK\266\347\301\366\276\312\3     24
     ?<Constant "WIFI\276\367\265\245\300\314\306\2     24
     ?<Constant "  < \275\272\307\307\304\277\272\2     24
     ?<Constant "11. \270\360\265\347\301\266\260\3     24
     ?<Constant "    [ %03d %% ]      ">                24
     ?<Constant "  < \300\372\300\345  \270\336\264     20
     ?<Constant "12. \260\370\310\270\300\374\301\3     24
     ?<Constant "- \274\261\305\303\271\351\276\367     24
     ?<Constant "0.\275\303\265\277\277\300\307\301     24
     ?<Constant " [%03d]-%02d%02d%02d ">                24
     ?<Constant "- DataSave        ">                   20
     ?<Constant "3. RPM\300\314\276\370\300\275         24
     ?<Constant "5. GPS\277\241\274\323\265\265\260_1   24
     ?<Constant "7.\277\356\307\340\301\337\271\350     24
     ?<Constant "8.\261\342\301\330\271\350\305\315     24
     ?<Constant "9.\263\303\260\242\274\366\260\241     24
     ?<Constant "10. \277\241\276\356\276\320\300\3     24
     ?<Constant "11. \261\342\277\357\261\342 X\277     24
     ?<Constant "  < \300\372\300\345  \270\336\264_1   20
     ?<Constant "12. \261\342\277\357\261\342 Y\277     24
     ?<Constant "- \261\342\260\243\271\351\276\367     24
     ?<Constant "13.GPS\271\374\300\247\271\376\276     24
     ?<Constant "14. \306\304\305\267\272\352\267\2     24
     ?<Constant "- \300\372\300\345\301\337\300\324     24
     ?<Constant "15. \303\312\261\342 3\272\320\264     24
     ?<Constant "16. \270\360\265\347\270\270\301\2     24
     ?<Constant "17. \260\370\310\270\300\374\270\3     24
     ?<Constant "- USB \276\370\300\275          ">     24
     ?<Constant "%s ">                                   4
     ?<Constant "- \300\374\303\274\271\351\276\367     24
     ?<Constant "- \300\374\303\274\271\351\276\367_1   24
     ?<Constant "- \300\372\300\345\301\337\300\324_1   20
     ?<Constant "- \303\346\265\271\265\245\300\314     28
     ?<Constant "- \300\374\303\274\300\372\300\345     24
     ?<Constant "  < \277\356\300\374\300\332\274\2     24
     ?<Constant "  %s">                                  8
     ?<Constant "  < \302\367\267\256  \271\370\310     20
     ?<Constant "  < \276\317\310\243\304\332\265\3     20
     ?<Constant "      [ %4s ]  ">                      16
     ?<Constant "  < \277\356\300\374\300\332  \272     24
     ?<Constant "- \277\356\300\374\300\332\260\241     20
     ?<Constant "%d-%018s">                             12
     ?<Constant "  < \271\366\275\272\302\367\267\2     20
     ?<Constant "  \307\366\264\3532006-1     ">        20
     ?<Constant "  \307\366\264\3532007-2      ">       20
     ?<Constant "  \307\366\264\3532011-3     ">        20
     ?<Constant "  \307\374\264\3532011\300\372\273     20
     ?<Constant "  \307\366\264\353\261\270\307\374     20
     ?<Constant "  \307\366\264\353\275\305\307\374     20
     ?<Constant "  \307\366\264\353\275\305\307\374_1   20
     ?<Constant "  \264\353\277\354\261\270\307\374     20
     ?<Constant "  \264\353\277\354\261\270\307\374_1   20
     ?<Constant "  \264\353\277\354\275\305\307\374     20
     ?<Constant "  \264\353\277\354\275\305\307\374_1   24
     ?<Constant "  \261\333\267\316\271\372\275\303     20
     ?<Constant "  \304\253\277\356\306\274\261\270     20
     ?<Constant "  \304\253\277\356\306\274\275\305     24
     ?<Constant "  < \274\323\265\265\273\363\274\3     20
     ?<Constant "      [%06d]     ">                    20
     ?<Constant "      [%06s]    ">                     20
     ?<Constant "  < RPM \273\363\274\366\272\257\2     20
     ?<Constant "      [%06s]     ">                    20
     ?<Constant "  < \274\323\265\265\261\342\301\3     20
     ?<Constant "    [ %4.1f V ]     ">                 24
     ?<Constant "  < RPM \261\342\301\330\300\374\2     24
     ?<Constant "  < \277\241\276\356\276\320  \300     24
     ?<Constant "  < \263\303\260\242\274\366  \277     24
     ?<Constant "  < \260\372\274\323  \261\342\301     24
     ?<Constant "     [ %03d km ]     ">                24
     ?<Constant "  < \261\336\301\244\301\366\261\3     24
     ?<Constant "  < \261\336\260\241\274\323\261\3     24
     ?<Constant "  < \260\372\272\316\307\317\261\3     24
     ?<Constant "    [ %04d rpm ]    ">                 24
     ?<Constant "  < \261\342\277\357\261\342\274\2_1   24
     ?<Constant "     X=%-2d  Y=%-2d   ">               24
     ?<Constant "\261\342\277\357\261\342\274\274\3     20
     ?<Constant "  < \305\260\300\324\267\302\274\3     24
     ?<Constant "IO\270\246\272\257\260\346\307\317     20
     ?<Constant "< GPS \302\367\260\355\301\366\274     24
     ?<Constant "\302\367\260\355\301\366\270\246\2     20
     ?<Constant "< EMS \265\277\300\333\271\374\300     24
     ?<Constant "%s    ">                                8
     ?<Constant "< \275\272\305\270\306\256\270\360     20
     ?<Constant "     [%06d]     ">                     20
     ?<Constant "     [%06s]     ">                     20
     ?<Constant "< EMS \265\277\300\333\274\323\265     24
     ?<Constant "    [ %04d km ]    ">                  20
     ?<Constant "< \273\347\277\353\300\332\270\336     16
     ?<Constant "8 \277\265\273\363\306\337\277\376     16
     ?<Constant "%s">                                    4

 
    168 bytes in section .bss
    196 bytes in section .data
 11 380 bytes in section .text
 
 11 360 bytes of CODE memory (+ 20 bytes shared)
    364 bytes of DATA memory

Errors: none
Warnings: none
