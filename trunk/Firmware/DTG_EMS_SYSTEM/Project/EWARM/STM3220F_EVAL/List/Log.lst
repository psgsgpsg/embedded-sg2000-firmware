###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.1.52143/W32 for ARM     19/Jan/2012  11:09:05 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\Log.c    #
#    Command line =  F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\Log.c    #
#                    -D USE_STDPERIPH_DRIVER -D STM32F2XX -D                  #
#                    USE_STM3220F_EVAL -D USE_USB_OTG_FS -D                   #
#                    RTC_CLOCK_SOURCE_LSE -lC F:\Work\S&G2000\Firmware\DTG_EM #
#                    S_SYSTEM\Project\EWARM\STM3220F_EVAL\List\ -lA           #
#                    F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\ST #
#                    M3220F_EVAL\List\ -o F:\Work\S&G2000\Firmware\DTG_EMS_SY #
#                    STEM\Project\EWARM\STM3220F_EVAL\Obj\ --no_cse           #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program  #
#                    Files\IAR Systems\Embedded Workbench                     #
#                    6.0\arm\INC\c\DLib_Config_Full.h" -I                     #
#                    F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\.. #
#                    \ -I F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWA #
#                    RM\..\..\Libraries\CMSIS\CM3\CoreSupport\ -I             #
#                    F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\.. #
#                    \..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F2xx\ -I   #
#                    F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\.. #
#                    \..\Libraries\STM32F2xx_StdPeriph_Driver\inc\ -I         #
#                    F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\.. #
#                    \..\Utilities\STM32_EVAL\ -I                             #
#                    F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\.. #
#                    \..\Utilities\STM32_EVAL\Common\ -I                      #
#                    F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\.. #
#                    \..\Utilities\STM32_EVAL\STM3220F_EVAL\ -I               #
#                    F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\.. #
#                    \..\Libraries\STM32_USB_OTG_Driver\inc\ -I               #
#                    F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\.. #
#                    \..\Libraries\STM32_USB_Device_Library\Core\inc\ -I      #
#                    F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\.. #
#                    \..\Libraries\STM32_USB_Device_Library\Class\msc\inc\    #
#                    -I F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM #
#                    \..\Usb\ -I F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Proj #
#                    ect\EWARM\..\Usb\Inc\ -I F:\Work\S&G2000\Firmware\DTG_EM #
#                    S_SYSTEM\Project\EWARM\..\Usb\src\ -I                    #
#                    F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\.. #
#                    \..\Libraries\STM32_USB_HOST_Library\Core\inc\ -I        #
#                    F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\.. #
#                    \..\Libraries\STM32_USB_HOST_Library\Class\MSC\inc\ -I   #
#                    F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\.. #
#                    \..\Libraries\STM32_USB_Device_Library\Class\cdc\inc\    #
#                    -Ol --use_c++_inline                                     #
#    List file    =  F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\ST #
#                    M3220F_EVAL\List\Log.lst                                 #
#    Object file  =  F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\EWARM\ST #
#                    M3220F_EVAL\Obj\Log.o                                    #
#                                                                             #
#                                                                             #
###############################################################################

F:\Work\S&G2000\Firmware\DTG_EMS_SYSTEM\Project\Log.c
      1          #include "Log.h"
      2          #include "main.h"

   \                                 In section .text, align 2
   \   __intrinsic __interwork __softfp void *memcpy(void *, void const *, size_t)
   \                     memcpy:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   0400               MOVS     R4,R0
   \   00000004   2000               MOVS     R0,R4
   \   00000006   ........           BL       __aeabi_memcpy
   \   0000000A   2000               MOVS     R0,R4
   \   0000000C   10BD               POP      {R4,PC}          ;; return
      3          #include "usbh_usr.h"

   \                                 In section .bss, align 1
      4          u8 Device;    // 출력 디바이스 설정
   \                     Device:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
      5          u32 LOGWRITE;
   \                     LOGWRITE:
   \   00000000                      DS8 4
      6          

   \                                 In section .text, align 2, keep-with-next
      7          void Log_Config(void)
      8          {
      9               /*|  LOG_RFMODULE  LOG_KEY*/ /* LOG_GPS_RECIEVE| LOG_GPS_TIME_CHECK |*//*LOG_RPM | LOG_SPEED |  | */
     10               LOGWRITE = LOG_BASIC | LOG_MEMORY | LOG_EEPROM |LOG_TILT| LOG_EMS_ENGINE | LOG_USB_SYSTEM;    // 로그 기록 여부
   \                     Log_Config:
   \   00000000   ....               LDR.N    R0,??DataTable2
   \   00000002   41F23151           MOVW     R1,#+5425
   \   00000006   0160               STR      R1,[R0, #+0]
     11               LOGWRITE = 0;//LOG_RPM | LOG_SPEED;
   \   00000008   ....               LDR.N    R0,??DataTable2
   \   0000000A   0021               MOVS     R1,#+0
   \   0000000C   0160               STR      R1,[R0, #+0]
     12               Device = UART_OUT| USB_OUT;
   \   0000000E   ....               LDR.N    R0,??DataTable2_1
   \   00000010   0321               MOVS     R1,#+3
   \   00000012   0170               STRB     R1,[R0, #+0]
     13               
     14          }
   \   00000014   7047               BX       LR               ;; return
     15          

   \                                 In section .text, align 2, keep-with-next
     16          void Write_Log(unsigned char* string,unsigned char Code )
     17          {
   \                     Write_Log:
   \   00000000   00B5               PUSH     {LR}
   \   00000002   B5B0               SUB      SP,SP,#+212
     18                   
     19               u8 TempBuff[200];
     20          
     21               sprintf((char *)TempBuff,"[%02d:%02d:%02d-%02x] %s", 
     22                       RTC_TimeStructure.RTC_Hours, RTC_TimeStructure.RTC_Minutes, RTC_TimeStructure.RTC_Seconds,
     23                       Code,
     24                       string);
   \   00000004   0290               STR      R0,[SP, #+8]
   \   00000006   C9B2               UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000008   0191               STR      R1,[SP, #+4]
   \   0000000A   ....               LDR.N    R0,??DataTable2_2
   \   0000000C   8078               LDRB     R0,[R0, #+2]
   \   0000000E   0090               STR      R0,[SP, #+0]
   \   00000010   ....               LDR.N    R0,??DataTable2_2
   \   00000012   4378               LDRB     R3,[R0, #+1]
   \   00000014   ....               LDR.N    R0,??DataTable2_2
   \   00000016   0278               LDRB     R2,[R0, #+0]
   \   00000018   ........           ADR.W    R1,`?<Constant "[%02d:%02d:%02d-%02x] %s">`
   \   0000001C   03A8               ADD      R0,SP,#+12
   \   0000001E   ........           BL       sprintf
     25               
     26               if( Device & UART_OUT == UART_OUT )   // 통신포트로 전송
   \   00000022   ....               LDR.N    R0,??DataTable2_1
   \   00000024   0078               LDRB     R0,[R0, #+0]
   \   00000026   C007               LSLS     R0,R0,#+31
   \   00000028   02D5               BPL.N    ??Write_Log_0
     27               {
     28                    printf((char *)TempBuff);           
   \   0000002A   03A8               ADD      R0,SP,#+12
   \   0000002C   ........           BL       printf
     29               }     
     30          
     31               if( Device & USB_OUT == USB_OUT)     // USB로 전송
   \                     ??Write_Log_0:
   \   00000030   ....               LDR.N    R0,??DataTable2_1
   \   00000032   0078               LDRB     R0,[R0, #+0]
   \   00000034   C007               LSLS     R0,R0,#+31
   \   00000036   0BD5               BPL.N    ??Write_Log_1
     32               {
     33                    if( USBH_USR_ApplicationState == USH_USR_FS_IDLE)      // USB가 준비가 되었다면 출력
   \   00000038   ....               LDR.N    R0,??DataTable2_3
   \   0000003A   0078               LDRB     R0,[R0, #+0]
   \   0000003C   0128               CMP      R0,#+1
   \   0000003E   07D1               BNE.N    ??Write_Log_1
     34                    {
     35                         USBH_USR_ActionFlag = USH_USR_FS_WRITELOG;
   \   00000040   ....               LDR.N    R0,??DataTable2_4
   \   00000042   0221               MOVS     R1,#+2
   \   00000044   0170               STRB     R1,[R0, #+0]
     36                         memcpy( USBH_USR_Log_Buffer, TempBuff, sizeof(TempBuff) ) ;
   \   00000046   C822               MOVS     R2,#+200
   \   00000048   03A9               ADD      R1,SP,#+12
   \   0000004A   ....               LDR.N    R0,??DataTable2_5
   \   0000004C   ........           BL       memcpy
     37                    }
     38               }
     39          }
   \                     ??Write_Log_1:
   \   00000050   35B0               ADD      SP,SP,#+212
   \   00000052   00BD               POP      {PC}             ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   ........           DC32     LOGWRITE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   ........           DC32     Device

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   ........           DC32     RTC_TimeStructure

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   ........           DC32     USBH_USR_ApplicationState

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   ........           DC32     USBH_USR_ActionFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   ........           DC32     USBH_USR_Log_Buffer

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "[%02d:%02d:%02d-%02x] %s">`:
   \   00000000                      ; Initializer data, 28 bytes
   \   00000000   5B253032643A       DC8 91, 37, 48, 50, 100, 58, 37, 48, 50, 100
   \              25303264    
   \   0000000A   3A253032642D       DC8 58, 37, 48, 50, 100, 45, 37, 48, 50, 120
   \              25303278    
   \   00000014   5D2025730000       DC8 93, 32, 37, 115, 0, 0, 0, 0
   \              0000        

   Maximum stack usage in bytes:

     Function   .cstack
     --------   -------
     Log_Config      0
     Write_Log     216
     memcpy          8


   Section sizes:

     Function/Label                         Bytes
     --------------                         -----
     memcpy                                   14
     Device                                    1
     LOGWRITE                                  4
     Log_Config                               22
     Write_Log                                84
     ??DataTable2                              4
     ??DataTable2_1                            4
     ??DataTable2_2                            4
     ??DataTable2_3                            4
     ??DataTable2_4                            4
     ??DataTable2_5                            4
     ?<Constant "[%02d:%02d:%02d-%02x] %s">   28

 
   5 bytes in section .bss
 172 bytes in section .text
 
 158 bytes of CODE memory (+ 14 bytes shared)
   5 bytes of DATA memory

Errors: none
Warnings: none
